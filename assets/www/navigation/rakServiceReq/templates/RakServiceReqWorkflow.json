{
	"pageNavigation": [{
		"RakServicesLandingPage": [

			{
				"eventName": "onDiscAndapplyLinkClicked",
				"action": "RakDiscAndapplyInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			{
				"eventName": "onRakUpdatePersonalProfileClick",
				"action": "RakUpdatePPInit",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"USER_TYPE_VALUE": "dashboard.userType",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakMyProfile",
					"pageName": "RakUpdatePersonalProfile"
				},
				"errorPage": {
					"subFeature": "rakMyProfile",
					"pageName": "RakServicesLandingPage"
				}
			},
			 {
				"eventName": "onRAKUnblockDebitCardClick",
				"action": "RakUnBlockDebitCardClickInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockDebitCardSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRakStopChequeReqInitClick",
				"action": "RakStopChequeRequestInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakStopChequeRequestInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKCCConvertionEmiPreClick",
				"action": "RakCCConvertionEmiPreService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCConvertionEmiPre"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onInvestmentSubscriptionClick",
				"action": "RakInvestmentSubscriptionsInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakInvestmentSubscriptionsInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRakIslamicOpenNewTermDepositClick",
				"action": "RakIslamicDepOpenNewTermDepositInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakIslamicDepositOpenNewTermSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakOpenNewTermDepositClick",
				"action": "RakDepOpenNewTermDepositInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDepositOpenNewTermSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onInstallmentPostponementClick",
				"action": "RakInstallmentPostponementPreService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakInstallmentPostponementFetch"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onApplyForPrepaidCardClick",
				"action": "RakApplyForPrepaidCardService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyForPrepaidCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRAKTempBlockDebitCardClick",
				"action": "RakTempBlockDebitCardClickInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTempBlockDebitCardClickInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}

			}, {
				"eventName": "onLoanRepayInitClick",
				"action": "RakLoanRepayServiceReqService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLoanRepayHomeServiceReq"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCCBalnceTransferInit",
				"action": "RakCreditCardBalanceTransferInit",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCreditCardBalanceTransferInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakEarlDebitCardRenewalClick",
				"action": "RakEarlDebitCardRenewalRequestService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakEarlDebitCardRenewalPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},


			{
				"eventName": "onRAKEarlyCardRenewalInitClick",
				"action": "RAKEarlyCardRenewalInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKEarlyCardRenewalInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},


			{
				"eventName": "onClosureTDConvClick",
				"action": "RakCTDInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"RequestId": "rakServiceReq.RakClosureTermDepositModel.closureType"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakClosureTermDeposit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKEarlyCardRenewalInitClick",
				"action": "RAKEarlyCardRenewalInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKEarlyCardRenewalInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKLoanPreClosureInitClick",
				"action": "RAKLoanPreClosureInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKLoanPreClosureInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOprAcctBalConfLinkClick",
				"action": "RAKOprAcctBalConfReqInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprAcctBalanceConfReqInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, 
			
			
			 {
				"eventName": "onRAKBankRefLetterInitClick",
				"action": "RAKBankRefLetterInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKBankRefLetterInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			
			
			{
				"eventName": "onRAKAlertPrefLinkClick",
				"action": "RAKAlertPrefInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKAlertPrefInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRAKDirRegClick",
				"action": "RAKDirRegRequestInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKDirRegRequest"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onServiceRequestStatusClick",
				"action": "ServiceRequestStatusInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"TXN_DATE_FROM":"rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_TO":"rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_FROM_day": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_FROM_month": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_FROM_year": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_TO_day": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_TO_month": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"TXN_DATE_TO_year": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"RequestType": "rakServiceReq.serviceRequestStatusModel.emptyValue",
					"RequestStatus": "rakServiceReq.serviceRequestStatusModel.requestType",
					"ReferenceId": "rakServiceReq.serviceRequestStatusModel.emptyValue"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestStatus"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onChangeCCClick",
				"action": "RakChangeCreditCardLimitInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakChangeCCLimitPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onAmendStandingInstClick",
				"action": "RakAmendStandingInstInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakAmendStandingInst"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onTempReleaseLetterClick",
				"action": "RakTempReleaseLetterInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTemporaryReleaseLetter"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, 
			
			{
				"eventName": "onTLUploadInit",
				"action": "RakTLUploadInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			
			{
				"eventName": "onChequeStopClick",
				"action": "ChequesStopInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakChequeSingleStop"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onBlockDebitCardClick",
				"action": "BlockDebitCardInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "BlockCreditCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onChequeCommuincationBookClick",
				"action": "ChequeBookRequestInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakChequeCommuincationBook"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onBlockDebitCardClick",
				"action": "BlockDebitCardInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "BlockCreditCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onBlockCreditCardClick",
				"action": "BlockCreditCardInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "BlockCreditCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRenewDBClick",
				"action": "RenewFixedDepositInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RenewFixedDeposit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKDirRegClick",
				"action": "RAKDirRegRequestInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKDirRegRequest"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onNewCreditCardClick",
				"action": "ApplyNewCreditCardService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "ApplyNewCreditCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "ApplyNewCreditCard"
				}
			}, {
				"eventName": "onDCCashRedeemlick",
				"action": "RakDebitCardCashRedeem",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyCashRedeemDebitCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyCashRedeemDebitCard"
				}
			}, {
				"eventName": "onReplacementCCClick",
				"action": "RakReplacementCCService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCreditCardReplacement"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onReplacementDCClick",
				"action": "RakReplacementDCService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDebitCardReplacement"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onAdvanceClick",
				"action": "RakAdvanceSalaryService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyAdvanceSalary"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onCCCashRedeemlick",
				"action": "RakCreditCardCashRedeem",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyCashRedeemCreditCard"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyCashRedeemCreditCard"
				}
			}, {
				"eventName": "onEvantageClick",
				"action": "RakEvantageBalanceService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakEvantageBalanceOrderPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onTempBlockCCClick",
				"action": "RakTempBlkCCService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakBlockedCreditCardPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOprSavingAcctOpenLinkClick",
				"action": "RAKOprSavingAcctOpenInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprSavingAcctOpenInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprSavingAcctOpenInit"
				}
			},

			{
				"eventName": "onRAKOprEvantageAcctOpenLinkClick",
				"action": "RAKOprEvantageAcctOpenInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprEvantageAcctOpenInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprEvantageAcctOpenInit"
				}
			}, {
				"eventName": "onReplacementCCClick",
				"action": "RakReplacementCCService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCreditCardReplacement"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOprFSAcctOpenLinkClick",
				"action": "RAKOprFSAcctOpenInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprFSAcctOpenInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprFSAcctOpenInit"
				}
			}, {
				"eventName": "onRAKOprCurrentAcctOpenLinkClick",
				"action": "RAKOprCurrentAcctOpenInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprCurrentAcctOpenInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprCurrentAcctOpenInit"
				}
			}, {
				"eventName": "onRAKUnblockCreditCardInitClick",
				"action": "RakUnBlockCreditCardClickInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOprEvantageMailCheckSRInitClick",
				"action": "RakOprEvantageMailChqSRInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprEvantageMailChqSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOprIslamicAcctOpenLinkClick",
				"action": "RAKOprIslamicAcctOpenInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprIslamicAcctOpenInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprIslamicAcctOpenInit"
				}
			}, {
				"eventName": "onRAKInvRedeemGoldInitClick",
				"action": "RAKInvRedeemGoldInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKInvRedeemGoldInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKLoanMortgageAmalHomeFinInitClick",
				"action": "RAKLoanMortgageAmalHomeFinInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKLoanMortgageAmalHomeFinInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakOprAccDupStmtInitClick",
				"action": "RakOprAccDupStmtInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprAccDupStmtInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakDCApplyInitClick",
				"action": "RakDCApplyInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDCApplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakLoanFinPRLInitClick",
				"action": "RakLoanFinPRLInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLoanFinPRLInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onAmmendFDIslamicClick",
				"action": "RakAmmendFDIslamicService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKAmmendIslamicDeposit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onAmmendFDClick",
				"action": "RakAmmendFDService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKAmmendDeposit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRenewFDClick",
				"action": "RakRenewalTermDepositService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKRenewalTermDeposit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRenewFDIslamicClick",
				"action": "RakRenewalFDIslamicService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKRenewalTermDepositIslamic"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onLcOrNlcClick",
				"action": "RakLcOrNlcInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLcOrNlcInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKInvOpenGoldAccInitClick",
				"action": "RAKInvOpenGoldAccInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKInvOpenGoldAccInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRenewFDIslamicClick",
				"action": "RakRenewalFDIslamicService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKRenewalTermDepositIslamic"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakDCCashBkRedemInitClick",
				"action": "RAKDCCashBkRedemInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKDCCashBkRedemInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakGenRqEStmtInitClick",
				"action": "RAKGenRqEStmtInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKGenRqEStmtInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onChangeBillDateCCClick",
				"action": "RakChangeBillingDateInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakChangeBillingCreditCardPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onChangeReportCaptureCCClick",
				"action": "RAKChangeReportCaptureInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKCreditCardReportCapture"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDebitReportCaptureClick",
				"action": "RakDebitReportCaptureInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDebitReportCaptureInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCSRInitClick",
				"action": "RakCSRInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CC_PhysicalStmtReq_Init"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKCCStandingInstInitClick",
				"action": "RAKCCStandingInstInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKCCStandingInstInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakApplyCCInitClick",
				"action": "RakApplyCCInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyCCInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCADInitClick",
				"action": "RakCADInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CCTxnDispute_Init"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCCChequeReqInitClick",
				"action": "RakCCChequeRequestInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCChequeRequestInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOprDDChequeRequestClick",
				"action": "RakOprDDChequeReqInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOPRDDChequeRequestInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRAKCCConvertionEmiPreClick",
				"action": "RakCCConvertionEmiPreService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCConvertionEmiPre"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRemitSummCancelClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakRemittanceSummaryPre"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCCPinReissueCardsListFetchClick",
				"action": "RakCCPinReissueCardFetchService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCDCPinReissueInitPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakDCPinReissueCardsListFetchClick",
				"action": "RakDCPinReissueCardFetchService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCDCPinReissueInitPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRAKOpenInvAccClick",
				"action": "RakOpenInvAccountSRInit",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakInvOpenAccountSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCCCashBkRedemInitClick",
				"action": "RAKCCCashBkRedemInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKCCCashBkRedemInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakCCPinSetInitClick",
				"action": "RakCCPinSetInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKCCPinSetSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRakTransactionLimitChangeRqClick",
				"action": "RakTransactionLimitChangeRqInit",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTransactionLimitChangeInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onRakKYCRenInitClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKKYCRenInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRakInvestmentRedemptionRqClick",
				"action": "RakInvestmentRedemptionSRInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakInvestmentRedemptionSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onCcSmartCashRqClick",
				"action": "RakCreditCardSmartCashSRInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCreditCardSmartCashSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			
			 {
			                    "eventName": "onRegisterSageClick",
			                    "action": "navigation",
			                    "actionType": "navigation",
			                    "validation": "false",
			                    
			                "successPage": {  
			                          "subFeature": "rakServiceReq",                 
			                        "pageName": "RakSageRegister"
			                    },
			                    "errorPage": {
			                        "subFeature": "rakServiceReq",
			                        "pageName": "RakServicesLandingPage"
			                    }
                }  , 
                
                 
                
			
		{
			"eventName": "onRAKConnectInitClick",
			"action": "RAKConnectInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},
		 {                
                    "eventName": "onPayDDMCHClick",
                    "action": "RAKGetPayeeListService",
                    "actionType": "service",
                    "validation": "false",
                    "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",
				        "BNF_TYPE":"rakPayee.bankbnftype"
                    },
                    "successPage": {
                        "subFeature": "rakPayee",
                        "pageName": "RAKPayeeDDMCLandingListPage"
                    },
                    "errorPage": {
                        "subFeature": "rakPayee",
                        "pageName": "RAKPayeeDDMCLandingListPage"
                    }
			},

			{
				"eventName": "onRakTFLimitDetailsLinkClick",
				"action": "RakFetchTFLimitDetailsService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTFLimitDetails"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			{
				"eventName": "onRak2FADeRegInitClick",
				"action": "Rak2FADeRegInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak2FADeRegInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			{
				"eventName": "onRakBusinessEliteSubscribeContentClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",				
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakBusinessEliteSubscribeContent"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			{
				"eventName": "onRakBusinessEliteUnSubscribeInitClick",
				"action": "RakBusinessEliteUnSubscribeConfirmService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakBusinessEliteUnSubscribeConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			{
					"eventName": "rakATMCashDepositeLimitChange",
					"action": "RakACDInitService",
					"actionType": "service",
					"validation": "false",
					"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
					"successPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakATMCashDepositeLimitChangeInit"
					},
					"errorPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakServicesLandingPage"
					}
				},
		{
			"eventName": "onRakDigitalAccessCard",
			"action": "RakDACInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}
		],
		"RakBusinessEliteSubscribeContent":[
			{
				"eventName": "onRakBusinessEliteSubscribeInitClick",
				"action": "RAKBusinessEliteSubscribeInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakBusinessEliteSubscribeInst"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakBusinessEliteSubscribeContent"
				}
			},
			{
				"eventName": "onRAKBusinessEliteSubContentBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",				
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakBusinessEliteSubscribeContent"
				}
			}
			
		],
		"RakOPRDDChequeRequestInit": [{
				"eventName": "onRakOPRDDChequeRequestBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
				{
				"eventName": "onFetchExchangeclick",
				"action": "RakFetchExchangeRateService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.RakOperativeDDCheque.selectedReq",
					"rakServiceReq.RakOperativeDDCheque.selectedBnf",
					"rakServiceReq.RakOperativeDDCheque.selectedOprAcct",
					"rakServiceReq.RakOperativeDDCheque.amount"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"ACC_INDEX":"rakServiceReq.RakOperativeDDCheque.selectedOprAcct",
					"REQ_CODE":"rakServiceReq.RakOperativeDDCheque.selectedReq",
					"BENF_SELECTED":"rakServiceReq.RakOperativeDDCheque.selectedBnf",
					"BENF_CUR":"rakServiceReq.RakOperativeDDCheque.selBeneficiaryAccountCurrency",
					"AMOUNT":"rakServiceReq.RakOperativeDDCheque.amount.toString()"
					
				},
				"successPage": {
					"pageName": "RakOPRDDChequeRequestInit"
				},
				"errorPage": {
					"pageName": "RakOPRDDChequeRequestInit"
				}
			},
			 {
                    "eventName": "onAccountSelectionBalCall",
                   "action": "RakSendMoneyLoadBalanceService",
                    "actionType": "serviceNoNavigation",
                    "validation": "true",
                    "validationParams": [
                            "rakServiceReq.RakOperativeDDCheque.selectedOprAcct"
                     ],
                    "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",
                        "ACCOUNT_IDX": "rakServiceReq.RakOperativeDDCheque.selectedOprAcct"
                       },
                    "successPage": {
                        "pageName": "RakOPRDDChequeRequestInit"
                    },
                    "errorPage": {
                        "pageName": "RakOPRDDChequeRequestInit"
                    }
                },
                 {
				"eventName": "onRakOprDDclick",
				"action": "RakOprDDChequeSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
						"rakServiceReq.RakOperativeDDCheque.selectedOprAcct",
					"rakServiceReq.RakOperativeDDCheque.selectedReq",
					"rakServiceReq.RakOperativeDDCheque.selectedBnf",
					"rakServiceReq.RakOperativeDDCheque.amount",
					"rakServiceReq.RakOperativeDDCheque.selectedPurpose",
					"rakServiceReq.RakOperativeDDCheque.selectedBranch",
					"rakServiceReq.RakOperativeDDCheque.name",
					"rakServiceReq.RakOperativeDDCheque.contact",
					"rakServiceReq.RakOperativeDDCheque.selectedValidId",
					"rakServiceReq.RakOperativeDDCheque.idNumber",
					"rakServiceReq.RakOperativeDDCheque.emirateSeletected",
					"rakServiceReq.RakOperativeDDCheque.selectedCorrsBank",
					"rakServiceReq.RakOperativeDDCheque.selectedCity"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OPR_ACCT": "rakServiceReq.RakOperativeDDCheque.selectedOprAcct",
					"REQUEST_FOR": "rakServiceReq.RakOperativeDDCheque.RakSelectedRequestIDModel",
					"CORS_BANK": "rakServiceReq.RakOperativeDDCheque.selectedCorrsBank",
					"CORR_CITY": "rakServiceReq.RakOperativeDDCheque.selectedCity",
					"AMOUNT": "rakServiceReq.RakOperativeDDCheque.amount.toString()",
					"PURPOSE": "rakServiceReq.RakOperativeDDCheque.selectedPurpose",
					"BRANCH": "rakServiceReq.RakOperativeDDCheque.selectedBranch",
					"EMIRATE_ID": "rakServiceReq.RakOperativeDDCheque.emirateSeletected",
					"NAME_AUTHORIZED": "rakServiceReq.RakOperativeDDCheque.name",
					"CONTACT_AUTHORIZE": "rakServiceReq.RakOperativeDDCheque.contact.toString()",
					"VALID_ID_CARD": "rakServiceReq.RakOperativeDDCheque.selectedValidId",
					"ID_NUMBER": "rakServiceReq.RakOperativeDDCheque.idNumber",
					"BENF_INDEX": "rakServiceReq.RakOperativeDDCheque.selectedBnfToServer",
					"AUTH_CAT": "rakServiceReq.RakOperativeDDCheque.authorize.toString()",
					"BENF_CUR":"rakServiceReq.RakOperativeDDCheque.selBeneficiaryAccountCurrency",
					"DELIVERY_MODE":"rakServiceReq.RakOperativeDDCheque.selectedDelMode",
					"ADDRESS":"rakServiceReq.RakOperativeDDCheque.registeredAddress"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOPRDDChequeRequestConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOPRDDChequeRequestInit"
				}
			}

		],
		"RakOPRDDChequeRequestConfirm": [{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakOPRDDChequeRequestConfirm"
				},
				"errorPage": {
					"pageName": "RakOPRDDChequeRequestConfirm"
				}
			}, {
				"eventName": "rakOPRDDCHQConfirmSubmit",
				"action": "RakOprDDChequeConfirmSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOPRDDChequeSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOPRDDChequeRequestConfirm"
				}
			}, {
				"eventName": "onRakOPRDDChequeConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOPRDDChequeRequestInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],
		"RakOPRDDChequeSuccess": [{
				"eventName": "onRakOPRDDChequeHomeClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],

		"RakEarlDebitCardRenewalPage": [{
				"eventName": "onEarlDebitCardRenewalBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRakEarlDebitCardRenewalForConfirmClick",
				"action": "RakEarlDebitCardRenewalService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RakEarlDebitCardRenewal.selecteddebcard",
					"rakServiceReq.RakEarlDebitCardRenewal.selectedReason",
					"rakServiceReq.RakEarlDebitCardRenewal.selectedBranch",
					"rakServiceReq.RakEarlDebitCardRenewal.delieveryChannel",
					"rakServiceReq.RakEarlDebitCardRenewal.emirateSelected",
					"rakServiceReq.RakEarlDebitCardRenewal.otherDesc"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"expiryDate": "rakServiceReq.RakEarlDebitCardRenewal.expiryDate",
					"REASON":"rakServiceReq.RakEarlDebitCardRenewal.selectedReason",
					"DELIVERY_CHANNEL":"rakServiceReq.RakEarlDebitCardRenewal.delieveryChannel",
					"OTHERS":"rakServiceReq.RakEarlDebitCardRenewal.otherDesc",
					"EMIRATE_ID":"rakServiceReq.RakEarlDebitCardRenewal.emirateSelected",
					"BRANCH_ID":"rakServiceReq.RakEarlDebitCardRenewal.selectedBranch",
					"DEBIT_CARD_NUMBER":"rakServiceReq.RakEarlDebitCardRenewal.selecteddebcard"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakEarlDebitCardRenewalConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakEarlDebitCardRenewalPage"
				}
			}
		],
		"RakEarlDebitCardRenewalConfirm": [{
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEarlDebitCardRenewalPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakEarlDebitCardRenewalConfirm"
			},
			"errorPage": {
				"pageName": "RakEarlDebitCardRenewalConfirm"
			}
		}, {
			"eventName": "onConfirmClick",
			"action": "RakEarlDebitCardRenewalSubmit",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakEarlDebitCardRenewal.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakEarlDebitCardRenewal.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"DEBIT_CARD_NUMBER": "rakServiceReq.RakEarlDebitCardRenewal.selecteddebcard",
				"EXPIRY_DATE": "rakServiceReq.RakEarlDebitCardRenewal.expiryDate",
				"REASON": "rakServiceReq.RakEarlDebitCardRenewal.selectedReason",
				"DELIVERY_CHANNEL": "rakServiceReq.RakEarlDebitCardRenewal.delieveryChannel",
				"SELECTEDBRANCH": "rakServiceReq.RakEarlDebitCardRenewal.selectedBranch",
				"EMIRATE_ID": "rakServiceReq.RakEarlDebitCardRenewal.emirateSelected",
				"Mode": "rakServiceReq.RakEarlDebitCardRenewal.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEarlDebitCardRenewalSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEarlDebitCardRenewalConfirm"
			}
		}],
		"RakEarlDebitCardRenewalSuccess": [{
			"eventName": "onRakEarlDebitCardRenewalSuccessDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakClosureTermDeposit": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDeposit"
			}
		}, {
			"eventName": "onConfirmClick",
			"action": "RakClosureTDConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakClosureTermDepositModel.depositAccount",
				"rakServiceReq.RakClosureTermDepositModel.actionDate",
				"rakServiceReq.RakClosureTermDepositModel.upliftmentInstructions",
				"rakServiceReq.RakClosureTermDepositModel.selectedCreditAccount"
				
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Deposit_Account": "rakServiceReq.RakClosureTermDepositModel.depositAccount",
				"Remarks": "rakServiceReq.RakClosureTermDepositModel.remarks",
				"actionDate_day": "rakServiceReq.RakClosureTermDepositModel.actionDate_day",
				"actionDate_month": "rakServiceReq.RakClosureTermDepositModel.actionDate_month",
				"actionDate_year": "rakServiceReq.RakClosureTermDepositModel.actionDate_year",
				"CreditToAccount": "rakServiceReq.RakClosureTermDepositModel.selectedCreditAccount",
				"HIFRequestID" : "rakServiceReq.RakClosureTermDepositModel.HIFRequestID",
				"eventExecuted" : "rakServiceReq.RakClosureTermDepositModel.eventId"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDepositConfirmation"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDeposit"
			}
		}, {
			"eventName": "RAKonFetchDetailClick",
			"action": "RakFDFetchDetailsService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakClosureTermDepositModel.depositAccount"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Deposit_Account": "rakServiceReq.RakClosureTermDepositModel.depositAccount"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDeposit"
			}
		}],
		"RakClosureTermDepositConfirmation": [{
			"eventName": "onPrevServiceClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDepositConfirmation"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakClosureTermDepositConfirmation"
			},
			"errorPage": {
				"pageName": "RakClosureTermDepositConfirmation"
			}
		}, {
			"eventName": "onSuccessClick",
			"action": "RakClosureTDSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakClosureTermDepositModel.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakClosureTermDepositModel.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakClosureTermDepositModel.transactionPassword",
				"eventExecuted": "rakServiceReq.RakClosureTermDepositModel.eventToBeExecusted",
				"HIFRequestID": "rakServiceReq.RakClosureTermDepositModel.hifRequestID"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDepositSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDepositConfirmation"
			}
		}],
		"RakClosureTermDepositSuccess": [{
			"eventName": "onCancelClick",
			"action": "RakSeviceNavigationFlowService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakClosureTermDepositSuccess"
			}
		}],
		"RakServiceReqStatusDetailsSuccess": [
			{
				"eventName": "onServicesRequestDetailsBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestStatus"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestSearch"
				}
			},
			{
				"eventName": "onServicesRequestSearchBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestSearchResult"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestSearch"
				}
			}
		],
		"RakServicesRequestStatus": [
			{
				"eventName": "onRakServiceRequestDetailsFetch",
				"action": "RakServiceRequestDetailsService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"REF_ID":"rakServiceReq.serviceRequestStatusModel.selectedRefId",
					"REQUEST_ID":"rakServiceReq.serviceRequestStatusModel.selectedRequestId",
					"eventExecuted":"rakServiceReq.serviceRequestStatusModel.eventExecuted"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServiceReqStatusDetailsSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestStatus"
				}
			},
			
			 {
                "eventName": "onRakTFServiceRequestDetailsFetch",
                "action": "RakTFServiceRequestDetailsService",
                "actionType": "service",
                "validation": "false",
                "parameters": {
                    "jsessionid": "fields.finacleUserSessionId",
                    "mbparam": "fields.finacleMbParam",
                    "REQUEST_ID":"rakTradeFinance.tfServiceRequestStatusModel.selectedRequestId",
                    "REF_ID":"rakTradeFinance.tfServiceRequestStatusModel.selectedRefId",
                  
                    "eventExecuted":"rakServiceReq.serviceRequestStatusModel.eventExecuted"
                },
                "successPage": {
                    "subFeature": "rakTradeFinance",
                    "pageName": "RakTFServiceReqStatusDetailsSuccess"
                },
                "errorPage": {
                    "subFeature": "rakServiceReq",
                    "pageName": "RakServicesRequestStatus"
                }
            },
			{
				"eventName": "onServiceRequestStatusCancelClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestStatus"
				}
			}, 
			{
                "eventName": "onTFerviceRequestStatusSearchClick",
                "action": "RakTFRequestStatusFormInitService",
                "actionType": "service",
                "validation": "false",
                "parameters": {
                    "jsessionid": "fields.finacleUserSessionId",
                    "mbparam": "fields.finacleMbParam"
                },
                "successPage": {
                    "subFeature": "rakServiceReq",
                    "pageName": "RakServicesRequestSearch"
                },
                "errorPage": {
                    "subFeature": "rakServiceReq",
                    "pageName": "RakServicesRequestStatus"
                }
            },
			{
				"eventName": "onServiceRequestStatusSearchClick",
				"action": "ServiceRequestStatusFormInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestSearch"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestStatus"
				}
			}
		],
		"RakServicesRequestSearch": [{
			"eventName": "onServicesRequestSearchCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearch"
			}
		}, {
			"eventName": "onServicesRequestSearchBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestStatus"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearch"
			}
		}, {
			"eventName": "onEmptyServicesRequestSearchBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearch"
			}
		}, 
		{
            "eventName": "onServicesRequestStatusSearchClick",
            "action": "RakServiceRequestStatusInitService",
            "actionType": "service",
            "validation": "true",
            "validationParams": [
                "rakServiceReq.serviceRequestStatusModel.referenceID"
            ],
            "validationErrorMessage": [{
                "ifValuethanNumber": "Please enter valid Reference ID"
            }, {
                "isAlphaNumeric": "Special charcters should not allowed"
            }, {
                "dateGreaterThanFromDateNow": "From Date should not be greater than current date."
            }, {
                "dateGreaterThanToDateNow": "To date should not be greater than current date."
            }, {
                "actualDateLessThan": "From Date should not be greater than To Date"
            }, {
                "dateYearLimit": "Date can not have year in 5 digit"
            }, {
                "dateLessThanNow": "From Date should not be greater than To Date"
            }, {
                "maxLength": "Reference ID should not more than 10 characters."
            }],
            "parameters": {
                "jsessionid": "fields.finacleUserSessionId",
                "mbparam": "fields.finacleMbParam",
                "TXN_DATE_FROM":"rakServiceReq.serviceRequestStatusModel.fromDate",
                "TXN_DATE_TO":"rakServiceReq.serviceRequestStatusModel.toDate",
                "TXN_DATE_FROM_day": "rakServiceReq.serviceRequestStatusModel.fromDate_day",
                "TXN_DATE_FROM_month": "rakServiceReq.serviceRequestStatusModel.fromDate_month",
                "TXN_DATE_FROM_year": "rakServiceReq.serviceRequestStatusModel.fromDate_year",
                "TXN_DATE_TO_day": "rakServiceReq.serviceRequestStatusModel.toDate_day",
                "TXN_DATE_TO_month": "rakServiceReq.serviceRequestStatusModel.toDate_month",
                "TXN_DATE_TO_year": "rakServiceReq.serviceRequestStatusModel.toDate_year",
                "RequestStatus": "rakServiceReq.serviceRequestStatusModel.requestType",
                "RequestType": "rakServiceReq.serviceRequestStatusModel.requestTypeSelected",
                "ReferenceId": "rakServiceReq.serviceRequestStatusModel.referenceID"
            },
            "successPage": {
                "subFeature": "rakServiceReq",
                "pageName": "RakServicesRequestSearchResult"
            },
            "errorPage": {
                "subFeature": "rakServiceReq",
                "pageName": "RakServicesRequestSearch"
            }
        },
		{
			"eventName": "onTFRequestStatusSearchClick",
			"action": "RakTradeFinanceReqStatusInitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.serviceRequestStatusModel.referenceID"
			],
			"validationErrorMessage": [{
				"ifValuethanNumber": "Please enter valid Reference ID"
			}, {
				"isAlphaNumeric": "Special charcters should not allowed"
			}, {
				"dateGreaterThanFromDateNow": "From Date should not be greater than current date."
			}, {
				"dateGreaterThanToDateNow": "To date should not be greater than current date."
			}, {
				"actualDateLessThan": "From Date should not be greater than To Date"
			}, {
				"dateYearLimit": "Date can not have year in 5 digit"
			}, {
				"dateLessThanNow": "From Date should not be greater than To Date"
			}, {
				"maxLength": "Reference ID should not more than 10 characters."
			}],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TXN_DATE_FROM":"rakServiceReq.serviceRequestStatusModel.fromDate",
				"TXN_DATE_TO":"rakServiceReq.serviceRequestStatusModel.toDate",
				"TXN_DATE_FROM_day": "rakServiceReq.serviceRequestStatusModel.fromDate_day",
				"TXN_DATE_FROM_month": "rakServiceReq.serviceRequestStatusModel.fromDate_month",
				"TXN_DATE_FROM_year": "rakServiceReq.serviceRequestStatusModel.fromDate_year",
				"TXN_DATE_TO_day": "rakServiceReq.serviceRequestStatusModel.toDate_day",
				"TXN_DATE_TO_month": "rakServiceReq.serviceRequestStatusModel.toDate_month",
				"TXN_DATE_TO_year": "rakServiceReq.serviceRequestStatusModel.toDate_year",
				"RequestStatus": "rakServiceReq.serviceRequestStatusModel.requestType",
				"RequestType": "rakServiceReq.serviceRequestStatusModel.requestTypeSelected",
				"ReferenceId": "rakServiceReq.serviceRequestStatusModel.referenceID"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearchResult"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearch"
			}
		}],
		"RakServicesRequestSearchResult": [{
			"eventName": "onServicesRequestSearchResultBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearch"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearchResult"
			}
		}, {
			"eventName": "onServicesRequestSearchResultCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestStatus"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearchResult"
			}
		}, {
			"eventName": "onServicesRequestSearchResultCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesRequestSearch"
			}
		},
		{
                "eventName": "onRakServiceRequestDetailsFetch",
                "action": "RakServiceRequestDetailsService",
                "actionType": "service",
                "validation": "false",
                "parameters": {
                    "jsessionid": "fields.finacleUserSessionId",
                    "mbparam": "fields.finacleMbParam",
                    "REF_ID":"rakServiceReq.serviceRequestStatusModel.selectedRefId",
                    "REQUEST_ID":"rakServiceReq.serviceRequestStatusModel.selectedRequestId",
                    "eventExecuted":"rakServiceReq.serviceRequestStatusModel.eventExecuted"
                },
                "successPage": {
                    "subFeature": "rakServiceReq",
                    "pageName": "RakServiceReqStatusDetailsSuccess"
                },
                "errorPage": {
                    "subFeature": "rakServiceReq",
                    "pageName": "RakServicesRequestStatus"
                }
        },
		{
				"eventName": "onRakTFServiceRequestDetailsFetch",
				"action": "RakTFServiceRequestDetailsService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"REF_ID":"rakServiceReq.serviceRequestStatusModel.selectedRefId",
					"REQUEST_ID":"rakServiceReq.serviceRequestStatusModel.selectedRequestId",
					"eventExecuted":"rakServiceReq.serviceRequestStatusModel.eventExecuted"
				},
				"successPage": {
					"subFeature": "rakTradeFinance",
					"pageName": "RakTFServiceReqStatusDetailsSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesRequestStatus"
				}
		}
		],

		"RakChangeCCLimitPage": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLimitPage"
			}
		}, {
			"eventName": "onConfirmClick",
			"action": "RakChangeCreditCardLimitContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.creditCardLimitChange.ccSelected",
				"rakServiceReq.creditCardLimitChange.newLimitAmt",
				"rakServiceReq.creditCardLimitChange.requestTo",
				"rakServiceReq.creditCardLimitChange.limitChange",
				"rakServiceReq.creditCardLimitChange.noOfMonths"
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"NEWLIMIT": "rakServiceReq.creditCardLimitChange.newLimitAmtString",
				"CARDNO": "rakServiceReq.creditCardLimitChange.ccSelected",
				"RQSTTO": "rakServiceReq.creditCardLimitChange.requestTo",
				"LIMIT": "rakServiceReq.creditCardLimitChange.limitChange",
				"TOTAL_CREDIT_LIMIT": "rakServiceReq.creditCardLimitChange.totalLimit",
				"NUMMONTHS": "rakServiceReq.creditCardLimitChange.noOfMonths",
				"REMARKS": "rakServiceReq.creditCardLimitChange.note"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLConfirmPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLimitPage"
			}
		}, {
			"eventName": "RakFetchCCDetails",
			"action": "RakChangeCreditCardLimitCardDetails",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.creditCardLimitChange.ccSelected"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"accIndex": "rakServiceReq.creditCardLimitChange.ccSelected"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLimitPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLimitPage"
			}
		}],

		"RakChangeCCLConfirmPage": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLConfirmPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakChangeCCLConfirmPage"
			},
			"errorPage": {
				"pageName": "RakChangeCCLConfirmPage"
			}
		}, {
			"eventName": "onPrevServiceClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLimitPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLConfirmPage"
			}
		}, {
			"eventName": "onSuccessClick",
			"action": "RakChangeCreditCardLimitSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.creditCardLimitChange.auth"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.creditCardLimitChange.auth"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.creditCardLimitChange.auth"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLSuccessPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLConfirmPage"
			}
		}, {
			"eventName": "onNoAuthSuccessClick",
			"action": "RakChangeCreditCardLimitSuccessService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.creditCardLimitChange.auth"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLSuccessPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLConfirmPage"
			}
		}],
		"RakChangeCCLSuccessPage": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeCCLSuccessPage"
			}
		}],

		"RakAmendStandingInst": [{
			"eventName": "onAmendStandingInstCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "RakFetchASIDetails",
			"action": "RakAmendSIDetails",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.amendStandingInst.ccSelected"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.amendStandingInst.ccSelected"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInst"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInst"
			}
		}, {
			"eventName": "onAmendStandingInstConfirmClick",
			"action": "RakAmendStandingInstContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.amendStandingInst.ccSelected",
			"rakServiceReq.amendStandingInst.debitAccSelected",
			"rakServiceReq.amendStandingInst.perentageCurrBal",
			"rakServiceReq.amendStandingInst.paymentPercentage",
			"rakServiceReq.amendStandingInst.changeSIDate",
			"rakServiceReq.amendStandingInst.toDate",
			"rakServiceReq.amendStandingInst.fromDate",
			"rakServiceReq.amendStandingInst.selectedDate",
			"rakServiceReq.amendStandingInst.flatAmount"
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"LOANNUMBER": "rakServiceReq.amendStandingInst.ccSelected",
				"MON_PYMT": "rakServiceReq.amendStandingInst.paymentPercentage",
				"PYMT_PER": "rakServiceReq.amendStandingInst.perentageCurrBal.toString()",
				"PYMT_AMT": "rakServiceReq.amendStandingInst.flatAmount.toString()",
				"DEB_ACC": "rakServiceReq.amendStandingInst.debitAccSelected ",
					"DAY_DATE": "rakServiceReq.amendStandingInst.selectedDate",
				"SIDATE_FLAG": "rakServiceReq.amendStandingInst.changeSIDate",
				"FROM_DATE_day": "rakServiceReq.amendStandingInst.fromDate_day",
				"FROM_DATE_month": "rakServiceReq.amendStandingInst.fromDate_month",
				"FROM_DATE_year": "rakServiceReq.amendStandingInst.fromDate_year",
				"TO_DATE_day": "rakServiceReq.amendStandingInst.toDate_day",
				"TO_DATE_month": "rakServiceReq.amendStandingInst.toDate_month",
				"TO_DATE_year": "rakServiceReq.amendStandingInst.toDate_year",
				"SI_STATUS_FLAG": "rakServiceReq.amendStandingInst.dReturn",
				
				"TEMP_HOLD_FLAG": "rakServiceReq.amendStandingInst.holdSISelected"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInstConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInst"
			}
		},
		{
				"eventName": "onRAKCCStandingInstInitClick",
				"action": "RAKCCStandingInstInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKCCStandingInstInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakAmendStandingInst"
				}
			}],
		"RakAmendStandingInstConfirm": [{
			"eventName": "onAmendStandingInstConfirmCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onAmendStandingInstConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInst"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInst"
			}
		}, {
			"eventName": "onAmendStandingInstSubmitClick",
			"action": "RakAmendStandingInstSuccessService",
			"actionType": "service",
			"validation": "false",
			"validationParams": ["rakServiceReq.amendStandingInst.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.amendStandingInst.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.amendStandingInst.transactionPassword",
				"CREDIT_ACCOUNT": "rakServiceReq.amendStandingInst.ccSelected",
				"MON_PYMT": "rakServiceReq.amendStandingInst.paymentPercentage",
				"PYMT_PER": "rakServiceReq.amendStandingInst.perentageCurrBal.toString()",
				"PYMT_AMT": "rakServiceReq.amendStandingInst.flatAmount.toString()",
				"DEB_ACC": "rakServiceReq.amendStandingInst.debitAccSelected ",
				"SIDATE_FLAG": "rakServiceReq.amendStandingInst.changeSIDate",
				"DAY_DATE": "rakServiceReq.amendStandingInst.selectedDate",
				"SI_STATUS_FLAG": "rakServiceReq.amendStandingInst.StandingInsStatus",
				"DAY_DATE": "rakServiceReq.amendStandingInst.selectedDate",
				"SIDATE_FLAG": "rakServiceReq.amendStandingInst.changeSIDate",
				
				"TEMP_HOLD_FLAG": "rakServiceReq.amendStandingInst.holdSISelected"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInstSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInstConfirm"
			}
		},{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakAmendStandingInstConfirm"
			},
			"errorPage": {
				"pageName": "RakAmendStandingInstConfirm"
			}
		}],
		"RakAmendStandingInstSuccessful": [{
			"eventName": "onAmendStandingInstSuccessfulDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakChequeSingleStop": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onChequeSeriesClick",
			"action": "ChequesStopContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.stopCheques.model.pageUserInputs.accountNumber",
				"rakServiceReq.stopCheques.model.pageUserInputs.reasonCode"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CHEQUE_NUMBER": "rakServiceReq.stopCheques.getServiceInputFor(CHEQUE_NUMBER)",
				"REASON_CODE": "rakServiceReq.stopCheques.getServiceInputFor(REASON_CODE)",
				"ChequeNoFrom": "rakServiceReq.stopCheques.getServiceInputFor(ChequeNoFrom)",
				"ChequeNoTo": "rakServiceReq.stopCheques.getServiceInputFor(ChequeNoTo)",
				"ChequeTypeSelection": "rakServiceReq.stopCheques.getServiceInputFor(ChequeTypeSelection)",
				"SELECT_ID": "rakServiceReq.stopCheques.model.pageUserInputs.accountNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "ChequeSingleAuthenticate"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			}
		}, {
			"eventName": "onStopAuthClick",
			"action": "ChequesStopContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.stopCheques.model.pageUserInputs.reasonCode",
				"rakServiceReq.stopCheques.model.pageUserInputs.accountNumber",
				"rakServiceReq.stopCheques.model.pageUserInputs.singleChequeNumber"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CHEQUE_NUMBER": "rakServiceReq.stopCheques.getServiceInputFor('CHEQUE_NUMBER')",
				"REASON_CODE": "rakServiceReq.stopCheques.getServiceInputFor('REASON_CODE')",
				"ChequeNoFrom": "rakServiceReq.stopCheques.getServiceInputFor('ChequeNoFrom')",
				"ChequeNoTo": "rakServiceReq.stopCheques.getServiceInputFor('ChequeNoTo')",
				"ChequeTypeSelection": "rakServiceReq.stopCheques.getServiceInputFor('ChequeTypeSelection')",
				"SELECT_ID": "rakServiceReq.stopCheques.model.pageUserInputs.accountNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleAuthenticate"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			}
		}, {
			"eventName": "onStopSeriesAuthClick",
			"action": "ChequesStopContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.stopCheques.model.pageUserInputs.reasonCode",
				"rakServiceReq.stopCheques.model.pageUserInputs.accountNumber",
				"rakServiceReq.stopCheques.model.pageUserInputs.fromChequeNumber",
				"rakServiceReq.stopCheques.model.pageUserInputs.toChequeNumber"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CHEQUE_NUMBER": "rakServiceReq.stopCheques.getServiceInputFor('CHEQUE_NUMBER')",
				"REASON_CODE": "rakServiceReq.stopCheques.getServiceInputFor('REASON_CODE')",
				"ChequeNoFrom": "rakServiceReq.stopCheques.getServiceInputFor('ChequeNoFrom')",
				"ChequeNoTo": "rakServiceReq.stopCheques.getServiceInputFor('ChequeNoTo')",
				"ChequeTypeSelection": "rakServiceReq.stopCheques.getServiceInputFor('ChequeTypeSelection')",
				"SELECT_ID": "rakServiceReq.stopCheques.model.pageUserInputs.accountNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleAuthenticate"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			}
		}],
		"RakChequeSingleAuthenticate": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"

			},
			"successPage": {
				"pageName": "RakChequeSingleAuthenticate"
			},
			"errorPage": {
				"pageName": "RakChequeSingleAuthenticate"
			}
		}, {
			"eventName": "onChequePrevClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			}
		}, {
			"eventName": "onSuccessClick",
			"action": "ChequesStopSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.stopCheques.model.authenticationPassword"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.stopCheques.model.authenticationPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.stopCheques.model.authenticationPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleAuthenticate"
			}
		}],
		"RakChequeSingleSuccessful": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakChequeSeriesStop": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onChequeSingleClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSingleStop"
			}
		}, {
			"eventName": "onSeriesAuthClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSeriesAuthenticate"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSeriesAuthenticate"
			}
		}],
		"RakChequeSeriesAuthenticate": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onChequeSeriesPrevClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSeriesStop"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSeriesStop"
			}
		}, {
			"eventName": "onSeriesSuccessClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSeriesSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeSeriesSuccessful"
			}
		}],
		"RakChequeSeriesSuccessful": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakDebitReportCaptureInit": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKCreditCardReportCaptureConfirmClick",
			"action": "RakDebitCardReportCaptureContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDebitReportCaptureModel.selectedCCNo",
				"rakServiceReq.RakDebitReportCaptureModel.delieveryMode",
				"rakServiceReq.RakDebitReportCaptureModel.selectedBranch",
				"rakServiceReq.RakDebitReportCaptureModel.selectedCapture",
				"rakServiceReq.RakDebitReportCaptureModel.bankName",
				"rakServiceReq.RakDebitReportCaptureModel.atmBranchName",
				"rakServiceReq.RakDebitReportCaptureModel.emirateSeletected"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"CREDIT_CARD_NUMBER": "rakServiceReq.RakDebitReportCaptureModel.selectedCCNo",
				"MODE_OF_DELIVERY": "rakServiceReq.RakDebitReportCaptureModel.delieveryMode",
				"CAPTURE_TYPE": "rakServiceReq.RakDebitReportCaptureModel.selectedCapture",
				"BANK_NAME": "rakServiceReq.RakDebitReportCaptureModel.bankName",
				"ATM_BRANCH_NAME": "rakServiceReq.RakDebitReportCaptureModel.atmBranchName",
				"SELECTED_BRANCH": "rakServiceReq.RakDebitReportCaptureModel.selectedBranch",
				"EMIRATE_ID": "rakServiceReq.RakDebitReportCaptureModel.emirateSeletected",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitReportCaptureContinue"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitReportCaptureInit"
			}
		}],
		"RakDebitReportCaptureContinue": [{
			"eventName": "onRAKCreditCardReportCaptureBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitReportCaptureInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitReportCaptureInit"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakDebitReportCaptureContinue"
			},
			"errorPage": {
				"pageName": "RakDebitReportCaptureContinue"
			}
		}, {
			"eventName": "onRAKCreditCardReportCaptureContinueClick",
			"action": "RakDebitCardReportCaptureSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDebitReportCaptureModel.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakDebitReportCaptureModel.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakDebitReportCaptureModel.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitReportCaptureSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitReportCaptureContinue"
			}
		}],

		"RakDebitReportCaptureSuccess": [{
			"eventName": "RAKCreditCardReportCaptureDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakTemporaryReleaseLetter": [{
			"eventName": "onTempReleaseLetterCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onTempReleaseLetterConfirmClick",
			"action": "RakTempReleaseLetterContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.temporaryReleaseLetter.loanAgreementNumber",
				"rakServiceReq.temporaryReleaseLetter.travelCountry",
				"rakServiceReq.temporaryReleaseLetter.debitAccSelected",
				"rakServiceReq.temporaryReleaseLetter.selectedBranch",
				"rakServiceReq.temporaryReleaseLetter.contNumber",
				"rakServiceReq.temporaryReleaseLetter.noOfDays",
				"rakServiceReq.temporaryReleaseLetter.emirateSeletected"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"LOANNUMBER": "rakServiceReq.temporaryReleaseLetter.loanAgreementNumber",
				"SELECTEDCOUNTRY": "rakServiceReq.temporaryReleaseLetter.travelCountry",
				"CHARGEACC": "rakServiceReq.temporaryReleaseLetter.debitAccSelected",
				"SELBRANCH": "rakServiceReq.temporaryReleaseLetter.selectedBranch",
				"EMIRATE_ID": "rakServiceReq.temporaryReleaseLetter.emirateSeletected",
				"NOTES": "rakServiceReq.temporaryReleaseLetter.notes",
				"CONTACT_NUM": "rakServiceReq.temporaryReleaseLetter.contNumber.toString()",
				"NOOFDAYS": "rakServiceReq.temporaryReleaseLetter.noOfDays",
				"RETURNDATE": "rakServiceReq.temporaryReleaseLetter.dReturn",
				"TRAVELDATE": "rakServiceReq.temporaryReleaseLetter.dTravel",
				"TRAVELDATE_year": "rakServiceReq.temporaryReleaseLetter.dateTravel_year",
				"TRAVELDATE_month": "rakServiceReq.temporaryReleaseLetter.dateTravel_month",
				"TRAVELDATE_day": "rakServiceReq.temporaryReleaseLetter.dateTravel_day",
				"RETURNDATE_year": "rakServiceReq.temporaryReleaseLetter.dateReturn_year",
				"RETURNDATE_month": "rakServiceReq.temporaryReleaseLetter.dateReturn_month",
				"RETURNDATE_day": "rakServiceReq.temporaryReleaseLetter.dateReturn_day"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetterConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetter"
			}
		}, {
			"eventName": "onTempReleaseLetterValidateDates",
			"action": "RakTempReleaseLetterValidateDateService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.temporaryReleaseLetter.dateTravel",
				"rakServiceReq.temporaryReleaseLetter.dateReturn"

			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TRAVELDATE_year": "rakServiceReq.temporaryReleaseLetter.dateTravel_year",
				"TRAVELDATE_month": "rakServiceReq.temporaryReleaseLetter.dateTravel_month",
				"TRAVELDATE_day": "rakServiceReq.temporaryReleaseLetter.dateTravel_day",
				"RETURNDATE_year": "rakServiceReq.temporaryReleaseLetter.dateReturn_year",
				"RETURNDATE_month": "rakServiceReq.temporaryReleaseLetter.dateReturn_month",
				"RETURNDATE_day": "rakServiceReq.temporaryReleaseLetter.dateReturn_day",
				"RETURNDATE": "rakServiceReq.temporaryReleaseLetter.dReturn",
				"TRAVELDATE": "rakServiceReq.temporaryReleaseLetter.dTravel"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetter"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetter"
			}
		}],
		"RakTemporaryReleaseLetterConfirm": [{
			"eventName": "onTempReleaseLetterConfirmCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakTemporaryReleaseLetterConfirm"
			},
			"errorPage": {
				"pageName": "RakTemporaryReleaseLetterConfirm"
			}
		}, {
			"eventName": "onTempReleaseLetterConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetter"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetter"
			}
		}, {
			"eventName": "onTempReleaseLetterConfirmSubmitToRMClick",
			"action": "RakTempReleaseLetterSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.temporaryReleaseLetter.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.temporaryReleaseLetter.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.temporaryReleaseLetter.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetterSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTemporaryReleaseLetterConfirm"
			}
		}],
		"RakTemporaryReleaseLetterSuccessful": [{
			"eventName": "onTempReleaseLetterSuccessfulDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakIslamicDepositOpenNewTermSRInit": [{
			"eventName": "onRAKIslamicOpenDepositNewTermConfirmClick",
			"action": "RAKOpenIslamicDepositNewTermConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.amount",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.toDate",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.fromDate",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.accNo",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.period",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.currency",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.matAccount",
				"rakServiceReq.RakIslamicDepositOpenNewTermReq.intHandlingAccount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"ACCNO": "rakServiceReq.RakIslamicDepositOpenNewTermReq.accNo",
				"DEPPERIOD": "rakServiceReq.RakIslamicDepositOpenNewTermReq.depPeriodSelection",
				"PERIOD": "rakServiceReq.RakIslamicDepositOpenNewTermReq.period",
				"CURRENCY": "rakServiceReq.RakIslamicDepositOpenNewTermReq.currency",
				"MAT": "rakServiceReq.RakIslamicDepositOpenNewTermReq.maturity",
				"MAT_ACC": "rakServiceReq.RakIslamicDepositOpenNewTermReq.matAccount",
				"INT": "rakServiceReq.RakIslamicDepositOpenNewTermReq.interestHandling",
				"INT_ACC": "rakServiceReq.RakIslamicDepositOpenNewTermReq.intHandlingAccount",
				"DEP_AMT": "rakServiceReq.RakIslamicDepositOpenNewTermReq.amount.toString()",
				"FROM_DATE_day": "rakServiceReq.RakIslamicDepositOpenNewTermReq.fromDate_day",
				"FROM_DATE_month": "rakServiceReq.RakIslamicDepositOpenNewTermReq.fromDate_month",
				"FROM_DATE_year": "rakServiceReq.RakIslamicDepositOpenNewTermReq.fromDate_year",
				"TO_DATE_day": "rakServiceReq.RakIslamicDepositOpenNewTermReq.toDate_day",
				"TO_DATE_month": "rakServiceReq.RakIslamicDepositOpenNewTermReq.toDate_month",
				"TO_DATE_year": "rakServiceReq.RakIslamicDepositOpenNewTermReq.toDate_year"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRInit"
			}

		},
		{
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyNowScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		},
		{
			"eventName": "onRAKOpenDepositNewTermInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRInit"
			}
		}
		],
		"RakIslamicDepositOpenNewTermSRConfirm": [{
			"eventName": "onRAKIslamicOpenDepositNewTermSubmitClick",
			"action": "RAKIslamicOpenDepositNewTermSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakIslamicDepositOpenNewTermReq.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakIslamicDepositOpenNewTermReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"PERIOD": "rakServiceReq.RakIslamicDepositOpenNewTermReq.period",
				"Mode": "rakServiceReq.RakIslamicDepositOpenNewTermReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRConfirm"
			}

		},
		{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakIslamicDepositOpenNewTermSRConfirm"
				},
				"errorPage": {
					"pageName": "RakIslamicDepositOpenNewTermSRConfirm"
				}
			},
			 {
			"eventName": "onRAKOpenDepositNewTermConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakIslamicDepositOpenNewTermSRInit"
			}

		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"

			},
			"successPage": {
				"pageName": "RakIslamicDepositOpenNewTermSRConfirm"
			},
			"errorPage": {
				"pageName": "RakIslamicDepositOpenNewTermSRConfirm"
			}
		}],
		"RakDepositOpenNewTermSRSuccess": [

			{
				"eventName": "onRAKOpenDepositNewTermBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}
			}
		],
		"RakDepositOpenNewTermSRConfirm": [{
			"eventName": "onRAKOpenDepositNewTermSubmitClick",
			"action": "RAKOpenDepositNewTermSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDepositOpenNewTermReq.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakDepositOpenNewTermReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakDepositOpenNewTermReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRConfirm"
			}

		},
		{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakDepositOpenNewTermSRConfirm"
				},
				"errorPage": {
					"pageName": "RakDepositOpenNewTermSRConfirm"
				}
			},
			{
			"eventName": "onRAKOpenDepositNewTermConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRConfirm"
			}

		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"

			},
			"successPage": {
				"pageName": "RakDepositOpenNewTermSRConfirm"
			},
			"errorPage": {
				"pageName": "RakDepositOpenNewTermSRConfirm"
			}
		}],

		"RakDepositOpenNewTermSRInit": [{
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyNowScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		}, {
			"eventName": "onRAKOpenDepositNewTermConfirmClick",
			"action": "RAKOpenDepositNewTermConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakDepositOpenNewTermReq.accNo",
				"rakServiceReq.RakDepositOpenNewTermReq.amount",
				"rakServiceReq.RakDepositOpenNewTermReq.toDate",
				"rakServiceReq.RakDepositOpenNewTermReq.fromDate",
				"rakServiceReq.RakDepositOpenNewTermReq.period",
				"rakServiceReq.RakDepositOpenNewTermReq.currency",
				"rakServiceReq.RakDepositOpenNewTermReq.matAccount",
				"rakServiceReq.RakDepositOpenNewTermReq.intHandlingAccount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"ACCNO": "rakServiceReq.RakDepositOpenNewTermReq.accNo",
				"DEPPERIOD": "rakServiceReq.RakDepositOpenNewTermReq.depPeriodSelection",
				"PERIOD": "rakServiceReq.RakDepositOpenNewTermReq.period",
				"CURRENCY": "rakServiceReq.RakDepositOpenNewTermReq.currency",
				"MAT": "rakServiceReq.RakDepositOpenNewTermReq.maturity",
				"MAT_ACC": "rakServiceReq.RakDepositOpenNewTermReq.matAccount",
				"INT": "rakServiceReq.RakDepositOpenNewTermReq.interestHandling",
				"INT_ACC": "rakServiceReq.RakDepositOpenNewTermReq.intHandlingAccount",
				"DEP_AMT": "rakServiceReq.RakDepositOpenNewTermReq.amount.toString()",
				"FROM_DATE_day": "rakServiceReq.RakDepositOpenNewTermReq.fromDate_day",
				"FROM_DATE_month": "rakServiceReq.RakDepositOpenNewTermReq.fromDate_month",
				"FROM_DATE_year": "rakServiceReq.RakDepositOpenNewTermReq.fromDate_year",
				"TO_DATE_day": "rakServiceReq.RakDepositOpenNewTermReq.toDate_day",
				"TO_DATE_month": "rakServiceReq.RakDepositOpenNewTermReq.toDate_month",
				"TO_DATE_year": "rakServiceReq.RakDepositOpenNewTermReq.toDate_year"



			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRInit"
			}

		}, {
			"eventName": "onRAKOpenDepositNewTermInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRInit"
			}
		}],




		"RenewFixedDeposit": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDeposit"
			}
		}, {
			"eventName": "onConfirmClick",
			"action": "RenewFixedDepositConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKRenewTermDepositModel.debaccount",
				"rakServiceReq.RAKRenewTermDepositModel.depositAmount",
				"rakServiceReq.RAKRenewTermDepositModel.depositAccount",
				"rakServiceReq.RAKRenewTermDepositModel.selectedCurrency"
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Deposit_Account": "rakServiceReq.RAKRenewTermDepositModel.depositAccount",
				"DepositAmount": "rakServiceReq.RAKRenewTermDepositModel.depositAmount",
				"IntCap": "rakServiceReq.RAKRenewTermDepositModel.isIntCap",
				"RenewPeriod": "rakServiceReq.RAKRenewTermDepositModel.isPeriod",
				"FromDate": "rakServiceReq.RAKRenewTermDepositModel.fromDate",
				"ToDate": "rakServiceReq.RAKRenewTermDepositModel.toDate",
				"DebitAccountNum": "rakServiceReq.RAKRenewTermDepositModel.debaccount",
				"MatCreditAccount": "rakServiceReq.RAKRenewTermDepositModel.matSelectedCreditAccount",
				"SelCurrency": "rakServiceReq.RAKRenewTermDepositModel.selectedCurrency",
				"SelPeriod": "rakServiceReq.RAKRenewTermDepositModel.selectedPeriod"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDepositAuth"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDeposit"
			}
		}, {
			"eventName": "RAKonFetchDetailClick",
			"action": "RAKRenewFixedDepFetchDetailsService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Deposit_Account": "rakServiceReq.RAKRenewTermDepositModel.depositAccount"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDeposit"
			}
		}],
		"RenewFixedDepositAuth": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDepositAuth"
			}
		}, {
			"eventName": "onPrevServiceClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDepositAuth"
			}
		}, {
			"eventName": "onSuccessClick",
			"action": "RenewFixedDepositSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKRenewTermDepositModel.transactionPwD"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKRenewTermDepositModel.transactionPwD"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKRenewTermDepositModel.transactionPwD"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDepositSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDepositAuth"
			}
		}],
		"RenewFixedDepositSuccess": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RenewFixedDepositSuccess"
			}
		}, {
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		}],
		"BlockCreditCard": [{
			"eventName": "onBlockCreditCardCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onBlockCreditCardConfirmClick",
			"action": "BlockCreditCardContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.blockCreditCardModel.blockCreditCardNumber",
				"rakServiceReq.blockCreditCardModel.remarks",
				"rakServiceReq.blockCreditCardModel.selectedReason",
				"rakServiceReq.common.displayDate",
				"rakServiceReq.blockCreditCardModel.place"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.blockCreditCardModel.blockCreditCardNumber",
				"REMARKS": "rakServiceReq.blockCreditCardModel.remarks",
				"REASON": "rakServiceReq.blockCreditCardModel.selectedReason",
				"PLACE": "rakServiceReq.blockCreditCardModel.place",
				"lostDate_day": "rakServiceReq.blockCreditCardModel.lostDate_day",
				"lostDate_month": "rakServiceReq.blockCreditCardModel.lostDate_month",
				"lostDate_year": "rakServiceReq.blockCreditCardModel.lostDate_year",
				"CARDTYPE": "rakServiceReq.blockCreditCardModel.CardType"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCard"
			}
		}, {
			"eventName": "onBlockCreditCardLCRConfirmClick",
			"action": "RakBlockCreditCardLCRContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.blockCreditCardModel.blockCreditCardNumber",
				"rakServiceReq.blockCreditCardModel.remarks",
				"rakServiceReq.blockCreditCardModel.selectedReason",
				"rakServiceReq.common.displayDate",
				"rakServiceReq.blockCreditCardModel.place"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.blockCreditCardModel.blockCreditCardNumber",
				"REMARKS": "rakServiceReq.blockCreditCardModel.remarks",
				"REASON": "rakServiceReq.blockCreditCardModel.selectedReason",
				"PLACE": "rakServiceReq.blockCreditCardModel.place",
				"lostDate_day": "rakServiceReq.blockCreditCardModel.lostDate_day",
				"lostDate_month": "rakServiceReq.blockCreditCardModel.lostDate_month",
				"lostDate_year": "rakServiceReq.blockCreditCardModel.lostDate_year",
				"CARDTYPE": "rakServiceReq.blockCreditCardModel.CardType"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCard"
			}
		}
		],
		"BlockCreditCardConfirm": [{
			"eventName": "onBlockCreditCardConfirmCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				   "OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "BlockCreditCardConfirm"
			},
			"errorPage": {
				"pageName": "BlockCreditCardConfirm"
			}
		}, {
			"eventName": "onBlockCreditCardConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCard"
			}
		}, {
			"eventName": "onBlockCreditCardConfirmSubmitToRMClick",
			"action": "BlockCreditCardSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.blockCreditCardModel.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.blockCreditCardModel.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.blockCreditCardModel.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCardSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCardConfirm"
			}
		}, {
			"eventName": "onBlockDebitCardConfirmSubmitToRMClick",
			"action": "BlockDebitCardSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.blockCreditCardModel.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.blockCreditCardModel.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.blockCreditCardModel.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCardSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "BlockCreditCardConfirm"
			}
		}],
		"BlockCreditCardSuccessful": [{
			"eventName": "onBlockCreditCardSuccessfulDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakChequeCommuincationBook": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onChequeBookAuthClick",
			"action": "ChequeBookRequestContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.checkBookRequest.model.selectedCheque",
				"rakServiceReq.checkBookRequest.model.selectedfromAccountNumber",
				"rakServiceReq.checkBookRequest.model.selectedAddress1",
				"rakServiceReq.checkBookRequest.model.selectedAddress2",
				"rakServiceReq.checkBookRequest.model.selectedAddress3",
				"rakServiceReq.checkBookRequest.model.selectedCountry",
				"rakServiceReq.chequeBookRequest.isDispatchModeSet",
				"rakServiceReq.chequeBookRequest.isDeliveryAddSet",
				"rakServiceReq.chequeBookRequest.isDeliveryDetSet",

				
				
				"rakServiceReq.checkBookRequest.model.seletedBranch",
				"rakServiceReq.checkBookRequest.emirateSeletected",
				
				
				"rakServiceReq.checkBookRequest.model.AuthName",
				"rakServiceReq.checkBookRequest.model.AuthMobile",
				"rakServiceReq.checkBookRequest.model.mobilePrefix",
				"rakServiceReq.checkBookRequest.model.AuthEid"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Leaves": "rakServiceReq.checkBookRequest.model.selectedCheque",
				"AccountID": "rakServiceReq.checkBookRequest.model.selectedfromAccountNumber",
				"Address1": "rakServiceReq.checkBookRequest.model.selectedAddress1",
				"Address2": "rakServiceReq.checkBookRequest.model.selectedAddress2",
				"Address3": "rakServiceReq.checkBookRequest.model.selectedAddress3",
				"Address4": "rakServiceReq.checkBookRequest.model.selectedCountry",
				"OtherAddress": "rakServiceReq.checkBookRequest.model.Address",
				"AddressFlag": "rakServiceReq.chequeBookRequest.isDeliveryAddSet",
				"DispatchModeFlag": "rakServiceReq.chequeBookRequest.isDispatchModeSet",
				"AuthPersonFlag": "rakServiceReq.chequeBookRequest.isDeliveryDetSet",
				"AuthorizeName": "rakServiceReq.checkBookRequest.model.recipientName",
				"SelectedBranch": "rakServiceReq.checkBookRequest.model.seletedBranch",
				"ContactNumber": "rakServiceReq.checkBookRequest.model.previewContactNumber",
				"SelfContactNumber": "rakServiceReq.checkBookRequest.model.selfNumber",
				"CustomerName": "rakServiceReq.checkBookRequest.model.customerName",
				"EMIRATE_ID": "rakServiceReq.checkBookRequest.emirateSeletected",
				"DELIVERY_DETAILS_FLAG": "rakServiceReq.chequeBookRequest.isDeliveryDetSet",
				"AUTH_PERSON_NAME": "rakServiceReq.checkBookRequest.model.AuthName",
				"AUTH_PERSON_MOBILE": "rakServiceReq.checkBookRequest.model.AuthMobile",
				"MOBILE_PREFIX": "rakServiceReq.checkBookRequest.model.mobilePrefix",
				"AUTH_PERSON_EMIRATES_ID": "rakServiceReq.checkBookRequest.model.AuthEid"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommuincationAuthenticate"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommuincationBook"
			}
		}],

		"RakChequeCommuincationAuthenticate": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakChequeCommuincationAuthenticate"
			},
			"errorPage": {
				"pageName": "RakChequeCommuincationAuthenticate"
			}
		}, {
			"eventName": "onChequePrevClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommuincationBook"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommuincationBook"
			}
		}, {
			"eventName": "onChequeBookSuccessClick",
			"action": "ChequeBookRequestSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.checkBookRequest.model.authenticationPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.checkBookRequest.model.authenticationPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.checkBookRequest.model.authenticationPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommunicationSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommuincationAuthenticate"
			}
		}, {
			"eventName": "onChequeBookNoAuthSuccessClick",
			"action": "ChequeBookRequestSubmitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "emptyStr"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommunicationSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChequeCommuincationAuthenticate"
			}
		}],
		"RakChequeCommunicationSuccessful": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"ApplyNewCreditCard": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onCCConfirmClick",
			"action": "NewCreditCardConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.newCreditCardModel.name",
				"rakServiceReq.newCreditCard.cardTypeList",
				"rakServiceReq.newCreditCardModel.phone",
				"rakServiceReq.newCreditCardModel.email"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"EMBOSSING_NAME": "rakServiceReq.newCreditCardModel.name",
				"MOBILE_NUMBER": "rakServiceReq.newCreditCardModel.phone",
				"EMAIL": "rakServiceReq.newCreditCardModel.email",
				"CARDTYPE": "rakServiceReq.newCreditCard.cardTypeList"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "NewCreditCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "ApplyNewCreditCard"
			}
		}],
		"NewCreditCardConfirm": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onPrevServiceClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "ApplyNewCreditCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "ApplyNewCreditCard"
			}
		}, {
			"eventName": "onCCSuccessClick",
			"action": "NewCreditCardSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.newCreditCardModel.transactionPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.newCreditCardModel.transactionPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.newCreditCardModel.transactionPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "NewCreditCardSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "NewCreditCardConfirm"
			}
		}],
		"NewCreditCardSuccess": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"DebitCardReplacement": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onReplacementBranchConfirmClick",
			"action": "ReplacementDCConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.debitcardNumber",
				"rakServiceReq.ReplacementDCData.mobileNo",
				"rakServiceReq.ReplacementDCData.branchName"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"debitNo": "rakServiceReq.ReplacementDCData.debitcardNumber",
				"mobileNo": "rakServiceReq.ReplacementDCData.mobileNo",
				"branchName": "rakServiceReq.ReplacementDCData.branchName"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacementConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacement"
			}
		}, {
			"eventName": "onReplacementCourierConfirmClick",
			"action": "ReplacementCourierConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.debitcardNumber",
				"rakServiceReq.ReplacementDCData.mobileNo",
				"rakServiceReq.ReplacementDCData.authorizedRecipient",
				"rakServiceReq.ReplacementDCData.otherAddress",
				"rakServiceReq.ReplacementDCData.authContactNumber"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"debitNo": "rakServiceReq.ReplacementDCData.debitcardNumber",
				"mobileNo": "rakServiceReq.ReplacementDCData.mobileNo.toString()",
				"contactNo": "rakServiceReq.ReplacementDCData.contactNumber.toString()",
				"authName": "rakServiceReq.ReplacementDCData.authorizedRecipient",
				"regAdd": "rakServiceReq.ReplacementDCData.registeredAddress",
				"otherAdd": "rakServiceReq.ReplacementDCData.otherAddress",
				"authContact": "rakServiceReq.ReplacementDCData.authContactNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardCourierConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacement"
			}
		}],
		"DebitCardCourierConfirm": [{
			"eventName": "onDCReplacementCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardCourierConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardCourierConfirm"
			}
		}, {
			"eventName": "onDCReplacementSubmitClick",
			"action": "DCCourierSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"auth": "rakServiceReq.ReplacementDCData.transactionPassword",
				"BRANCH_NAME":"rakServiceReq.ReplacementDCData.branchList[rakServiceReq.ReplacementDCData.branchName].branchCode"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardCourierSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardCourierConfirm"
			}
		}],
		"DebitCardCourierSuccess": [{
			"eventName": "DCReplacementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"DebitCardReplacementConfirm": [{
			"eventName": "onDCReplacementCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacement"
			}
		}, {
			"eventName": "onDCReplacementSubmitClick",
			"action": "DCBranchSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"auth": "rakServiceReq.ReplacementDCData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacementSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "DebitCardReplacementConfirm"
			}
		}],
		"DebitCardReplacementSuccess": [{
			"eventName": "DCReplacementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakCreditCardReplacement": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onCreditCardSelected",
			"action": "RakReplacementCCDetails",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementCCData.creditCardNumber"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.ReplacementCCData.creditCardNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			}
		},
		 {
			"eventName": "onReplacementBranchValidationClick",
			"action": "RakReplacementCCConfirmService",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementCCData.creditCardNumber",
				"rakServiceReq.ReplacementCCData.mobileNo",
				"rakServiceReq.ReplacementCCData.isDispatchModeSet",
				"rakServiceReq.ReplacementCCData.reasonName",
				"rakServiceReq.ReplacementCCData.other"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			}
		}, 	
		 {
			"eventName": "onReplacementBranchConfirmClick",
			"action": "RakReplacementCCConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementCCData.creditCardNumber",
				"rakServiceReq.ReplacementCCData.branchName",
				"rakServiceReq.ReplacementCCData.isDispatchModeSet",
				"rakServiceReq.ReplacementCCData.reasonName",
				"rakServiceReq.ReplacementCCData.other"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"creditNo": "rakServiceReq.ReplacementCCData.creditCardNumber",
				"branchName": "rakServiceReq.ReplacementCCData.branchName",
				"emirate":"rakServiceReq.ReplacementCCData.emirateSeletected",
				"dispatchMode": "rakServiceReq.ReplacementCCData.isDispatchModeSet.toString()",
				"reason": "rakServiceReq.ReplacementCCData.reasonName",
				"other": "rakServiceReq.ReplacementCCData.other"
				
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacementConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			}
		}, {
			"eventName": "onReplacementCourierConfirmClick",
			"action": "RakReplacementCCCourierConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementCCData.creditCardNumber",
				"rakServiceReq.ReplacementCCData.isDeliveryAddSet",
				"rakServiceReq.ReplacementCCData.AuthrizedPerson",
				"rakServiceReq.ReplacementCCData.authorizedRecipient",
				"rakServiceReq.ReplacementCCData.otherAddress",
				"rakServiceReq.ReplacementCCData.authContactNumber",
				"rakServiceReq.ReplacementCCData.isDispatchModeSet",
				"rakServiceReq.ReplacementCCData.reasonName",
				"rakServiceReq.ReplacementCCData.other"
				
				
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"creditNo": "rakServiceReq.ReplacementCCData.creditCardNumber",
				"contactNo": "rakServiceReq.ReplacementCCData.contactNumber.toString()",
				"authName": "rakServiceReq.ReplacementCCData.authorizedRecipient",
				"regAdd": "rakServiceReq.ReplacementCCData.registeredAddress",
				"otherAdd": "rakServiceReq.ReplacementCCData.otherAddress",
				"authContact": "rakServiceReq.ReplacementCCData.authContactNumberString",
				"dispatchMode": "rakServiceReq.ReplacementCCData.isDispatchModeSet.toString()",
				"branchName": "rakServiceReq.ReplacementCCData.branchName",
				"isRegAdd": "rakServiceReq.ReplacementCCData.isDeliveryAddSet.toString()",
				"authRecptMode": "rakServiceReq.ReplacementCCData.AuthrizedPerson.toString()",
				"reason": "rakServiceReq.ReplacementCCData.reasonName",
				"other": "rakServiceReq.ReplacementCCData.other"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardCourierConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			}
		}],
		"RakCreditCardCourierConfirm": [{
			"eventName": "onCCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardCourierConfirm"
			}
		}, 
		
		 {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakCreditCardCourierConfirm"
			},
			"errorPage": {
				"pageName": "RakCreditCardCourierConfirm"
			}
		},{
			"eventName": "onCCReplacementSubmitClick",
			"action": "RakCCCourierSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementCCData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ReplacementCCData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.ReplacementCCData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardCourierSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardCourierConfirm"
			}
		}],
		"RakCreditCardCourierSuccess": [{
			"eventName": "CCReplacementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "CCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakCreditCardReplacementConfirm": [{
			"eventName": "onCCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacement"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakCreditCardReplacementConfirm"
			},
			"errorPage": {
				"pageName": "RakCreditCardReplacementConfirm"
			}
		}, {
			"eventName": "onCCReplacementSubmitClick",
			"action": "RakCCBranchSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementCCData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ReplacementCCData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.ReplacementCCData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacementSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardReplacementConfirm"
			}
		}],
		"RakCreditCardReplacementSuccess": [{
			"eventName": "CCReplacementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakApplyAdvanceSalary": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onAccountClick",
			"action": "RakAdvanceSalaryAccountListService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.AdvanceSalaryData.accountNumber"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.AdvanceSalaryData.accountNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyAdvanceSalary"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyAdvanceSalary"
			}
		}, {
			"eventName": "onSalaryConfirmClick",
			"action": "RakAdvanceSalaryConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.AdvanceSalaryData.accountNumber",
				"rakServiceReq.AdvanceSalaryData.advanceSalary"
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"account_input": "rakServiceReq.AdvanceSalaryData.accountNumber",
				"advSalary": "rakServiceReq.AdvanceSalaryData.advanceSalary.toString()",
				"amount": "rakServiceReq.AdvanceSalaryData.eligibleAmount.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAdvanceSalaryConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyAdvanceSalary"
			}
		}],
		"RakAdvanceSalaryConfirm": [{
			"eventName": "onAdvanceSalaryCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakAdvanceSalaryConfirm"
			},
			"errorPage": {
				"pageName": "RakAdvanceSalaryConfirm"
			}
		}, {
			"eventName": "onAdvaceSalaryBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyAdvanceSalary"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyAdvanceSalary"
			}
		}, {
			"eventName": "onAdvanceSalarySubmitClick",
			"action": "RakAdvanceSalarySuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.AdvanceSalaryData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.AdvanceSalaryData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.AdvanceSalaryData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAdvanceSalarySuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAdvanceSalaryConfirm"
			}
		}],
		"RakAdvanceSalarySuccessful": [{
			"eventName": "AdvanceSalaryDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakApplyCashRedeemCreditCard": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onCashRedeem",
			"action": "RakCashReedemCardList",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.changeCashReedemModel.creditCardNumber"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.changeCashReedemModel.creditCardNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemCreditCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemCreditCard"
			}
		}, {
			"eventName": "onRedeemConfirmClick",
			"action": "RakCashRedeemConfirmService",
			"actionType": "service",
			"validation": "false",
			"validation": "true",
			"validationParams": ["rakServiceReq.changeCashReedemModel.cardTypeList",
				"rakServiceReq.changeCashReedemModel.amount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.changeCashReedemModel.creditCardNumber",
				"redeem": "rakServiceReq.changeCashReedemModel.redeemDetailsList",
				"redeemAmount": "rakServiceReq.changeCashReedemModel.amount",
				"cardType": "rakServiceReq.changeCashReedemModel.cardDetailsList"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakRedeemConfirmPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemCreditCard"
			}
		}],
		"RedeemConfirmPage": [{
			"eventName": "onRedeemBalanceCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRedeemBalanceBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemCreditCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemCreditCard"
			}
		}, {
			"eventName": "onRedeemSubmitClick",
			"action": "RakRedeemBalancesuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.changeCashReedemModel.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.changeCashReedemModel.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.changeCashReedemModel.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakRedeemCashSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakRedeemConfirmPage"
			}
		}],
		"RakRedeemCashSuccess": [{
			"eventName": "RedeemBalanceDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakApplyCashRedeemDebitCard": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDebitCashRedeem",
			"action": "RakDebitCashReedemCardList",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.debitCashReedemModel.debitCardNumber"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"DEBIT_ACCOUNT": "rakServiceReq.debitCashReedemModel.debitCardNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemDebitCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemDebitCard"
			}
		}, {
			"eventName": "onDebitRedeemConfirmClick",
			"action": "RakDebitCashRedeemConfirmService",
			"actionType": "service",
			"validation": "false",
			"validation": "true",
			"validationParams": ["rakServiceReq.debitCashReedemModel.cardTypeList",
				"rakServiceReq.debitCashReedemModel.amount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"DEBIT_ACCOUNT": "rakServiceReq.debitCashReedemModel.debitCardNumber",
				"redeem": "rakServiceReq.debitCashReedemModel.redeemDetailsList",
				"redeemAmount": "rakServiceReq.debitCashReedemModel.amount"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitRedeemConfirmPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemDebitCard"
			}
		}],
		"RakDebitRedeemConfirmPage": [{
			"eventName": "onDebitRedeemBalanceCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "ServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDebitRedeemBalanceBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemDebitCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCashRedeemDebitCard"
			}
		}, {
			"eventName": "onDebitRedeemSubmitClick",
			"action": "RakDebitRedeemBalancesuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.debitCashReedemModel.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.debitCashReedemModel.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.debitCashReedemModel.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitRedeemCashSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitRedeemConfirmPage"
			}
		}],
		"RakDebitRedeemCashSuccess": [{
			"eventName": "DebitRedeemBalanceDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakEvantageBalanceOrderPage": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onEvantageConfirmClick",
			"action": "RakEvantageBalanceConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.EvantageData.EvaAccountNumber",
				"rakServiceReq.EvantageData.accountNumber",
				"rakServiceReq.EvantageData.balance"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"evaaccount_input": "rakServiceReq.EvantageData.EvaAccountNumber",
				"account_input": "rakServiceReq.EvantageData.accountNumber",
				"balance": "rakServiceReq.EvantageData.balance.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEvantageBalanceConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEvantageBalanceOrderPage"
			}
		}],
		"RakEvantageBalanceConfirm": [{
			"eventName": "onEvantgaeBalanceBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEvantageBalanceOrderPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEvantageBalanceOrderPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
        "OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakEvantageBalanceConfirm"
			},
			"errorPage": {
				"pageName": "RakEvantageBalanceConfirm"
			}
		}, {
			"eventName": "onEvantageBalanceSubmitClick",
			"action": "RakEvantageBalancesuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.EvantageData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.EvantageData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.EvantageData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEvantageBalanceSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakEvantageBalanceConfirm"
			}
		}],
		"RakEvantageBalanceSuccessful": [{
			"eventName": "EvantageBalanceDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKDirRegRequest": [{
			"eventName": "onRAKDirRegContinueClick",
			"action": "RAKDirRegRequestConfirmService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDirRegPreviewConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDirRegRequest"
			}
		}, {
			"eventName": "onRAKDirRegReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKDirRegPreviewConfirm": [{
			"eventName": "onRAKDirRegSubmitClick",
			"action": "RAKDirRegRequestSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKDirRegReqModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKDirRegReqModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKDirRegReqModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDirRegSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDirRegPreviewConfirm"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RAKDirRegPreviewConfirm"
			},
			"errorPage": {
				"pageName": "RAKDirRegPreviewConfirm"
			}
		}, {
			"eventName": "onRAKDirRegReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDirRegRequest"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKDirRegSuccess": [{
			"eventName": "onRAKDirRegOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDirRegSuccess"
			}
		}],
		"RAKEarlyCardRenewalInit": [{
			"eventName": "onRAKGoBtnlick",
			"action": "RAKEarlyCardRenewalDetailsService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKEarlyCardRenewalModel.selectedCCNo"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"accIndex": "rakServiceReq.RAKEarlyCardRenewalModel.selectedCCNo"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalInit"
			}
		}, {
			"eventName": "onRAKEarlyCardRenewalConfirmClick",
			"action": "RAKEarlyCardRenewalPreviewConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKEarlyCardRenewalModel.selectedCCNo",
				"rakServiceReq.RAKEarlyCardRenewalModel.selectedReason",
				"rakServiceReq.RAKEarlyCardRenewalModel.selectedBranch",
				"rakServiceReq.RAKEarlyCardRenewalModel.emirateSeletected",
				"rakServiceReq.RAKEarlyCardRenewalModel.others"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"branchIndex": "rakServiceReq.RAKEarlyCardRenewalModel.selectedBranch",
				"expiryDate": "rakServiceReq.RAKEarlyCardRenewalModel.expiryDate",
				"selectedReasonCode": "rakServiceReq.RAKEarlyCardRenewalModel.selectedReason",
				"EMIRATE_ID": "rakServiceReq.RAKEarlyCardRenewalModel.emirateSeletected",
				"cardNumber": "rakServiceReq.RAKEarlyCardRenewalModel.cardNo",
				"OTHERS":"rakServiceReq.RAKEarlyCardRenewalModel.others",
				"branchName": "rakServiceReq.RAKEarlyCardRenewalModel.branchName"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalPreviewConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalInit"
			}
		}, {
			"eventName": "onRAKEarlyCardRenewalBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKEarlyCardRenewalPreviewConfirm": [{
			"eventName": "onRAKEarlyCardRenewalSubmitClick",
			"action": "RAKEarlyCardRenewalSubmitToRMService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKEarlyCardRenewalModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKEarlyCardRenewalModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"cardNumber": "rakServiceReq.RAKEarlyCardRenewalModel.cardNo",
				"selctedReason": "rakServiceReq.RAKEarlyCardRenewalModel.selectedReason",
				"branchName": "rakServiceReq.RAKEarlyCardRenewalModel.branchName",
				"branchIndex": "rakServiceReq.RAKEarlyCardRenewalModel.selectedBranch",
				"Mode": "rakServiceReq.RAKEarlyCardRenewalModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalSucess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalPreviewConfirm"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKEarlyCardRenewalPreviewConfirm"
			},
			"errorPage": {
				"pageName": "RAKEarlyCardRenewalPreviewConfirm"
			}
		}, {
			"eventName": "onRAKEarlyCardRenewalBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKEarlyCardRenewalInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKEarlyCardRenewalSucess": [{
			"eventName": "onRAKECROkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKAlertPrefInit": [{
			"eventName": "onRAKAlertPrefConfirmClick",
			"action": "RAKAlertPrefConfirmService",
			"actionType": "service",
			"validation": "false",
			"validationParams": [
				"rakServiceReq.RAKAlertPrefModel.selectedDnd1FromDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd1ToDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd2FromDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd2ToDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd3FromDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd3ToDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd4FromDesc",
				"rakServiceReq.RAKAlertPrefModel.selectedDnd4ToDesc"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"dnd1From": "rakServiceReq.RAKAlertPrefModel.selectedDnd1From",
				"dnd2From": "rakServiceReq.RAKAlertPrefModel.selectedDnd2From",
				"dnd3From": "rakServiceReq.RAKAlertPrefModel.selectedDnd3From",
				"dnd4From": "rakServiceReq.RAKAlertPrefModel.selectedDnd4From",
				"dnd1To": "rakServiceReq.RAKAlertPrefModel.selectedDnd1To",
				"dnd2To": "rakServiceReq.RAKAlertPrefModel.selectedDnd2To",
				"dnd3To": "rakServiceReq.RAKAlertPrefModel.selectedDnd3To",
				"dnd4To": "rakServiceReq.RAKAlertPrefModel.selectedDnd4To",
				"promoMsg": "rakServiceReq.RAKAlertPrefModel.promoMsgTxt"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAlertPrefConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAlertPrefInit"
			}
		}, {
			"eventName": "onAlertPrefInitPageBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKAlertPrefConfirm": [{
			"eventName": "onRAKAlertPrefSubmitClick",
			"action": "RAKAlertPrefSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKAlertPrefModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKAlertPrefModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"dnd1From": "rakServiceReq.RAKAlertPrefModel.selectedDnd1From",
				"dnd2From": "rakServiceReq.RAKAlertPrefModel.selectedDnd2From",
				"dnd3From": "rakServiceReq.RAKAlertPrefModel.selectedDnd3From",
				"dnd4From": "rakServiceReq.RAKAlertPrefModel.selectedDnd4From",
				"dnd1To": "rakServiceReq.RAKAlertPrefModel.selectedDnd1To",
				"dnd2To": "rakServiceReq.RAKAlertPrefModel.selectedDnd2To",
				"dnd3To": "rakServiceReq.RAKAlertPrefModel.selectedDnd3To",
				"dnd4To": "rakServiceReq.RAKAlertPrefModel.selectedDnd4To",
				"promoMsg": "rakServiceReq.RAKAlertPrefModel.promoMsgTxt",
				"Mode": "rakServiceReq.RAKAlertPrefModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAlertPrefSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAlertPrefConfirm"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RAKAlertPrefConfirm"
			},
			"errorPage": {
				"pageName": "RAKAlertPrefConfirm"
			}
		}, {
			"eventName": "onAlertPrefAuthPageBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAlertPrefInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKAlertPrefSuccess": [{
			"eventName": "onRAKAlertPrefOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKOprAcctBalanceConfReqInit": [{
			"eventName": "onRAKOprAcctBalConfReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKOprAcctBalConfReqConfirmClick",
			"action": "RAKOprAcctBalConfReqConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.common.initDate",
				"rakServiceReq.RAKOprAcctBalConfReq.addressdTo",
				"rakServiceReq.RAKOprAcctBalConfReq.address",
				"rakServiceReq.RAKOprAcctBalConfReq.selectedAcctNo",
				"rakServiceReq.RAKOprAcctBalConfReq.selectedbranch",
				"rakServiceReq.RAKOprAcctBalConfReq.notes",
				"rakServiceReq.RAKOprAcctBalConfReq.mobile",				
				"rakServiceReq.RAKOprAcctBalConfReq.emirateSeletected",
				"rakServiceReq.RAKOprAcctBalConfReq.selectedForAcc"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"debt_Acct": "rakServiceReq.RAKOprAcctBalConfReq.selectedAcctNo",
				"date_day": "rakServiceReq.RAKOprAcctBalConfReq.selectedDate_day",
				"date_month": "rakServiceReq.RAKOprAcctBalConfReq.selectedDate_month",
				"date_year": "rakServiceReq.RAKOprAcctBalConfReq.selectedDate_year",
				"selectedBranch": "rakServiceReq.RAKOprAcctBalConfReq.selectedbranch",
				"EMIRATE_ID": "rakServiceReq.RAKOprAcctBalConfReq.emirateSeletected",				
				"langSelected": "rakServiceReq.RAKOprAcctBalConfReq.selectedLang",
				"addressTo": "rakServiceReq.RAKOprAcctBalConfReq.addressdTo",
				"address": "rakServiceReq.RAKOprAcctBalConfReq.address",				
				"delMode": "rakServiceReq.RAKOprAcctBalConfReq.selectedDelModeToServer",
				"mobileNo": "rakServiceReq.RAKOprAcctBalConfReq.mobileNoString",
				"notes": "rakServiceReq.RAKOprAcctBalConfReq.notes",
				"selAcc":"rakServiceReq.RAKOprAcctBalConfReq.selectedForAcc"				
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprAcctBalanceConfReqConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprAcctBalanceConfReqInit"
			}
		}],
		"RAKOprAcctBalanceConfReqConfirm": [{
			"eventName": "onRAKOprAcctBalConfReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprAcctBalanceConfReqInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKOprAcctBalanceConfReqConfirm"
			},
			"errorPage": {
				"pageName": "RAKOprAcctBalanceConfReqConfirm"
			}
		}, {
			"eventName": "onRAKOprAcctBalConfReqSubmitClick",
			"action": "RAKOprAcctBalConfReqSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKOprAcctBalConfReq.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKOprAcctBalConfReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"date": "rakServiceReq.RAKOprAcctBalConfReq.selectedDate",
				"langSelected": "rakServiceReq.RAKOprAcctBalConfReq.selectedLang",
				"addressTo": "rakServiceReq.RAKOprAcctBalConfReq.addressdTo",
				"address": "rakServiceReq.RAKOprAcctBalConfReq.address",
				"debt_Acct": "rakServiceReq.RAKOprAcctBalConfReq.selectedAcctNo",
				"delMode": "rakServiceReq.RAKOprAcctBalConfReq.selectedDelModeToServer",
				"mobileNo": "rakServiceReq.RAKOprAcctBalConfReq.mobileNoString",
				"notes": "rakServiceReq.RAKOprAcctBalConfReq.notes",
				"selectedBranch": "rakServiceReq.RAKOprAcctBalConfReq.selectedbranch",
				"Mode": "rakServiceReq.RAKOprAcctBalConfReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprAcctBalanceConfReqSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprAcctBalanceConfReqConfirm"
			}
		}],
		"RAKOprAcctBalanceConfReqSuccess": [{
			"eventName": "onRAKOprAcctBalConfReqOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKLoanPreClosureInit": [{
			"eventName": "onSubmitOfLoanPreClosureDetailsToFetch",
			"action": "RakInstallmentPostponementFetchService",
			"actionType": "service",
			"validation": "false",
			"validationParams": ["rakServiceReq.RAKLoanPreClosureModel.selectedLoanAcct"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"PER_LOAN_ACC_ID": "rakServiceReq.RAKLoanPreClosureModel.selectedLoanAcct"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanPreClosureInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKLoanPreClosureBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKLoanPreClosureConfirmClick",
			"action": "RAKLoanPreClosureConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanPreClosureModel.selectedLoanAcct",
				"rakServiceReq.RAKLoanPreClosureModel.selectedDebitAcct"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"selectedLoanAcctNo": "rakServiceReq.RAKLoanPreClosureModel.selectedLoanAcct",
				"selectedDebtAcctNo": "rakServiceReq.RAKLoanPreClosureModel.selectedDebitAcct"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanPreClosureConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanPreClosureInit"
			}
		}],
		"RAKLoanPreClosureConfirm": [{
			"eventName": "onRAKLoanPreClosureBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanPreClosureInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKLoanPreClosureConfirm"
			},
			"errorPage": {
				"pageName": "RAKLoanPreClosureConfirm"
			}
		}, {
			"eventName": "onRAKLoanPreClosureSubmitClick",
			"action": "RAKLoanPreClosureSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanPreClosureModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKLoanPreClosureModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"selectedLoanAcctNo": "rakServiceReq.RAKLoanPreClosureModel.selectedLoanAcct",
				"selectedDebtAcctNo": "rakServiceReq.RAKLoanPreClosureModel.selectedDebitAcct",
				"Mode": "rakServiceReq.RAKLoanPreClosureModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanPreClosureSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanPreClosureConfirm"
			}
		}],
		"RAKLoanPreClosureSuccess": [{
			"eventName": "onRAKLoanPreClosureOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakLoanRepaySuccessServReq": [{
			"eventName": "onRAKLoanRepaySuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakLoanRepayConfirmationServiceReq": [{
			"eventName": "onRAKLoanRepayServReqSubmitClick",
			"action": "RakLoanRepayServiceReqSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanRepayAccList.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKLoanRepayAccList.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"LON_ACC": "rakServiceReq.RAKLoanRepayAccList.selectedLon",
				"FUN_ACC": "rakServiceReq.RAKLoanRepayAccList.selectedOpr",
				"PAYMENT_AMOUNT": "rakServiceReq.RAKLoanRepayAccList.amountConfirm",
				"TYPE_PAY": "rakServiceReq.RAKLoanRepayAccList.payType",
				"Mode": "rakServiceReq.RAKLoanRepayAccList.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepaySuccessServReq"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepayConfirmationServiceReq"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakLoanRepayConfirmationServiceReq"
			},
			"errorPage": {
				"pageName": "RakLoanRepayConfirmationServiceReq"
			}
		}, {
			"eventName": "onRAKLoanRepayConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepayHomeServiceReq"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakLoanRepayHomeServiceReq": [{
			"eventName": "onRAKLoanRepayConfirmClick",
			"action": "RakLoanRepayServiceReqConfirmationService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanRepayAccList.loanAcctId",
				"rakServiceReq.RAKLoanRepayAccList.selectedOpr",
				"rakServiceReq.RAKLoanRepayAccList.amount",
				"rakServiceReq.RAKLoanRepayAccList.payType"

			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"LON_ACC": "rakServiceReq.RAKLoanRepayAccList.selectedLon",
				"FUN_ACC": "rakServiceReq.RAKLoanRepayAccList.selectedOpr",
				"PAYMENT_AMOUNT": "rakServiceReq.RAKLoanRepayAccList.amountConfirm",
				"TYPE_PAY": "rakServiceReq.RAKLoanRepayAccList.payType"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepayConfirmationServiceReq"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepayHomeServiceReq"
			}
		}, {
			"eventName": "onRakGetLoanDetailsRq",
			"action": "RakLoanRepayGetLoanAcctDetailsService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanRepayAccList.loanAcctId"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"ACCOUNT_IDX_LOANREPAY": "rakServiceReq.RAKLoanRepayAccList.loanAcctId"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepayHomeServiceReq"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanRepayHomeServiceReq"
			}
		}, {
			"eventName": "onRAKLonRepayInitBack",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakBlockedCreditCardPage": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onBlockedCreditCardSelected",
			"action": "RakTempCardBlockedListService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.BlockedCreditCardData.creditCardNum"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.BlockedCreditCardData.creditCardNum"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardPage"
			}
		}, {
			"eventName": "onTempBlockedCreditClick",
			"action": "RakTempBlockedCreditSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.BlockedCreditCardData.creditCardNum",
				"rakServiceReq.BlockedCreditCardData.other",
				"rakServiceReq.BlockedCreditCardData.reasonName"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.BlockedCreditCardData.creditCardNum",
				"reason": "rakServiceReq.BlockedCreditCardData.reasonName",
				"other": "rakServiceReq.BlockedCreditCardData.other"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardPage"
			}
		}],
		"RakBlockedCreditCardConfirm": [{
			"eventName": "onTempBlockedBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakBlockedCreditCardConfirm"
			},
			"errorPage": {
				"pageName": "RakBlockedCreditCardConfirm"
			}
		}, {
			"eventName": "onTempBlockedCreditConfirmClick",
			"action": "RakTempBlkCreditConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.BlockedCreditCardData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.BlockedCreditCardData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.BlockedCreditCardData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBlockedCreditCardConfirm"
			}
		}],
		"RakBlockedCreditCardSuccess": [{
			"eventName": "onTempBlockedCreditSuccessClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakDebitCardReplacement": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onReplacementBranchConfirmClick",
			"action": "RakReplacementDCConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.debitcardNumber",
				"rakServiceReq.ReplacementDCData.emirateSeletected",
				"rakServiceReq.ReplacementDCData.branchName"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"debitNo": "rakServiceReq.ReplacementDCData.debitcardNumber",
				"BRANCH_NAME": "rakServiceReq.ReplacementDCData.branchList[rakServiceReq.ReplacementDCData.branchName].branchCode",
				"EMIRATE_ID": "rakServiceReq.ReplacementDCData.emirateSeletected",
				"dispatchMode": "rakServiceReq.ReplacementDCData.isDispatchModeSet.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacementConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacement"
			}
		}, {
			"eventName": "onReplacementCourierConfirmClick",
			"action": "RakReplacementCourierConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.debitcardNumber",
				"rakServiceReq.ReplacementDCData.authorizedRecipient",
				"rakServiceReq.ReplacementDCData.otherAddress",
				"rakServiceReq.ReplacementDCData.authContactNumber"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"debitNo": "rakServiceReq.ReplacementDCData.debitcardNumber",
				"contactNo": "rakServiceReq.ReplacementDCData.contactNumber.toString()",
				"authName": "rakServiceReq.ReplacementDCData.authorizedRecipient",
				"regAdd": "rakServiceReq.ReplacementDCData.registeredAddress",
				"otherAdd": "rakServiceReq.ReplacementDCData.otherAddress",
				"authContact": "rakServiceReq.ReplacementDCData.authContactNumber.toString()",
				"authRecptMode": "rakServiceReq.ReplacementDCData.AuthrizedPerson.toString()",
				"dispatchMode": "rakServiceReq.ReplacementDCData.isDispatchModeSet.toString()",
				"devAdress": "rakServiceReq.ReplacementDCData.isDeliveryAddSet.toString()",
				"selfContact": "rakServiceReq.ReplacementDCData.contactNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardCourierConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacement"
			}
		}],
		"RakDebitCardCourierConfirm": [{
			"eventName": "onDCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacement"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakDebitCardCourierConfirm"
			},
			"errorPage": {
				"pageName": "RakDebitCardCourierConfirm"
			}
		}, {
			"eventName": "onDCReplacementSubmitClick",
			"action": "RakDCCourierSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.ReplacementDCData.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardCourierSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardCourierConfirm"
			}
		}],
		"RakDebitCardCourierSuccess": [{
			"eventName": "DCReplacementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakDebitCardReplacementConfirm": [{
			"eventName": "onDCReplacementCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDCReplacementBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacement"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacement"
			}
		}, 
		{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakDebitCardReplacementConfirm"
			},
			"errorPage": {
				"pageName": "RakDebitCardReplacementConfirm"
			}
		},
		{
			"eventName": "onDCReplacementSubmitClick",
			"action": "RakDCBranchSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ReplacementDCData.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.ReplacementDCData.transactionPassword",
				"BRANCH_NAME": "rakServiceReq.ReplacementDCData.branchList[rakServiceReq.ReplacementDCData.branchName].branchCode"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacementSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDebitCardReplacementConfirm"
			}
		}],
		"RakDebitCardReplacementSuccess": [{
			"eventName": "DCReplacementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakUnblockDebitCardSRSuccess": [{
			"eventName": "onRAKUnBlockSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}

		}],
		"RakUnblockDebitCardSRConfirm": [{
				"eventName": "onRAKUnBlockDebitSubmitClick",
				"action": "RakUnblockDebitCardSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.rakUnblockDebitCardBlock.txnPwd"],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.rakUnblockDebitCardBlock.txnPwd"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.rakUnblockDebitCardBlock.txnPwd",
					"CARDNO": "rakServiceReq.rakUnblockDebitCardBlock.selectedCard",
					"EXPDATE": "rakServiceReq.rakUnblockDebitCardBlock.confirmExpDate",
					"REASON": "rakServiceReq.rakUnblockDebitCardBlock.reason",
					"OTHERS": "rakServiceReq.rakUnblockDebitCardBlock.other"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockDebitCardSRSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockDebitCardSRConfirm"
				}
			}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

				},
				"successPage": {
					"pageName": "RakUnblockDebitCardSRConfirm"
				},
				"errorPage": {
					"pageName": "RakUnblockDebitCardSRConfirm"
				}
			}, {
				"eventName": "onRAKUnBlockDebitConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockDebitCardSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],

		"RakUnblockDebitCardSRInit": [{
			"eventName": "onRAKUnblockDebConfirmClick",
			"action": "RakUnblockDebitCardConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.rakUnblockDebitCardBlock.selectedCard",
				
				"rakServiceReq.rakUnblockDebitCardBlock.reason",
				"rakServiceReq.rakUnblockDebitCardBlock.other"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.rakUnblockDebitCardBlock.selectedCard",
				"EXPDATE": "rakServiceReq.rakUnblockDebitCardBlock.confirmExpDate",
				"REASON": "rakServiceReq.rakUnblockDebitCardBlock.reason",
				"OTHERS": "rakServiceReq.rakUnblockDebitCardBlock.other"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockDebitCardSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onUnBlockDebCardHomeBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakTempDebitCardBlockSuccess": [{
			"eventName": "onRAKTempDebBlockSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakTempDebitCardBlockConfirm": [{
				"eventName": "onRAKTempBlockDebitSubmitClick",
				"action": "RakTempDebitCardBlockSubmitService",
				"actionType": "action",
				"validation": "true",
				"validationParams": ["rakServiceReq.rakTempDebitCardBlock.txnPwd"],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.rakTempDebitCardBlock.txnPwd"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.rakTempDebitCardBlock.txnPwd",
					"CARDNO": "rakServiceReq.rakTempDebitCardBlock.selectedCard",
					"REASON": "rakServiceReq.rakTempDebitCardBlock.reason",
					"OTHERS": "rakServiceReq.rakTempDebitCardBlock.other"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTempDebitCardBlockSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTempDebitCardBlockConfirm"
				}
			}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

				},
				"successPage": {
					"pageName": "RakTempDebitCardBlockConfirm"
				},
				"errorPage": {
					"pageName": "RakTempDebitCardBlockConfirm"
				}
			}, {
				"eventName": "onRAKTempBlockDebitConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTempBlockDebitCardClickInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],
		"RakTempBlockDebitCardClickInit": [{
			"eventName": "onRAKTempDebBlockonfirmClick",
			"action": "RakTempDebitCardBlockConfirmService",
			"actionType": "action",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.rakTempDebitCardBlock.selectedCard",
				
				"rakServiceReq.rakTempDebitCardBlock.reason",
				"rakServiceReq.rakTempDebitCardBlock.other"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.rakTempDebitCardBlock.selectedCard",
				"EXPDATE":"rakServiceReq.rakTempDebitCardBlock.expDate",
				"REASON":"rakServiceReq.rakTempDebitCardBlock.reason",
				"OTHER":"rakServiceReq.rakTempDebitCardBlock.other"
				
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTempDebitCardBlockConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onTempBlockDebCardHomeBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RAKOprSavingAcctOpenInit": [{
				"eventName": "onRAKOprSavingAcctOpenBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}, {
				"eventName": "onRAKOprSavingAcctOpenConfirmClick",
				"action": "RAKOprSavingAcctOpenConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RAKOprSavingAcctOpenReq.selectedRefNo",
					"rakServiceReq.RAKOprSavingAcctOpenReq.EmiratesId",
					"rakServiceReq.RAKOprSavingAcctOpenReq.selectedCrn",
					"rakServiceReq.RAKOprSavingAcctOpenReq.selectedDate",
					"rakServiceReq.RAKOprSavingAcctOpenReq.selectedBranch"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"expDate": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedDate",
					"expirydate_year": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedDate_year",
					"expirydate_month": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedDate_month",
					"expirydate_day": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedDate_day",
					"debitCardRqd": "rakServiceReq.RAKOprSavingAcctOpenReq.debitCardRqd",
					"refAccNo": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedRefNo",
					"acctCrn": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedCrn",
					"emiratesId": "rakServiceReq.RAKOprSavingAcctOpenReq.EmiratesId.toString()",
					"TERMS_FLAG": "rakServiceReq.acceptTermscondition",
					"selectedBranch": "rakServiceReq.RAKOprSavingAcctOpenReq.selectedBranch"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprSavingAcctOpenConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprSavingAcctOpenInit"
				}
			}
		],
		"RAKOprSavingAcctOpenConfirm": [{
			"eventName": "onRAKOprSavingAcctOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprSavingAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKOprSavingAcctOpenConfirm"
			},
			"errorPage": {
				"pageName": "RAKOprSavingAcctOpenConfirm"
			}
		}, {
			"eventName": "onRAKOprSavingAcctOpenReqSubmitClick",
			"action": "RAKOprSavingAcctOpenSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKOprSavingAcctOpenReq.txnPwd"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKOprSavingAcctOpenReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKOprSavingAcctOpenReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprSavingAcctOpenSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprSavingAcctOpenConfirm"
			}
		}],
		"RAKOprSavingAcctOpenSuccess": [{
				"eventName": "onRAKOprSavingAcctOpenOkClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}

		],

		"RAKOprEvantageAcctOpenInit": [{
				"eventName": "onRAKOprEvantageAcctOpenBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			},

			{
				"eventName": "onRAKOprEvantageAcctOpenConfirmClick",
				"action": "RAKOprEvantageAcctOpenConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RAKOprEvantageAcctOpenReq.selectedRefNo",
					"rakServiceReq.RAKOprEvantageAcctOpenReq.EmiratesId",
					"rakServiceReq.RAKOprEvantageAcctOpenReq.operationMode",
					"rakServiceReq.RAKOprEvantageAcctOpenReq.selectedDate",
					"rakServiceReq.RAKOprEvantageAcctOpenReq.debitCardRqd"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"expDate": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedDate",
					"expirydate_year": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedDate_year",
					"expirydate_month": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedDate_month",
					"expirydate_day": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedDate_day",
					"debitCardRqd": "rakServiceReq.RAKOprEvantageAcctOpenReq.debitCardRqd",
					"refAccNo": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedRefNo",
					"acctCrn": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedCrn",
					"emiratesId": "rakServiceReq.RAKOprEvantageAcctOpenReq.EmiratesId.toString()",
					"operMode": "rakServiceReq.RAKOprEvantageAcctOpenReq.operationMode",
					"interestBearing": "rakServiceReq.RAKOprEvantageAcctOpenReq.interestBearing",
					"selectedBranch": "rakServiceReq.RAKOprEvantageAcctOpenReq.selectedBranch",
					"TERMS_FLAG":"rakServiceReq.acceptTermscondition"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprEvantageAcctOpenConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprEvantageAcctOpenInit"
				}
			}
		],
		"RAKOprEvantageAcctOpenConfirm": [{
			"eventName": "onRAKOprEvantageAcctOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprEvantageAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKOprEvantageAcctOpenConfirm"
			},
			"errorPage": {
				"pageName": "RAKOprEvantageAcctOpenConfirm"
			}
		}, {
			"eventName": "onRAKOprEvantageAcctOpenReqSubmitClick",
			"action": "RAKOprEvantageAcctOpenSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKOprEvantageAcctOpenReq.txnPwd"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKOprEvantageAcctOpenReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKOprEvantageAcctOpenReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprEvantageAcctOpenSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprEvantageAcctOpenConfirm"
			}
		}],
		"RAKOprEvantageAcctOpenSuccess": [{
				"eventName": "onRAKOprEvantageAcctOpenOkClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}

		],

		"RAKOprFSAcctOpenInit": [{
				"eventName": "onRAKOprFSAcctOpenBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			},

			{
				"eventName": "onRAKOprFSAcctOpenConfirmClick",
				"action": "RAKOprFSAcctOpenConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RAKOprFSAcctOpenReq.selectedRefNo",
					"rakServiceReq.RAKOprFSAcctOpenReq.EmiratesId",
					"rakServiceReq.RAKOprFSAcctOpenReq.selectedCrn",
					"rakServiceReq.RAKOprFSAcctOpenReq.selectedBranch",
					"rakServiceReq.RAKOprFSAcctOpenReq.selectedDate",
					"rakServiceReq.RAKOprFSAcctOpenReq.emirateSeletected",
					"rakServiceReq.RAKOprFSAcctOpenReq.debitCardRqd",
					"rakServiceReq.RAKOprFSAcctOpenReq.operationMode"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"expDate": "rakServiceReq.RAKOprFSAcctOpenReq.selectedDate",
					"expirydate_year": "rakServiceReq.RAKOprFSAcctOpenReq.selectedDate_year",
					"expirydate_month": "rakServiceReq.RAKOprFSAcctOpenReq.selectedDate_month",
					"expirydate_day": "rakServiceReq.RAKOprFSAcctOpenReq.selectedDate_day",
					"debitCardRqd": "rakServiceReq.RAKOprFSAcctOpenReq.debitCardRqd",
					"refAccNo": "rakServiceReq.RAKOprFSAcctOpenReq.selectedRefNo",
					"acctCrn": "rakServiceReq.RAKOprFSAcctOpenReq.selectedCrn",
					"emiratesId": "rakServiceReq.RAKOprFSAcctOpenReq.EmiratesId.toString()",
					"operMode": "rakServiceReq.RAKOprFSAcctOpenReq.operationMode",
					"selectedBranch": "rakServiceReq.RAKOprFSAcctOpenReq.selectedBranch",
					"TERMS_FLAG":"rakServiceReq.acceptTermscondition"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprFSAcctOpenConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprFSAcctOpenInit"
				}
			}
		],
		"RAKOprFSAcctOpenConfirm": [{
			"eventName": "onRAKOprFSAcctOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprFSAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKOprFSAcctOpenConfirm"
			},
			"errorPage": {
				"pageName": "RAKOprFSAcctOpenConfirm"
			}
		}, {
			"eventName": "onRAKOprFSAcctOpenReqSubmitClick",
			"action": "RAKOprFSAcctOpenSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKOprFSAcctOpenReq.txnPwd"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKOprFSAcctOpenReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKOprFSAcctOpenReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprFSAcctOpenSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprFSAcctOpenConfirm"
			}
		}],
		"RAKOprFSAcctOpenSuccess": [{
				"eventName": "onRAKOprFSAcctOpenOkClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}

		],
		"RakUnblockCreditCardSRSuccess": [{
			"eventName": "onRAKUnBlockSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}

		}],

		"RakUnblockCreditCardSRConfirm": [{
				"eventName": "onRAKUnBlockCreditSubmitClick",
				"action": "RakUnblockCreditCardSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RakUnblockCreditCardBlock.txnPwd"],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.RakUnblockCreditCardBlock.txnPwd"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.RakUnblockCreditCardBlock.txnPwd",
					"CARDNO": "rakServiceReq.RakUnblockCreditCardBlock.selectedCard",
					"EXPDATE": "rakServiceReq.RakUnblockCreditCardBlock.confirmExpDate",
					"REASON": "rakServiceReq.RakUnblockCreditCardBlock.reason",
					"OTHERS": "rakServiceReq.RakUnblockCreditCardBlock.other"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRConfirm"
				}
			}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakUnblockCreditCardSRConfirm"
				},
				"errorPage": {
					"pageName": "RakUnblockCreditCardSRConfirm"
				}
			}, {
				"eventName": "onRAKUnBlockCreditConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],
		"RakUnblockCreditCardSRInit": [{
			"eventName": "onRAKUnblockCreditConfirmClick",
			"action": "RakUnblockCreditCardConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakUnblockCreditCardBlock.selectedCard",
				"rakServiceReq.RakUnblockCreditCardBlock.expDate",
				"rakServiceReq.RakUnblockCreditCardBlock.reason",
				"rakServiceReq.RakUnblockCreditCardBlock.other"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.RakUnblockCreditCardBlock.selectedCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRInit"
			}
		}, {
			"eventName": "onUnblockCreditCardSelected",
			"action": "RakUnblockCreditCardDetailService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakUnblockCreditCardBlock.selectedCard"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.RakUnblockCreditCardBlock.selectedCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRInit"
			}
		}, {
			"eventName": "onUnBlockCreditCardHomeBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakUnblockCreditCardSRConfirm": [{
				"eventName": "onRAKUnBlockCreditSubmitClick",
				"action": "RakUnblockCreditCardSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RakUnblockCreditCardBlock.txnPwd"],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.RakUnblockCreditCardBlock.txnPwd"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.RakUnblockCreditCardBlock.txnPwd",
					"CARDNO": "rakServiceReq.RakUnblockCreditCardBlock.selectedCard",
					"EXPDATE": "rakServiceReq.RakUnblockCreditCardBlock.confirmExpDate",
					"REASON": "rakServiceReq.RakUnblockCreditCardBlock.reason",
					"OTHERS": "rakServiceReq.RakUnblockCreditCardBlock.other"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRConfirm"
				}
			},
			{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakUnblockCreditCardSRConfirm"
				},
				"errorPage": {
					"pageName": "RakUnblockCreditCardSRConfirm"
				}
			}, 

			{
				"eventName": "onRAKUnBlockCreditConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakUnblockCreditCardSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],
		"RakUnblockCreditCardSRInit": [{
			"eventName": "onRAKUnblockCreditConfirmClick",
			"action": "RakUnblockCreditCardConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakUnblockCreditCardBlock.selectedCard",
				
				"rakServiceReq.RakUnblockCreditCardBlock.reason",
				"rakServiceReq.RakUnblockCreditCardBlock.other"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.RakUnblockCreditCardBlock.selectedCard",
				"EXPDATE": "rakServiceReq.RakUnblockCreditCardBlock.confirmExpDate",
				"REASON": "rakServiceReq.RakUnblockCreditCardBlock.reason",
				"OTHERS": "rakServiceReq.RakUnblockCreditCardBlock.other"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onUnblockCreditCardSelected",
			"action": "RakUnblockCreditCardDetailService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakUnblockCreditCardBlock.selectedCard"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.RakUnblockCreditCardBlock.selectedCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakUnblockCreditCardSRInit"
			}
		}, {
			"eventName": "onUnBlockCreditCardHomeBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKOprCurrentAcctOpenInit": [{
				"eventName": "onRAKOprCurrentAcctOpenBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			},

			{
				"eventName": "onRAKOprCurrentAcctOpenConfirmClick",
				"action": "RAKOprCurrentAcctOpenConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RAKOprCurrentAcctOpenReq.selectedRefNo",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.EmiratesId",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.selectedCrn",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.selectedBranch",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.uaeResident",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.selectedDate",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.chkBookRqd",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.visaExpiryDate",
					"rakServiceReq.RAKOprCurrentAcctOpenReq.intrstRAKValue"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"expDate": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedDate",
					"expirydate_year": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedDate_year",
					"expirydate_month": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedDate_month",
					"expirydate_day": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedDate_day",
					"debitCardRqd": "rakServiceReq.RAKOprCurrentAcctOpenReq.debitCardRqd",
					"refAccNo": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedRefNo",
					"acctCrn": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedCrn",
					"emiratesId": "rakServiceReq.RAKOprCurrentAcctOpenReq.EmiratesId.toString()",
					"uaeResident": "rakServiceReq.RAKOprCurrentAcctOpenReq.uaeResident",
					"selectedBranch": "rakServiceReq.RAKOprCurrentAcctOpenReq.selectedBranch",
					"visaExpirydate_year": "rakServiceReq.RAKOprCurrentAcctOpenReq.visaExpiryDate_year",
					"visaExpirydate_month": "rakServiceReq.RAKOprCurrentAcctOpenReq.visaExpiryDate_month",
					"visaExpirydate_day": "rakServiceReq.RAKOprCurrentAcctOpenReq.visaExpiryDate_day",
					"chkBookRqd": "rakServiceReq.RAKOprCurrentAcctOpenReq.chkBookRqd",
					"intrstRAKValue": "rakServiceReq.RAKOprCurrentAcctOpenReq.intrstRAKValue",
					"TERMS_FLAG": "rakServiceReq.acceptTermscondition",
					"isUaeResident": "rakServiceReq.RAKOprCurrentAcctOpenReq.isUaeResident.toString()"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprCurrentAcctOpenConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprCurrentAcctOpenInit"
				}
			}
		],
		"RAKOprCurrentAcctOpenConfirm": [{
			"eventName": "onRAKOprCurrentAcctOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprCurrentAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
                "OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RAKOprCurrentAcctOpenConfirm"
			},
			"errorPage": {
				"pageName": "RAKOprCurrentAcctOpenConfirm"
			}
		}, {
			"eventName": "onRAKOprCurrentAcctOpenReqSubmitClick",
			"action": "RAKOprCurrentAcctOpenSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKOprCurrentAcctOpenReq.txnPwd"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKOprCurrentAcctOpenReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKOprCurrentAcctOpenReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprCurrentAcctOpenSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprCurrentAcctOpenConfirm"
			}
		}],
		"RAKOprCurrentAcctOpenSuccess": [{
				"eventName": "onRAKOprCurrentAcctOpenOkClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}

		],
		"RAKOprIslamicAcctOpenInit": [{
				"eventName": "onRAKOprIslamicAcctOpenBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}, {
				"eventName": "onRAKOprIslamicAcctOpenConfirmClick",
				"action": "RAKOprIslamicAcctOpenConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RAKOprIslamicAcctOpenReq.selectedRefNo",
					"rakServiceReq.RAKOprIslamicAcctOpenReq.EmiratesId",
					"rakServiceReq.RAKOprIslamicAcctOpenReq.selectedBranch",
					"rakServiceReq.RAKOprIslamicAcctOpenReq.emirateSeletected",
					"rakServiceReq.RAKOprIslamicAcctOpenReq.debitCardRqd",
					"rakServiceReq.RAKOprIslamicAcctOpenReq.selectedDate",
					"rakServiceReq.RAKOprIslamicAcctOpenReq.operationMode"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"expDate": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedDate",
					"expirydate_year": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedDate_year",
					"expirydate_month": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedDate_month",
					"expirydate_day": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedDate_day",
					"debitCardRqd": "rakServiceReq.RAKOprIslamicAcctOpenReq.debitCardRqd",
					"refAccNo": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedRefNo",
					"acctCrn": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedCrn",
					"emiratesId": "rakServiceReq.RAKOprIslamicAcctOpenReq.EmiratesId.toString()",
					"operMode": "rakServiceReq.RAKOprIslamicAcctOpenReq.operationMode",
					"selectedBranch": "rakServiceReq.RAKOprIslamicAcctOpenReq.selectedBranch",
					"TERMS_FLAG":"rakServiceReq.acceptTermscondition"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprIslamicAcctOpenConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKOprIslamicAcctOpenInit"
				}
			}
		],
		"RAKOprIslamicAcctOpenConfirm": [{
			"eventName": "onRAKOprIslamicAcctOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprIslamicAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKOprIslamicAcctOpenConfirm"
			},
			"errorPage": {
				"pageName": "RAKOprIslamicAcctOpenConfirm"
			}
		}, {
			"eventName": "onRAKOprIslamicAcctOpenReqSubmitClick",
			"action": "RAKOprIslamicAcctOpenSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKOprIslamicAcctOpenReq.txnPwd"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKOprIslamicAcctOpenReq.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKOprIslamicAcctOpenReq.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprIslamicAcctOpenSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprIslamicAcctOpenConfirm"
			}
		}],
		"RAKOprIslamicAcctOpenSuccess": [{
			"eventName": "onRAKOprIslamicAcctOpenOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		}],

		"RakApplyForPrepaidCard": [{
				"eventName": "onSubmitOfDetailsForPrepaid",
				"action": "RakApplyForPrepaidCardFetchDetailsService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.applyForPrepaidCard.accountIndex",
					"rakServiceReq.applyForPrepaidCard.creditIndex"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"ACCOUNT_NUM_INDEX": "rakServiceReq.applyForPrepaidCard.accountIndex",
					"CREDIT_CARD_NO_INDEX": "rakServiceReq.applyForPrepaidCard.creditIndex",
					"acctFlag": "rakServiceReq.applyForPrepaidCard.acctFlag"

				},

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakApplyForPrepaidCardFetchDetails"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onApplyForPrepaidCardPreCloseClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}


		],
		"RakApplyForPrepaidCardFetchDetails": [{
			"eventName": "onSubmitOfDetailsForPrepaidAfterDetailsFetch",
			"action": "RakApplyForPrepaidCardConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.applyForPrepaidCard.salutationCode",
				"rakServiceReq.applyForPrepaidCard.emirateCode",
				"rakServiceReq.applyForPrepaidCard.country",
				"rakServiceReq.applyForPrepaidCard.countryCode",
				"rakServiceReq.applyForPrepaidCard.mobileNumber",
				"rakServiceReq.applyForPrepaidCard.emailAddress",
				"rakServiceReq.applyForPrepaidCard.isDispatchModeSet",
				"rakServiceReq.applyForPrepaidCard.isSelectYourCardSet",
				"rakServiceReq.applyForPrepaidCard.selectedBranchId",
				"rakServiceReq.applyForPrepaidCard.emirateSeletected"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TITLE_CODE": "rakServiceReq.applyForPrepaidCard.salutationCode",
				"FULL_NAME": "rakServiceReq.applyForPrepaidCard.fullName",
				"ADDRESS1": "rakServiceReq.applyForPrepaidCard.address1",
				"ADDRESS2": "rakServiceReq.applyForPrepaidCard.address2",
				"ADDRESS3": "rakServiceReq.applyForPrepaidCard.address3",
				"POBOX": "rakServiceReq.applyForPrepaidCard.pobox",
				"EMIRATE_CODE": "rakServiceReq.applyForPrepaidCard.emirateCode",
				"COUNTRY_SENT": "rakServiceReq.applyForPrepaidCard.countrySent",
				"COUNTRY_CODE": "rakServiceReq.applyForPrepaidCard.countryCodeSent",
				"MOB_NUM": "rakServiceReq.applyForPrepaidCard.mobileNumberString",
				"OFFICE_NUM": "rakServiceReq.applyForPrepaidCard.officeNumberString",
				"RES_NUM": "rakServiceReq.applyForPrepaidCard.residentialNumberString",
				"FAX_NUM": "rakServiceReq.applyForPrepaidCard.faxNumberString",
				"EMAIL": "rakServiceReq.applyForPrepaidCard.emailAddress",
				"DISPATCH_MODE": "rakServiceReq.applyForPrepaidCard.isDispatchModeSet",
				"CARD_TYPE": "rakServiceReq.applyForPrepaidCard.isSelectYourCardSet",
				"NATIONALITY": "rakServiceReq.applyForPrepaidCard.nationality",
				"DOB": "rakServiceReq.applyForPrepaidCard.dob",
				"FIRST_NAME": "rakServiceReq.applyForPrepaidCard.firstName",
				"LAST_NAME": "rakServiceReq.applyForPrepaidCard.lastName",
				"PAYMENT_MODE": "rakServiceReq.applyForPrepaidCard.paymentMode",
				"TRAN_REF": "rakServiceReq.applyForPrepaidCard.transactionRef",
                "BRANCH_ID": "rakServiceReq.applyForPrepaidCard.selectedBranchId",
                "TERMS_FLAG": "rakServiceReq.acceptTermscondition",
                "EMIRATES_ID": "rakServiceReq.applyForPrepaidCard.emirateSeletected"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCardConfirmation"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCardFetchDetails"
			}
		}, {
			"eventName": "onApplyForPrepaidCardFetchBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCardFetchDetails"
			}
		}],
		"RakApplyForPrepaidCardConfirmation": [{
			"eventName": "onApplyForPrepaidCardConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCardFetchDetails"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCard"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakEarlDebitCardRenewalConfirm"
			},
			"errorPage": {
				"pageName": "RakEarlDebitCardRenewalConfirm"
			}
		}, {
			"eventName": "onApplyForPrepaidCardConfirmSubmitClick",
			"action": "RakApplyForPrepaidCardSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.applyForPrepaidCard.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.applyForPrepaidCard.transactionPassword"],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.applyForPrepaidCard.transactionPassword",

				"TITLE_CODE": "rakServiceReq.applyForPrepaidCard.salutationCode",
				"FULL_NAME": "rakServiceReq.applyForPrepaidCard.fullName",
				"ADDRESS1": "rakServiceReq.applyForPrepaidCard.address1",
				"ADDRESS2": "rakServiceReq.applyForPrepaidCard.address2",
				"ADDRESS3": "rakServiceReq.applyForPrepaidCard.address3",
				"POBOX": "rakServiceReq.applyForPrepaidCard.pobox",
				"EMIRATE_CODE": "rakServiceReq.applyForPrepaidCard.emirateCode",
				"COUNTRY_SENT": "rakServiceReq.applyForPrepaidCard.countrySent",
				"COUNTRY_CODE": "rakServiceReq.applyForPrepaidCard.countryCodeSent",
				"MOB_NUM": "rakServiceReq.applyForPrepaidCard.mobileNumberString",
				"OFFICE_NUM": "rakServiceReq.applyForPrepaidCard.officeNumberString",
				"RES_NUM": "rakServiceReq.applyForPrepaidCard.residentialNumberString",
				"FAX_NUM": "rakServiceReq.applyForPrepaidCard.faxNumberString",
				"EMAIL": "rakServiceReq.applyForPrepaidCard.emailAddress",
				"DISPATCH_MODE": "rakServiceReq.applyForPrepaidCard.isDispatchModeSet",
				"CARD_TYPE": "rakServiceReq.applyForPrepaidCard.isSelectYourCardSet",
				"NATIONALITY": "rakServiceReq.applyForPrepaidCard.nationality",
				"DOB": "rakServiceReq.applyForPrepaidCard.dob",
				"FIRST_NAME": "rakServiceReq.applyForPrepaidCard.firstName",
				"LAST_NAME": "rakServiceReq.applyForPrepaidCard.lastName",
				"PAYMENT_MODE": "rakServiceReq.applyForPrepaidCard.paymentMode",
				"TRAN_REF": "rakServiceReq.applyForPrepaidCard.transactionRef",
                                "BRANCH_ID": "rakServiceReq.applyForPrepaidCard.selectedBranchId"


			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCardSuccess"

			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCardConfirmation"
			}
		}],
		"RakApplyForPrepaidCardSuccess": [{
			"eventName": "onApplyForPrepaidCardDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		}],
		"RAKInvRedeemGoldInit": [{
			"eventName": "onRAKInvRedeemGoldBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvRedeemGoldConfirmClick",
			"action": "RAKInvRedeemGoldConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldAcct",
			"rakServiceReq.RAKInvRedeemGoldAcctModel.emirateSeletected",
				"rakServiceReq.RAKInvRedeemGoldAcctModel.selectedBranchId",
				
				"rakServiceReq.RAKInvRedeemGoldAcctModel.selectedChargeAcct"
				

			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"GOLDACCNO": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldAcct",
				"BRANCHNO": "rakServiceReq.RAKInvRedeemGoldAcctArrays.invGoldAcctBranchList[rakServiceReq.RAKInvRedeemGoldAcctModel.selectedBranchId].branchId",
				"QTY1": "rakServiceReq.RAKInvRedeemGoldAcctModel.quantity1",
				"WEIGHT1": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldUnit1",
				"QTY5": "rakServiceReq.RAKInvRedeemGoldAcctModel.quantity2",
				"WEIGHT5": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldUnit2",
				"QTY10": "rakServiceReq.RAKInvRedeemGoldAcctModel.quantity3",
				"WEIGHT10": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldUnit3",
				"QTY20": "rakServiceReq.RAKInvRedeemGoldAcctModel.quantity4",
				"WEIGHT20": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldUnit4",
				"QTY50": "rakServiceReq.RAKInvRedeemGoldAcctModel.quantity5",
				"WEIGHT50": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldUnit5",
				"QTY100": "rakServiceReq.RAKInvRedeemGoldAcctModel.quantity6",
				"WEIGHT100": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldUnit6",
				"CHARGEACCNO": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedChargeAcct",
				"REMARKSTXT": "rakServiceReq.RAKInvRedeemGoldAcctModel.remarks",
				"EMIRID": "rakServiceReq.RAKInvRedeemGoldAcctModel.emirateSeletectedCode"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvRedeemGoldConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvRedeemGoldInit"
			}
		}],
		"RAKInvRedeemGoldConfirm": [{
			"eventName": "onRAKInvRedeemGoldBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvRedeemGoldInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKInvRedeemGoldConfirm"
			},
			"errorPage": {
				"pageName": "RAKInvRedeemGoldConfirm"
			}
		}, {
			"eventName": "onRAKInvRedeemGoldConfirmSubmitToRMClick",
			"action": "RAKInvRedeemGoldConfirmSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKInvRedeemGoldAcctModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKInvRedeemGoldAcctModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKInvRedeemGoldAcctModel.txnPwd",
				"GOLDACCNO": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGoldAcct",
				"BRANCHNO": "rakServiceReq.RAKInvRedeemGoldAcctArrays.invGoldAcctBranchList[rakServiceReq.RAKInvRedeemGoldAcctModel.selectedBranchId].branchId",
				"KILONO": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedKilo",
				"GRAMNO": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedGram",
				"CHARGEACCNO": "rakServiceReq.RAKInvRedeemGoldAcctModel.selectedChargeAcct",
				"REMARKSTXT": "rakServiceReq.RAKInvRedeemGoldAcctModel.remarks",
				"EMIRID": "rakServiceReq.RAKInvRedeemGoldAcctModel.emirateSeletectedCode"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvRedeemGoldSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvRedeemGoldConfirm"
			}
		}],
		"RAKInvRedeemGoldSuccess": [{
			"eventName": "onRAKInvRedeemGoldSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKLoanMortgageAmalHomeFinInit": [{
			"eventName": "onRAKLoanMortgageAmalHomeFinInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKLoanMortgageAmalHomeFinConfirmClick",
			"action": "RAKLoanMortgageAmalHomeFinConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanMortgageAmalHomeFinModel.isMortgageLoanSelected",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.ApplicantName",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedMaritalStat",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.isUAEResident",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.LengthOfStayinUAE",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedEmirate",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedEmpType",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.GrossFixedSalMonth",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.NameOfProp",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedLocOfProp",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedDev",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.TotLnFinRqd",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.PerOfLnFinYr",
				"rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedOthBankLnFin"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"APPLY_FOR": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.isMortgageLoanSelected",
				"NAME": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.ApplicantName",
				"DOB": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.DOB",
				"MARRITAL_STAT": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedMaritalStat",
				"NATIONALITY": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.Nationality",
				"IS_UAE_RES": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.isUAEResident",
				"LENGTH_OF_STAY_IN_UAE": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.LengthOfStayinUAE.toString()",
				"ADDR_POBOX": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.POBox.toString()",
				"EMIRATE": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedEmirate",
				"TELENOOFF": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.TeleNoOff",
				"TELENORES": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.TeleNoRes",
				"FAXNO": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.FaxNo",
				"MOBNO": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.MobileNo",
				"EMAILNO": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.EmailNo",
				"EMP_TYPE": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedEmpType",
				"GROSSFIXSAL_PER_MONTH": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.GrossFixedSalMonth.toString()",
				"AGE_OF_BUSINESS": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.AgeOfBusiMonth.toString()",
				"PROF_SHARE_LAST_YR": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.ProfShareLastYr.toString()",
				"NAME_OF_PROP": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.NameOfProp",
				"LOCATION_OF_PROP": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedLocOfProp",
				"DEVELOPER": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedDev",
				"TOTAL_LOAN_FIN_RQD": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.TotLnFinRqd.toString()",
				"PERIOD_OF_LOAN_FIN": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.PerOfLnFinYr.toString()",
				"IS_OTH_BANK_LOAN_FIN": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.selectedOthBankLnFin"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanMortgageAmalHomeFinConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKLoanMortgageAmalHomeFinConfirm": [{
			"eventName": "onRAKLoanMortgageAmalHomeFinConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanMortgageAmalHomeFinInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKLoanMortgageAmalHomeFinConfirm"
			},
			"errorPage": {
				"pageName": "RAKLoanMortgageAmalHomeFinConfirm"
			}
		}, {
			"eventName": "onRAKLoanMortgageAmalHomeFinSubmitToRMClick",
			"action": "RAKLoanMortgageAmalHomeFinSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKLoanMortgageAmalHomeFinModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKLoanMortgageAmalHomeFinModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKLoanMortgageAmalHomeFinModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanMortgageAmalHomeFinSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKLoanMortgageAmalHomeFinConfirm"
			}
		}],
		"RAKLoanMortgageAmalHomeFinSuccess": [{
			"eventName": "onRAKLoanMortgageAmalHomeFinSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakOprAccDupStmtInit": [{
			"eventName": "onRakOprAccDupStmtInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakOprAccDupStmtConfirmClick",
			"action": "RakOprAccDupStmtConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakOprAccDupStmtModel.selectedOprAcct",
				"rakServiceReq.RakOprAccDupStmtModel.selectedBranchId",
				"rakServiceReq.RakOprAccDupStmtModel.isBranchOrAddress",
				"rakServiceReq.RakOprAccDupStmtModel.fromDatePeriod",
				"rakServiceReq.RakOprAccDupStmtModel.toDatePeriod",
				"rakServiceReq.RakOprAccDupStmtModel.emirateSeletected"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OPR_ACCT": "rakServiceReq.RakOprAccDupStmtModel.selectedOprAcct",
				"PERIOD_FROM_year": "rakServiceReq.RakOprAccDupStmtModel.fromDate_year.toString()",
				"PERIOD_FROM_month": "rakServiceReq.RakOprAccDupStmtModel.fromDate_month.toString()",
				"PERIOD_FROM_day": "rakServiceReq.RakOprAccDupStmtModel.fromDate_day.toString()",
				"PERIOD_TO_year": "rakServiceReq.RakOprAccDupStmtModel.toDate_year.toString()",
				"PERIOD_TO_month": "rakServiceReq.RakOprAccDupStmtModel.toDate_month.toString()",
				"PERIOD_TO_day": "rakServiceReq.RakOprAccDupStmtModel.toDate_day.toString()",
				"BRANCH_ID": "rakServiceReq.RakOprAccDupStmtModel.selectedBranchIdSend",
				"DISPATCH_MODE": "rakServiceReq.RakOprAccDupStmtModel.branchOrAddressToSend",
				"REMARKS": "rakServiceReq.RakOprAccDupStmtModel.remarks",
				"EMIRATE_ID": "rakServiceReq.RakOprAccDupStmtModel.emirateSeletected"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprAccDupStmtConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprAccDupStmtInit"
			}
		}],
		"RakOprAccDupStmtConfirm": [{
			"eventName": "onRakOprAccDupStmtConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprAccDupStmtInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakOprAccDupStmtConfirm"
			},
			"errorPage": {
				"pageName": "RakOprAccDupStmtConfirm"
			}
		}, {
			"eventName": "onRakOprAccDupStmtFinalSubmitClick",
			"action": "RakOprAccDupStmtSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakOprAccDupStmtModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakOprAccDupStmtModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakOprAccDupStmtModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprAccDupStmtSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprAccDupStmtConfirm"
			}
		}],
		"RakOprAccDupStmtSuccess": [{
			"eventName": "onRakOprAccDupStmtSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakDCApplyInit": [{
			"eventName": "onRakDCApplyInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyNowScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		}, {
			"eventName": "onRakDCApplyNextClick",
			"action": "RakDCApplyConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDCApplyModel.selectedOprAcct",
				"rakServiceReq.RakDCApplyModel.selectedBranchId",
				"rakServiceReq.RakDCApplyModel.mailingAddress",
				"rakServiceReq.RakDCApplyModel.emirateSeletected"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OPR_ACCT": "rakServiceReq.RakDCApplyModel.selectedOprAcct",
				"DISPATCH_MODE": "rakServiceReq.RakDCApplyModel.branchOrAddressToSend",
				"BRANCH_ID": "rakServiceReq.RakDCApplyModel.selectedBranchIdSend",
				"EMIRATE_ID": "rakServiceReq.RakDCApplyModel.emirateSeletected",
				"ADDRESS": "rakServiceReq.RakDCApplyModel.mailingAddress"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDCApplyConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakDCApplyConfirm": [{
			"eventName": "onRakDCApplyConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDCApplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakDCApplyConfirm"
				},
				"errorPage": {
					"pageName": "RakDCApplyConfirm"
				}
			}, {
			"eventName": "onRakDCApplyFinalSubmitClick",
			"action": "RakDCApplySuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDCApplyModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakDCApplyModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakDCApplyModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDCApplySuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDCApplyConfirm"
			}
		}],
		"RakDCApplySuccess": [{
			"eventName": "onRakDCApplySuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDiscAndapplyBackClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}

		}],
		"RakLoanFinPRLInit": [{
			"eventName": "onRakLoanFinPRLInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakLoanFinPRLContinueClick",
			"action": "RakLoanFinPRLConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakLoanFinPRLModel.selectedLonAcct",
				"rakServiceReq.RakLoanFinPRLModel.selectedDrAcct",
				"rakServiceReq.RakLoanFinPRLModel.selectedBranch",
				"rakServiceReq.RakLoanFinPRLModel.MobileNo"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"LON_ACCT": "rakServiceReq.RakLoanFinPRLModel.selectedLonAcct",
				"DUP_REQ": "rakServiceReq.RakLoanFinPRLModel.duplicateRequestToSend",
				"DEBIT_ACCT": "rakServiceReq.RakLoanFinPRLModel.selectedDrAcct",
				"BRANCH_ID": "rakServiceReq.RakLoanFinPRLModel.selectedBranch",
				"MOBILENO": "rakServiceReq.RakLoanFinPRLModel.MobileNo.toString()",
				"EMIRATE_ID": "rakServiceReq.RakLoanFinPRLModel.emirateSeletected",
				"NOTES": "rakServiceReq.RakLoanFinPRLModel.notes"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanFinPRLConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakLoanFinPRLConfirm": [{
			"eventName": "onRakLoanFinPRLConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanFinPRLInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakLoanFinPRLConfirm"
			},
			"errorPage": {
				"pageName": "RakLoanFinPRLConfirm"
			}
		}, {
			"eventName": "onRakLoanFinPRLFinalSubmitClick",
			"action": "RakLoanFinPRLSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakLoanFinPRLModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakLoanFinPRLModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakLoanFinPRLModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanFinPRLSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLoanFinPRLConfirm"
			}
		}],
		"RakLoanFinPRLSuccess": [{
			"eventName": "onRakLoanFinPRLSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakInstallmentPostponementPre": [{
			"eventName": "onSubmitOfDetailsToFetch",
			"action": "RakInstallmentPostponementFetchService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.installmentPostponement.accountNumber"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"PER_LOAN_ACC_ID": "rakServiceReq.installmentPostponement.accountNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementFetch"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onInstallmentPostponementPreCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInstallmentPostponementFetch": [{
			"eventName": "onSubmitOfDetailsOfPostponeAfterDetailsFetch",
			"action": "RakInstallmentPostponementConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
			    "rakServiceReq.installmentPostponement.accountNumber",
			    "rakServiceReq.installmentPostponement.postponeCode",
				"rakServiceReq.installmentPostponement.mobileNumber",
				"rakServiceReq.installmentPostponement.mobileNumberString"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"NUMBER_OF_POSTPONEMENT_REQUIRED": "rakServiceReq.installmentPostponement.postponeCode",
				"CONTACT_MOBILE_NUMBER":"rakServiceReq.installmentPostponement.mobileNumber.toString()",
				"NOTES":"rakServiceReq.installmentPostponement.notes"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onSubmitOfDetailsToFetch",
			"action": "RakInstallmentPostponementFetchService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.installmentPostponement.accountNumber"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"PER_LOAN_ACC_ID": "rakServiceReq.installmentPostponement.accountNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementFetch"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementFetch"
			}
		}, {
			"eventName": "onInstallmentPostponementFetchBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInstallmentPostponementConfirm": [{
			"eventName": "onInstallmentPostponementConfirmSubmitClick",
			"action": "RakInstallmentPostponementSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.installmentPostponement.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.installmentPostponement.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"PER_LOAN_ACC_ID": "rakServiceReq.installmentPostponement.accountNumber",
				"PRODUCT": "rakServiceReq.installmentPostponement.loanProductName",
				"CURRENCY": "rakServiceReq.installmentPostponement.currency",
				"LOAN_AMOUNT": "rakServiceReq.installmentPostponement.loanAmount",
				"LOAN_OUTSTANDING": "rakServiceReq.installmentPostponement.loanOutstanding",
				"NEXT_INSTALLMENT_AMOUNT": "rakServiceReq.installmentPostponement.nextInstallmentAmount",
				"NEXT_INSTALLMENT_DATE": "rakServiceReq.installmentPostponement.nextInstallmentDate",
				"LOAN_OVERDUE_AMOUNT": "rakServiceReq.installmentPostponement.loanOverdueAmount",
				"NUMBER_OF_POSTPONEMENT_REQUIRED": "rakServiceReq.installmentPostponement.postponeCode",
				"MOBILE_NUMBER": "rakServiceReq.installmentPostponement.mobileNumberString",
				"NOTES": "rakServiceReq.installmentPostponement.notes",
				"Mode": "rakServiceReq.installmentPostponement.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementConfirm"
			}
		},
		{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakInstallmentPostponementConfirm"
				},
				"errorPage": {
					"pageName": "RakInstallmentPostponementConfirm"
				}
			},
			 {
			"eventName": "onInstallmentPostponementConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInstallmentPostponementFetch"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInstallmentPostponementSuccess": [{
			"eventName": "onInstallmentPostponementDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKAmmendIslamicDeposit": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendIslamicDeposit"
			}
		}, {
			"eventName": "onRAKAmmendFetchingDepAcc",
			"action": "RAKAmmendFetchSelectedIslamicAccService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKAmmendIslamicDeposit.selectedDepAccNo"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"ACCOUNT_IDX": "rakServiceReq.RAKAmmendIslamicDeposit.selectedDepAccNo",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendIslamicDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onAmmendContinueClick",
			"action": "RAKAmmendDepositIslamicContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": 
			["rakServiceReq.RAKAmmendIslamicDeposit.instructions",
			"rakServiceReq.RAKAmmendIslamicDeposit.selectedDebitOprAccNo"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKAmmendIslamicDeposit.selectedDepAccNo",
				"INSTRUCTION_SELECT": "rakServiceReq.RAKAmmendIslamicDeposit.instructions",
				"CREDIT_PRNCPL_INTRST_ACCT_NO": "rakServiceReq.RAKAmmendIslamicDeposit.selectedDebitOprAccNo"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDepositIslamicContinue"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendIslamicDeposit"
			}
		}],
		"RAKAmmendDeposit": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDeposit"
			}
		}, {
			"eventName": "onRAKAmendFetchingDepAcc",
			"action": "RAKAmmendFetchSelectedAccService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKAmmendDeposit.selectedDepAccNo"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"ACCOUNT_IDX": "rakServiceReq.RAKAmmendDeposit.selectedDepAccNo",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onAmmendConventionalContinueClick",
			"action": "RAKAmmendDepositContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKAmmendDeposit.selectedDepAccNo",
				"rakServiceReq.RAKAmmendDeposit.selectedDebitOprAccNo",
				"rakServiceReq.RAKAmmendDeposit.instructions",
				"rakServiceReq.RAKAmmendDeposit.increaseamtdepval",
				"rakServiceReq.RAKAmmendDeposit.selecteddebitopraccountListincrease",
				"rakServiceReq.RAKAmmendDeposit.decreaseamtdepval",
				"rakServiceReq.RAKAmmendDeposit.selecteddebitopraccountListdecrease",
				"rakServiceReq.RAKAmmendDeposit.regularperiodvalue",
				"rakServiceReq.RAKAmmendDeposit.selectedperiod",
				"rakServiceReq.RAKAmmendDeposit.toDate"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKAmmendDeposit.selectedDepAccNo",
				"INSTRUCTION_SELECT": "rakServiceReq.RAKAmmendDeposit.instructions",
				"CREDIT_PRNCPL_INTRST_ACCT_NO": "rakServiceReq.RAKAmmendDeposit.selectedDebitOprAccNo",
				"INCRSE_AMT_DEPOSIT_VAL": "rakServiceReq.RAKAmmendDeposit.increaseamtdepval.toString()",
				"INCRSE_AMT_DEPOSIT_DEBIT_ACCT_NO": "rakServiceReq.RAKAmmendDeposit.selecteddebitopraccountListincrease",
				"DCRSE_AMT_DEPOSIT_VAL": "rakServiceReq.RAKAmmendDeposit.decreaseamtdepval.toString()",
				"DCRSE_AMT_DEPOSIT_CREDIT_ACCT_NO": "rakServiceReq.RAKAmmendDeposit.selecteddebitopraccountListdecrease",
				"CHNGE_TENOR_DEPOSIT": "rakServiceReq.RAKAmmendDeposit.regularperiodvalue",
				"REGULAR_PERIOD_VALUE": "rakServiceReq.RAKAmmendDeposit.selectedperiod",
				"toDate_day": "rakServiceReq.RAKAmmendDeposit.toDate_day",
				"toDate_month": "rakServiceReq.RAKAmmendDeposit.toDate_month",
				"toDate_year": "rakServiceReq.RAKAmmendDeposit.toDate_year",
				"changetenuredateflag": "rakServiceReq.RAKAmmendDeposit.changetenuredateflag.toString();"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDepositContinue"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDeposit"
			}
		}],
		"RAKAmmendDepositContinue": [{
			"eventName": "onAmmendConventionalBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RAKAmmendDepositContinue"
				},
				"errorPage": {
					"pageName": "RAKAmmendDepositContinue"
				}
			}, {
			"eventName": "onRAKAmmendDepositContinueClick",
			"action": "RAKAmmendDepositSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKAmmendDeposit.selectedDepAccNo",
				"INSTRUCTION_SELECT": "rakServiceReq.RAKAmmendDeposit.instructions",
				"CREDIT_PRNCPL_INTRST_ACCT_NO": "rakServiceReq.RAKAmmendDeposit.selectedDebitOprAccNo",
				"INCRSE_AMT_DEPOSIT_VAL": "rakServiceReq.RAKAmmendDeposit.increaseamtdepval.toString()",
				"INCRSE_AMT_DEPOSIT_DEBIT_ACCT_NO": "rakServiceReq.RAKAmmendDeposit.selecteddebitopraccountListincrease",
				"DCRSE_AMT_DEPOSIT_VAL": "rakServiceReq.RAKAmmendDeposit.decreaseamtdepval.toString()",
				"DCRSE_AMT_DEPOSIT_CREDIT_ACCT_NO": "rakServiceReq.RAKAmmendDeposit.selecteddebitopraccountListdecrease",
				"CHNGE_TENOR_DEPOSIT": "rakServiceReq.RAKAmmendDeposit.regularperiodvalue",
				"REGULAR_PERIOD_VALUE": "rakServiceReq.RAKAmmendDeposit.selectedperiod",
				"toDate_day": "rakServiceReq.RAKAmmendDeposit.toDate_day",
				"toDate_month": "rakServiceReq.RAKAmmendDeposit.toDate_month",
				"toDate_year": "rakServiceReq.RAKAmmendDeposit.toDate_year",
				"changetenuredateflag": "rakServiceReq.RAKAmmendDeposit.changetenuredateflag.toString();",
				"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDepositSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDepositContinue"
			}
		}],
		"RAKAmmendDepositSuccess": [{
			"eventName": "RAKAmmendDepositDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RAKAmmendDepositIslamicContinue": [{
			"eventName": "onAmmendConventionalBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendIslamicDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RAKAmmendDepositIslamicContinue"
				},
				"errorPage": {
					"pageName": "RAKAmmendDepositIslamicContinue"
				}
			}, {
			"eventName": "onRAKAmmendDepositIslamicContinueClick",
			"action": "RAKAmmendDepositIslamicSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKAmmendIslamicDeposit.selectedDepAccNo",
				"INSTRUCTION_SELECT": "rakServiceReq.RAKAmmendIslamicDeposit.instructions",
				"CREDIT_PRNCPL_INTRST_ACCT_NO": "rakServiceReq.RAKAmmendIslamicDeposit.selectedDebitOprAccNo",
				"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDepositIslslamicSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKAmmendDepositIslamicContinue"
			}
		}],
		"RAKAmmendDepositIslslamicSuccess": [{
			"eventName": "RAKAmmendDepositDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakOprEvantageMailChqSRSuccess": [{
			"eventName": "onRAKOprEvantageMailChqSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}

		}],

		"RakOprEvantageMailChqSRConfirm": [{
				"eventName": "onRAKOprEvantageMailChqReqSubmitClick",
				"action": "RAKOprEvantageMailChqReqSRSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": ["rakServiceReq.RakOprEvantageMailChqReq.counter",
					"rakServiceReq.RakOprEvantageMailChqReq.txnPwd"
				],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.RakOprEvantageMailChqReq.txnPwd"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.RakOprEvantageMailChqReq.txnPwd",


					"NAMEARR": "rakServiceReq.RakOprEvantageMailChqReq.nameFinalArray",
					"AMTARR": "rakServiceReq.RakOprEvantageMailChqReq.amtFinalArray",
					"AMT_TXT_ARR": "rakServiceReq.RakOprEvantageMailChqReq.amtWrdsFinalArray",
					"QUANTITYARR": "rakServiceReq.RakOprEvantageMailChqReq.quantityFinalArray",
					"REASONARR": "rakServiceReq.RakOprEvantageMailChqReq.reasonFinalArray",
					"OTHERSARR": "rakServiceReq.RakOprEvantageMailChqReq.othersFinalArray"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprEvantageMailChqSRSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprEvantageMailChqSRConfirm"
				}
			}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

				},
				"successPage": {
					"pageName": "RakOprEvantageMailChqSRConfirm"
				},
				"errorPage": {
					"pageName": "RakOprEvantageMailChqSRConfirm"
				}
			}, 
			{
				"eventName": "onRakOprEvantageMailChqConfirmEditClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprEvantageMailChqSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprEvantageMailChqSRConfirm"
				}
			},
			{
				"eventName": "onRAKOprEvantageMailChqConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",

				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakOprEvantageMailChqSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],
		"RakOprEvantageMailChqSRInit": [
		{
			"eventName": "onRAKOprEvantageMailChqAddClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakOprEvantageMailChqReq.benName",
				"rakServiceReq.RakOprEvantageMailChqReq.amtNum",
				"rakServiceReq.RakOprEvantageMailChqReq.amtWords",
				"rakServiceReq.RakOprEvantageMailChqReq.quantity",
				"rakServiceReq.RakOprEvantageMailChqReq.reason",
				"rakServiceReq.RakOprEvantageMailChqReq.others"
				
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprEvantageMailChqSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprEvantageMailChqSRInit"
			}
		},
		{
			"eventName": "onRAKOprEvantageMailChqReqConfirmClick",
			"action": "RAKOprEvantageMailChqReqSRConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakOprEvantageMailChqReq.benName",
				"rakServiceReq.RakOprEvantageMailChqReq.amtNum",
				"rakServiceReq.RakOprEvantageMailChqReq.amtWords",
				"rakServiceReq.RakOprEvantageMailChqReq.quantity",
				"rakServiceReq.RakOprEvantageMailChqReq.reason",
				"rakServiceReq.RakOprEvantageMailChqReq.others"
				
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"AMTARR": "rakServiceReq.RakOprEvantageMailChqReq.amtConfirmArray"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprEvantageMailChqSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKOprEvantageMailChqReqAddListClick",
			"action": "navaigation",
			"actionType": "navigation",
			"validation": "false",
			"validationParams": ["rakServiceReq.RakOprEvantageMailChqReq.benName",
				"rakServiceReq.RakOprEvantageMailChqReq.amtNum",
				"rakServiceReq.RakOprEvantageMailChqReq.amtWords",
				"rakServiceReq.RakOprEvantageMailChqReq.quantity",
				"rakServiceReq.RakOprEvantageMailChqReq.reason",
				"rakServiceReq.RakOprEvantageMailChqReq.others"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakOprEvantageMailChqSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKOprEvantageMailChqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RAKRenewalTermDeposit": [
			{
                    "eventName": "onAccountSelectionBalCall",
                   "action": "RakSendMoneyLoadBalanceService",
                    "actionType": "serviceNoNavigation",
                    "validation": "true",
                    "validationParams": [
                            "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"
                     ],
                    "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",
                        "ACCOUNT_IDX": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"
                       },
                    "successPage": {
                        "pageName": "RAKRenewalTermDepositIslamic"
                    },
                    "errorPage": {
                        "pageName": "RAKRenewalTermDepositIslamic"
                    }
                },
		{
			"eventName": "onRAKRenewalFetchingDepAcc",
			"action": "RAKRenewalTermDepositFetchSelectedAccService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"ACCOUNT_IDX": "rakServiceReq.RAKRenewalTermDeposit.selectedDepAccNo",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			}
		}, {
			"eventName": "onDebitAccountChangeRenewalDep",
			"action": "RAKOprSelectedAccService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"ACCOUNT_IDX": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKRenewalFetchingDepCurrency",
			"action": "RAKOprSelectedCurrService",
			"actionType": "service",
			"validation": "true",
		
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SELECTED_OPR_CURRENCY_CODE": "rakServiceReq.RAKRenewalTermDeposit.selectedcurrency"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			}
		}, {
			"eventName": "onRenewContinueClick",
			"action": "RAKRenewalTermDepositRequestService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [

				"rakServiceReq.RAKRenewalTermDeposit.selectedcurrency",
				"rakServiceReq.RAKRenewalTermDeposit.interesttobecapitalized",
				"rakServiceReq.RAKRenewalTermDeposit.renewalperiod",
				"rakServiceReq.RAKRenewalTermDeposit.selectedperiod",
				"rakServiceReq.RAKRenewalTermDeposit.fromDate",
				"rakServiceReq.RAKRenewalTermDeposit.toDate",
				"rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo",
				"rakServiceReq.RAKRenewalTermDeposit.onamturityradiobtn",
				"rakServiceReq.RAKRenewalTermDeposit.selectedMaturityOprAccNo",
				"rakServiceReq.RAKRenewalTermDeposit.interesthandling",
				"rakServiceReq.RAKRenewalTermDeposit.selectedIAOprAccNo",
				"rakServiceReq.RAKRenewalTermDeposit.renewalamount"
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"MIN_RENEWAL_AMOUNT": "rakServiceReq.RAKRenewalTermDeposit.minrenewalamount",
				"RENEWAL_AMOUNT": "rakServiceReq.RAKRenewalTermDeposit.renewalamount.toString()",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDepAccNo",
				"RENEWAL_CURRENCY": "rakServiceReq.RAKRenewalTermDeposit.selectedcurrency",
				"INTEREST_TO_BE_CAPITALIZED": "rakServiceReq.RAKRenewalTermDeposit.interesttobecapitalized",
				"RENEWAL_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.renewalperiod",
				"FOR_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.selectedperiod",
				"fromDate_day": "rakServiceReq.RAKRenewalTermDeposit.fromDate_day",
				"fromDate_month": "rakServiceReq.RAKRenewalTermDeposit.fromDate_month",
				"fromDate_year": "rakServiceReq.RAKRenewalTermDeposit.fromDate_year",
				"toDate_day": "rakServiceReq.RAKRenewalTermDeposit.toDate_day",
				"toDate_month": "rakServiceReq.RAKRenewalTermDeposit.toDate_month",
				"toDate_year": "rakServiceReq.RAKRenewalTermDeposit.toDate_year",
				"DEBIT_ACCOUNT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo",
				"ON_MATURITY": "rakServiceReq.RAKRenewalTermDeposit.onamturityradiobtn",
				"ON_MATURITY_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedMaturityOprAccNo",
				"INTEREST_HANDLING": "rakServiceReq.RAKRenewalTermDeposit.interesthandling",
				"dateflag": "rakServiceReq.RAKRenewalTermDeposit.dateflag.toString()",
				"INTEREST_HANDLING_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedIAOprAccNo"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositContinue"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			}
		}],
		"RAKRenewalTermDepositSuccess": [{
			"eventName": "RAKRenewalTermDepositDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKRenewalTermDepositContinue": [{
			"eventName": "onRAKRenewalTermDepositBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDeposit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RAKRenewalTermDepositContinue"
				},
				"errorPage": {
					"pageName": "RAKRenewalTermDepositContinue"
				}
			}, {
			"eventName": "onRAKRenewalTermDepositContinueClick",
			"action": "RAKRenewalTermDepositContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDepAccNo",
				"RENEWAL_CURRENCY": "rakServiceReq.RAKRenewalTermDeposit.selectedcurrency",
				"RENEWAL_AMOUNT": "rakServiceReq.RAKRenewalTermDeposit.renewalamount.toString()",
				"INTEREST_TO_BE_CAPITALIZED": "rakServiceReq.RAKRenewalTermDeposit.interesttobecapitalized",
				"RENEWAL_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.renewalperiod",
				"FOR_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.selectedperiod",
				"fromDate_day": "rakServiceReq.RAKRenewalTermDeposit.fromDate_day",
				"fromDate_month": "rakServiceReq.RAKRenewalTermDeposit.fromDate_month",
				"fromDate_year": "rakServiceReq.RAKRenewalTermDeposit.fromDate_year",
				"toDate_day": "rakServiceReq.RAKRenewalTermDeposit.toDate_day",
				"toDate_month": "rakServiceReq.RAKRenewalTermDeposit.toDate_month",
				"toDate_year": "rakServiceReq.RAKRenewalTermDeposit.toDate_year",
				"DEBIT_ACCOUNT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo",
				"ON_MATURITY": "rakServiceReq.RAKRenewalTermDeposit.onamturityradiobtn",
				"ON_MATURITY_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedMaturityOprAccNo",
				"INTEREST_HANDLING": "rakServiceReq.RAKRenewalTermDeposit.interesthandling",
				"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword",
				"dateflag": "rakServiceReq.RAKRenewalTermDeposit.dateflag.toString()",
				"INTEREST_HANDLING_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedIAOprAccNo"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositContinue"
			}
		}],

		"RAKRenewalTermDepositIslamic": [
		{
                    "eventName": "onAccountSelectionBalCall",
                   "action": "RakSendMoneyLoadBalanceService",
                    "actionType": "serviceNoNavigation",
                    "validation": "true",
                    "validationParams": [
                            "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"
                     ],
                    "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",
                        "ACCOUNT_IDX": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"
                       },
                    "successPage": {
                        "pageName": "RAKRenewalTermDepositIslamic"
                    },
                    "errorPage": {
                        "pageName": "RAKRenewalTermDepositIslamic"
                    }
                },
		{
			"eventName": "onRAKRenewalFetchingDepAcc",
			"action": "RAKRenewalTermDepositIslamicFetchSelectedAccService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"ACCOUNT_IDX": "rakServiceReq.RAKRenewalTermDeposit.selectedDepAccNo",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamic"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDebitAccountChangeRenewalDep",
			"action": "RAKOprSelectedAccService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"ACCOUNT_IDX": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamic"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKRenewalFetchingDepCurrency",
			"action": "RAKOprSelectedCurrService",
			"actionType": "service",
			"validation": "true",
			
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SELECTED_OPR_CURRENCY_CODE": "rakServiceReq.RAKRenewalTermDeposit.selectedcurrency"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamic"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamic"
			}
		}, {
			"eventName": "onRenewContinueClick",
			"action": "RAKRenewalTermDepositIslamicRequestService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RAKRenewalTermDeposit.renewalamount",
				"rakServiceReq.RAKRenewalTermDeposit.selectedcurrency",
				"rakServiceReq.RAKRenewalTermDeposit.renewalperiod",
				"rakServiceReq.RAKRenewalTermDeposit.selectedperiod",
				"rakServiceReq.RAKRenewalTermDeposit.fromDate",
				"rakServiceReq.RAKRenewalTermDeposit.toDate",
				"rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo",
				"rakServiceReq.RAKRenewalTermDeposit.onamturityradiobtn",
				"rakServiceReq.RAKRenewalTermDeposit.selectedMaturityOprAccNo",
				"rakServiceReq.RAKRenewalTermDeposit.interesthandling",
				"rakServiceReq.RAKRenewalTermDeposit.selectedIAOprAccNo"
			],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDepAccNo",
				"RENEWAL_CURRENCY": "rakServiceReq.RAKRenewalTermDeposit.selectedcurrency",
				"RENEWAL_AMOUNT": "rakServiceReq.RAKRenewalTermDeposit.renewalamount.toString()",
				"RENEWAL_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.renewalperiod",
				"FOR_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.selectedperiod",
				"fromDate_day": "rakServiceReq.RAKRenewalTermDeposit.fromDate_day",
				"fromDate_month": "rakServiceReq.RAKRenewalTermDeposit.fromDate_month",
				"fromDate_year": "rakServiceReq.RAKRenewalTermDeposit.fromDate_year",
				"toDate_day": "rakServiceReq.RAKRenewalTermDeposit.toDate_day",
				"toDate_month": "rakServiceReq.RAKRenewalTermDeposit.toDate_month",
				"toDate_year": "rakServiceReq.RAKRenewalTermDeposit.toDate_year",
				"DEBIT_ACCOUNT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo",
				"ON_MATURITY": "rakServiceReq.RAKRenewalTermDeposit.onamturityradiobtn",
				"ON_MATURITY_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedMaturityOprAccNo",
				"INTEREST_HANDLING": "rakServiceReq.RAKRenewalTermDeposit.interesthandling",
				"dateflag": "rakServiceReq.RAKRenewalTermDeposit.dateflag.toString()",
				"INTEREST_HANDLING_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedIAOprAccNo"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamicContinue"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamic"
			}
		}],

		"RAKRenewalTermDepositIslamicContinue": [{
			"eventName": "onRAKRenewalTermDepositBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamic"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RAKRenewalTermDepositIslamicContinue"
				},
				"errorPage": {
					"pageName": "RAKRenewalTermDepositIslamicContinue"
				}
			}, {
			"eventName": "onRAKRenewalTermDepositContinueClick",
			"action": "RAKRenewalTermDepositIslamicContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FIXED_DEPOSIT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDepAccNo",
				"RENEWAL_CURRENCY": "rakServiceReq.RAKRenewalTermDeposit.selectedcurrency",
				"RENEWAL_AMOUNT": "rakServiceReq.RAKRenewalTermDeposit.renewalamount.toString()",
				"RENEWAL_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.renewalperiod",
				"FOR_PERIOD": "rakServiceReq.RAKRenewalTermDeposit.selectedperiod",
				"fromDate_day": "rakServiceReq.RAKRenewalTermDeposit.fromDate_day",
				"fromDate_month": "rakServiceReq.RAKRenewalTermDeposit.fromDate_month",
				"fromDate_year": "rakServiceReq.RAKRenewalTermDeposit.fromDate_year",
				"toDate_day": "rakServiceReq.RAKRenewalTermDeposit.toDate_day",
				"toDate_month": "rakServiceReq.RAKRenewalTermDeposit.toDate_month",
				"toDate_year": "rakServiceReq.RAKRenewalTermDeposit.toDate_year",
				"DEBIT_ACCOUNT_NUMBER": "rakServiceReq.RAKRenewalTermDeposit.selectedDebitOprAccNo",
				"ON_MATURITY": "rakServiceReq.RAKRenewalTermDeposit.onamturityradiobtn",
				"ON_MATURITY_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedMaturityOprAccNo",
				"INTEREST_HANDLING": "rakServiceReq.RAKRenewalTermDeposit.interesthandling",
				"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword",
				"dateflag": "rakServiceReq.RAKRenewalTermDeposit.dateflag.toString()",
				"INTEREST_HANDLING_ACC_NO": "rakServiceReq.RAKRenewalTermDeposit.selectedIAOprAccNo"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamicSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKRenewalTermDepositIslamicContinue"
			}
		}],

		"RAKRenewalTermDepositSuccess": [{
			"eventName": "RAKRenewalTermDepositDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RAKRenewalTermDepositIslamicSuccess": [{
			"eventName": "RAKRenewalTermDepositDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakLcOrNlcInit": [{
				"eventName": "onSubmitOfDetailsForLcOrNlc",
				"action": "RakLcOrNlcConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.lcOrNlc.isSelectAccount",
					
					"rakServiceReq.lcOrNlc.isLanguage",
					"rakServiceReq.lcOrNlc.addressedTo",
					"rakServiceReq.lcOrNlc.debitOprAcc",
					"rakServiceReq.lcOrNlc.mobileNumber",
					"rakServiceReq.lcOrNlc.emirateSeletected",
					"rakServiceReq.lcOrNlc.selectedBranchId",									
					"rakServiceReq.lcOrNlc.isDispatchMode"
             ],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.lcOrNlc.transactionPassword",
					"REQUEST_TYPE": "rakServiceReq.lcOrNlc.isRequestFor",
					"ACCOUNT_TYPE": "rakServiceReq.lcOrNlc.isSelectAccount",
					"LOAN_ACCOUNT": "rakServiceReq.lcOrNlc.loanFinAcc",
					"CREDIT_CARD": "rakServiceReq.lcOrNlc.creditCardNumber",
					"ADDRESS_TO": "rakServiceReq.lcOrNlc.addressedTo",
					"LANGUAGE": "rakServiceReq.lcOrNlc.isLanguage",
					"DEBIT_ACCOUNT": "rakServiceReq.lcOrNlc.debitOprAcc",
					"EMIRATES_ID": "rakServiceReq.lcOrNlc.emirateSeletected",
					"BRANCH_ID": "rakServiceReq.lcOrNlc.selectedBranchIdSend",
					"MOBILE_NUMBER": "rakServiceReq.lcOrNlc.mobileNumberString",
					"NOTES": "rakServiceReq.lcOrNlc.notes",
					"DISPATCH_MODE": "rakServiceReq.lcOrNlc.isDispatchMode",
					"REGISTERED_ADDRESS": "rakServiceReq.lcOrNlc.registeredAddress",
					"COMPANY_NAME": "rakServiceReq.lcOrNlc.compName"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLcOrNlcConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLcOrNlcInit"
				}
			}, {
				"eventName": "onFetchAcountsLcOrNlc",
				"action": "RakLcOrNlcFetchAccountService",
				"actionType": "service",
				"validation": "false",

				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"MAIN_ACC_TYPE": "rakServiceReq.lcOrNlc.mainAccType"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLcOrNlcInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakLcOrNlcInit"
				}
			},

			{
				"eventName": "onLcOrNlcCloseClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}
		],
		"RakLcOrNlcConfirm": [{
			"eventName": "onLcOrNlcConfirmSubmitClick",
			"action": "RakLcOrNlcSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.lcOrNlc.transactionPassword"
			],
				"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.lcOrNlc.transactionPassword"],

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.lcOrNlc.transactionPassword",
				"REQUEST_TYPE": "rakServiceReq.lcOrNlc.isRequestFor",
				"ACCOUNT_TYPE": "rakServiceReq.lcOrNlc.acctountNumber",
				"LOAN_ACCOUNT": "rakServiceReq.lcOrNlc.loanFinAcc",
				"CREDIT_CARD": "rakServiceReq.lcOrNlc.creditCardNumber",
				"ADDRESS_TO": "rakServiceReq.lcOrNlc.addressedTo",
				"LANGUAGE": "rakServiceReq.lcOrNlc.isLanguage",
				"DEBIT_ACCOUNT": "rakServiceReq.lcOrNlc.debitOprAcc",
				"EMIRATES_ID": "rakServiceReq.lcOrNlc.emirateSeletected",
				"BRANCH_ID": "rakServiceReq.lcOrNlc.selectedBranchIdSend",
				"MOBILE_NUMBER": "rakServiceReq.lcOrNlc.mobileNumberString",
				"NOTES": "rakServiceReq.lcOrNlc.notes"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLcOrNlcSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLcOrNlcConfirm"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakLcOrNlcConfirm"
			},
			"errorPage": {
				"pageName": "RakLcOrNlcConfirm"
			}
		}, {
			"eventName": "onLcOrNlcConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakLcOrNlcInit"

			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakLcOrNlcSuccess": [{
			"eventName": "onLcorNlcDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKInvOpenGoldAccInit": [
		    {
                    "eventName": "onAccountSelectionBalCall",
                   "action": "RakSendMoneyLoadBalanceService",
                    "actionType": "serviceNoNavigation",
                    "validation": "true",
                    "validationParams": [
                            "rakServiceReq.RakInvOpenGoldAccModel.selectedOprAcct"
                     ],
                    "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",
                        "ACCOUNT_IDX": "rakServiceReq.RakInvOpenGoldAccModel.selectedOprAcct"
                       },
                    "successPage": {
                        "pageName": "RAKInvOpenGoldAccInit"
                    },
                    "errorPage": {
                        "pageName": "RAKInvOpenGoldAccInit"
                    }
                },
			{
                    "eventName": "onExchangeCall",
                   "action": "RakOpenGoldFetchBalExchangeRateService",
                    "actionType": "service",
                    "validation": "false",
                    "validationParams": [
                     ],
                    "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",                       
                        "DEBIT_ACCOUNT": "rakServiceReq.RakInvOpenGoldAccModel.selectedOprAcct",                      
                        "ENTRY_AMT": "rakServiceReq.RakInvOpenGoldAccModel.quantity"
                       },
                    "successPage": {
                        "pageName": "RAKInvOpenGoldAccInit"
                    },
                    "errorPage": {
                        "pageName": "RAKInvOpenGoldAccInit"
                    }
                },
		{
			"eventName": "onRAKInvOpenGoldAccBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvGoldAccOpenConfirmClick",
			"action": "RAKInvOpenGoldAccConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenGoldAccModel.selectedOprAcct",
				"rakServiceReq.RakInvOpenGoldAccModel.isSingleOrJoint",
				"rakServiceReq.RakInvOpenGoldAccModel.quantity"				

			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"REF_ACCOUNT_NUMBER_INDEX": "rakServiceReq.RakInvOpenGoldAccModel.selectedOprAcct",
				"MODE_OF_OPERATION": "rakServiceReq.RakInvOpenGoldAccModel.singleOrJointToSend",
				"TERMS_FLAG":"rakServiceReq.acceptTermscondition",
				"TERMS_FLAG1":"rakServiceReq.RakInvOpenGoldAccModel.isTnCAccepted",
				"ENTRY_AMT":"rakServiceReq.RakInvOpenGoldAccModel.quantity",
				"ENTRY_REMARKS":"rakServiceReq.RakInvOpenGoldAccModel.remarks"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccInit"
			}
		},
		{
				"eventName": "onDiscAndapplyBackClicked",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyNowScreen"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}

			}
		],
		"RAKInvOpenGoldAccConfirm": [{
			"eventName": "onRAKInvOpenGoldAccConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKInvOpenGoldAccConfirm"
			},
			"errorPage": {
				"pageName": "RAKInvOpenGoldAccConfirm"
			}
		}, {
			"eventName": "onRAKInvRedeemGoldSubmitToHOSTClick",
			"action": "RAKInvOpenGoldAccSuccessHOSTService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenGoldAccModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakInvOpenGoldAccModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakInvOpenGoldAccModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccSuccessHost"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccConfirm"
			}
		}, {
			"eventName": "onRAKInvRedeemGoldSubmitToRMClick",
			"action": "RAKInvOpenGoldAccSuccessRMService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenGoldAccModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakInvOpenGoldAccModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakInvOpenGoldAccModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccSuccessRM"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKInvOpenGoldAccConfirm"
			}
		}],
		"RAKInvOpenGoldAccSuccessHost": [{
			"eventName": "onRakInvOpenGoldAccSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKInvOpenGoldAccSuccessRM": [{
			"eventName": "onRakInvOpenGoldAccSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKDCCashBkRedemInit": [{
			"eventName": "onRakDCCashBkRedemInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakDCCashBkRedemContinueClick",
			"action": "RakDCCashBkRedemConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDCCashBkRedemModel.selectedDebitCard",
				"rakServiceReq.RakDCCashBkRedemModel.userEnteredRedeemAmount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"REF_DEBIT_CARD_INDEX": "rakServiceReq.RakDCCashBkRedemModel.selectedDebitCard",
				"CASH_BACK_AVAILABLE": "rakServiceReq.RakDCCashBkRedemModel.cashBackAvailableAmt",
				"REDEEM_AMOUNT": "rakServiceReq.RakDCCashBkRedemModel.userEnteredRedeemAmount.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDCCashBkRedemConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDCCashBkRedemInit"
			}
		}],
		"RAKDCCashBkRedemConfirm": [{
			"eventName": "onRAKDCCashBkRedemConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDCCashBkRedemInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakSendMoneyTransfersAuthenticatePage"
			},
			"errorPage": {
				"pageName": "RakSendMoneyTransfersAuthenticatePage"
			}
		}, {
			"eventName": "onRAKDCCashBkRedemSubmitToHOSTClick",
			"action": "RAKDCCashBkRedemSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakDCCashBkRedemModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakDCCashBkRedemModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakDCCashBkRedemModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDCCashBkRedemSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKDCCashBkRedemConfirm"
			}
		}],
		"RAKDCCashBkRedemSuccess": [{
			"eventName": "onRAKDCCashBkRedemSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKGenRqEStmtInit": [{
			"eventName": "onRAKGenRqEStmtBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKGenRqEStmtSubscribeConfirmClick",
			"action": "RAKGenRqEStmtConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakGenRqEStmtModel.isStmtCreditCardSelected",
				"rakServiceReq.RakGenRqEStmtModel.isStmtAccountsSelected",
				"rakServiceReq.RakGenRqEStmtModel.isAdviceRemitSelected",
				"rakServiceReq.RakGenRqEStmtModel.isAdviceDepositSelected",
				"rakServiceReq.RakGenRqEStmtModel.primaryEmail",
				"rakServiceReq.RakGenRqEStmtModel.secondaryEmail",
				"rakServiceReq.RakGenRqEStmtModel.faxNo"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"IS_STMT_CREDIT_CARD_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isStmtCreditCardSelected.toString()",
				"IS_STMT_ACCOUNT_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isStmtAccountsSelected.toString()",
				"IS_ADVICE_REMITANCE_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isAdviceRemitSelected.toString()",
				"IS_ADVICE_DEPOSIT_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isAdviceDepositSelected.toString()",
				"DELIVERY_MODE_SELECTED": "rakServiceReq.RakGenRqEStmtModel.deliveryModeSelected",
				"PRIMARY_EMAIL": "rakServiceReq.RakGenRqEStmtModel.primaryEmail",
				"SECONDARY_EMAIL": "rakServiceReq.RakGenRqEStmtModel.secondaryEmail",
				"FAX_NUMBER": "rakServiceReq.RakGenRqEStmtModel.faxNo.toString()",
				"GENRQESTMT_ACTIONID": "rakServiceReq.RakGenRqEStmtModel.actionIdToSend"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtInit"
			}
		}, {
			"eventName": "onRAKGenRqEStmtModifyClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtModify"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtInit"
			}
		}],
		"RAKGenRqEStmtConfirm": [{
			"eventName": "onRAKGenRqEStmtConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RAKGenRqEStmtConfirm"
			},
			"errorPage": {
				"pageName": "RAKGenRqEStmtConfirm"
			}
		}, {
			"eventName": "onRAKGenRqEStmtConfirmBackClickModify",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtModify"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKGenRqEStmtSubmitClick",
			"action": "RAKGenRqEStmtSuccessService",
			"actionType": "service",
			"validation": "false",
			"validationParams": ["rakServiceReq.RakGenRqEStmtModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakGenRqEStmtModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakGenRqEStmtModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtConfirm"
			}
		}],
		"RAKGenRqEStmtModify": [{
			"eventName": "onGenRqEStmtModifyBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakGenRqEStmtInitClick",
			"action": "RAKGenRqEStmtInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKGenRqEStmtSubscribeConfirmClick",
			"action": "RAKGenRqEStmtConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakGenRqEStmtModel.isStmtCreditCardSelected",
				"rakServiceReq.RakGenRqEStmtModel.isStmtAccountsSelected",
				"rakServiceReq.RakGenRqEStmtModel.isAdviceRemitSelected",
				"rakServiceReq.RakGenRqEStmtModel.isAdviceDepositSelected",
				"rakServiceReq.RakGenRqEStmtModel.primaryEmail",
				"rakServiceReq.RakGenRqEStmtModel.secondaryEmail",
				"rakServiceReq.RakGenRqEStmtModel.faxNo"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"IS_STMT_CREDIT_CARD_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isStmtCreditCardSelected.toString()",
				"IS_STMT_ACCOUNT_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isStmtAccountsSelected.toString()",
				"IS_ADVICE_REMITANCE_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isAdviceRemitSelected.toString()",
				"IS_ADVICE_DEPOSIT_SELECTED": "rakServiceReq.RakGenRqEStmtModel.isAdviceDepositSelected.toString()",
				"DELIVERY_MODE_SELECTED": "rakServiceReq.RakGenRqEStmtModel.deliveryModeSelected",
				"PRIMARY_EMAIL": "rakServiceReq.RakGenRqEStmtModel.primaryEmail",
				"SECONDARY_EMAIL": "rakServiceReq.RakGenRqEStmtModel.secondaryEmail",
				"FAX_NUMBER": "rakServiceReq.RakGenRqEStmtModel.faxNo.toString()",
				"GENRQESTMT_ACTIONID": "rakServiceReq.RakGenRqEStmtModel.actionIdToSend"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKGenRqEStmtModify"
			}
		}],
		"RAKGenRqEStmtSuccess": [{
			"eventName": "onRAKGenRqEStmtSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RAKCreditCardReportCapture": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCapture"
			}
		}, {
			"eventName": "onRAKCreditCardReportCaptureConfirmClick",
			"action": "RAKCreditCardReportCaptureContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKChangeReportCaptureModel.selectedCCNo",
				"rakServiceReq.RAKChangeReportCaptureModel.delieveryMode",
				"rakServiceReq.RAKChangeReportCaptureModel.selectedBranch",
				"rakServiceReq.RAKChangeReportCaptureModel.selectedCapture",
				"rakServiceReq.RAKChangeReportCaptureModel.bankName",
				"rakServiceReq.RAKChangeReportCaptureModel.atmBranchName",
				"rakServiceReq.RAKChangeReportCapture.emirateSeletected"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_CARD_NUMBER": "rakServiceReq.RAKChangeReportCaptureModel.selectedCCNo",
				"MODE_OF_DELIVERY": "rakServiceReq.RAKChangeReportCaptureModel.delieveryMode",
				"CAPTURE_TYPE": "rakServiceReq.RAKChangeReportCaptureModel.selectedCapture",
				"BANK_NAME": "rakServiceReq.RAKChangeReportCaptureModel.bankName",
				"ATM_BRANCH_NAME": "rakServiceReq.RAKChangeReportCaptureModel.atmBranchName",
				"SELECTED_BRANCH": "rakServiceReq.RAKChangeReportCaptureModel.selectedBranch",
				"EMIRATE_ID": "rakServiceReq.RAKChangeReportCapture.emirateSeletected"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCaptureContinue"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCapture"
			}
		}],

		"RAKCreditCardReportCaptureContinue": [{
			"eventName": "onRAKCreditCardReportCaptureBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCapture"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCapture"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				 "OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKCreditCardReportCaptureContinue"
			},
			"errorPage": {
				"pageName": "RAKCreditCardReportCaptureContinue"
			}
		}, {
			"eventName": "onRAKCreditCardReportCaptureContinueClick",
			"action": "RAKCreditCardReportCaptureSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_CARD_NUMBER": "rakServiceReq.RAKChangeReportCaptureModel.selectedCCNo",
				"MODE_OF_DELIVERY": "rakServiceReq.RAKChangeReportCaptureModel.delieveryMode",
				"CAPTURE_TYPE": "rakServiceReq.RAKChangeReportCaptureModel.selectedCapture",
				"BANK_NAME": "rakServiceReq.RAKChangeReportCaptureModel.bankName",
				"ATM_BRANCH_NAME": "rakServiceReq.RAKChangeReportCaptureModel.atmBranchName",
				"SELECTED_BRANCH": "rakServiceReq.RAKChangeReportCaptureModel.selectedBranch",
				"EMIRATE_ID": "rakServiceReq.RAKChangeReportCapture.emirateSeletected",
				"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCaptureSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCaptureContinue"
			}
		}],

		"RAKCreditCardReportCaptureSuccess": [{
			"eventName": "RAKCreditCardReportCaptureDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCreditCardReportCaptureSuccess"
			}
		}],

		"RakChangeBillingCreditCardPage": [{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardPage"
			}
		}, {
			"eventName": "onChangeBillDateCreditClick",
			"action": "RakChangeBillingFetchCreditCardService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_CARD_NO": "rakServiceReq.RAKChangeBillDateData.creditCardNum"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardPage"
			}
		}, {
			"eventName": "onRakChangeBillingCreditCardContinueClick",
			"action": "RakChangeBillingCreditCardContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKChangeBillDateData.creditCardNum",
				"rakServiceReq.RAKChangeBillDateData.dueDate",
				"rakServiceReq.RAKChangeBillDateData.selectedPeriod"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_CARD_NUMBER": "rakServiceReq.RAKChangeBillDateData.creditCardNum",
				"DUE_DATE": "rakServiceReq.RAKChangeBillDateData.dueDate",
				"NEW_BILLING_DATE": "rakServiceReq.RAKChangeBillDateData.selectedPeriod"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardPage"
			}
		}],

		"RakChangeBillingCreditCardConfirm": [{
			"eventName": "onRakChangeBillingCreditClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardConfirm"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakChangeBillingCreditCardConfirm"
			},
			"errorPage": {
				"pageName": "RakChangeBillingCreditCardConfirm"
			}
		}, {
			"eventName": "onRakChangeBillingCreditSubmitClick",
			"action": "RakChangeBillingCreditSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.GenericAuthorizationVariable.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_CARD_NUMBER": "rakServiceReq.RAKChangeBillDateData.creditCardNum",
				"DUE_DATE": "rakServiceReq.RAKChangeBillDateData.dueDate",
				"NEW_BILLING_DATE": "rakServiceReq.RAKChangeBillDateData.selectedPeriod",
				"Mode": "rakServiceReq.GenericAuthorizationVariable.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardConfirm"
			}
		}],
		"RakChangeBillingCreditCardSuccess": [{
			"eventName": "RakChangeBillingCreditDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakChangeBillingCreditCardSuccess"
			}
		}],
		"Rak_CC_PhysicalStmtReq_Init": [{
				"eventName": "onRakCSRPageBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRakCSRContinueClick",
				"action": "RakCSRPreviewConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.CCardStmtReq.selectedCardIndex",
					"rakServiceReq.CCardStmtReq.selectedFromMonth",
					"rakServiceReq.CCardStmtReq.selectedToMonth",
					"rakServiceReq.CCardStmtReq.selectedToYear",
					"rakServiceReq.CCardStmtReq.selectedFromYear"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"CARD_INDEX": "rakServiceReq.CCardStmtReq.selectedCardIndex",
					"FROM_MONTH_INDEX": "rakServiceReq.CCardStmtReq.selectedFromMonth",
					"TO_MONTH_INDEX": "rakServiceReq.CCardStmtReq.selectedToMonth",
					"TO_YEAR_INDEX": "rakServiceReq.CCardStmtReq.selectedToYear",
					"FROM_YEAR_INDEX": "rakServiceReq.CCardStmtReq.selectedFromYear"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CC_PhysicalStmtReq_PreviewConfirm"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CC_PhysicalStmtReq_Init"
				}
			}
		],


		"Rak_CC_PhysicalStmtReq_PreviewConfirm": [{
				"eventName": "onRakCSRPageBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CC_PhysicalStmtReq_Init"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},
			{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "Rak_CC_PhysicalStmtReq_PreviewConfirm"
				},
				"errorPage": {
					"pageName": "Rak_CC_PhysicalStmtReq_PreviewConfirm"
				}
			},	

			{
				"eventName": "onRakCSRSubmitClick",
				"action": "RakCSRSubmitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.CCardStmtReq.txnPwd"
				],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.CCardStmtReq.txnPwd"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"CARD_INDEX": "rakServiceReq.CCardStmtReq.selectedCardIndex",
					"FROM_MONTH_INDEX": "rakServiceReq.CCardStmtReq.selectedFromMonth",
					"TO_MONTH_INDEX": "rakServiceReq.CCardStmtReq.selectedToMonth",
					"TO_YEAR_INDEX": "rakServiceReq.CCardStmtReq.selectedToYear",
					"FROM_YEAR_INDEX": "rakServiceReq.CCardStmtReq.selectedFromYear",
					"Mode": "rakServiceReq.CCardStmtReq.txnPwd"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CC_PhysicalStmtReq_Success"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "Rak_CC_PhysicalStmtReq_PreviewConfirm"
				}
			}
		],
		"Rak_CC_PhysicalStmtReq_Success": [{
			"eventName": "onRakCSROkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakInvestmentSubscriptionsInit": [{
			"eventName": "onSelectForProducts",
			"action": "RakInvestmentSubscriptionsConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.investmentSubscription.mobilePrefix",
				"rakServiceReq.investmentSubscription.mobileNumber"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"MOBILE_NUM_STRING": "rakServiceReq.investmentSubscription.mobileNumberString",
				"MOBILE_PREFIX_CODE": "rakServiceReq.investmentSubscription.mobilePrefixCodeSent",
				"PRODUCT_CODE_ARRAY": "rakServiceReq.investmentSubscription.productsSend"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentSubscriptionsConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentSubscriptionsInit"
			}
		}, {
			"eventName": "onInvestmentSubscriptionBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvestmentSubscriptionsConfirm": [{
			"eventName": "oninvestmentSubscriptionConfirmSubmitClick",
			"action": "RakInvestmentSubscriptionsSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.investmentSubscription.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.investmentSubscription.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.investmentSubscription.transactionPassword",
				"MOBILE_NUM_STRING": "rakServiceReq.investmentSubscription.mobileNumberString",
				"MOBILE_PREFIX_CODE": "rakServiceReq.investmentSubscription.mobilePrefixCodeSent",
				"PRODUCT_CODE_ARRAY": "rakServiceReq.investmentSubscription.productsSend"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentSubscriptionsSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentSubscriptionsConfirm"
			}
		}, {
			"eventName": "oninvestmentSubscriptionConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentSubscriptionsInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakInvestmentSubscriptionsConfirm"
				},
				"errorPage": {
					"pageName": "RakInvestmentSubscriptionsConfirm"
				}
			}],
		"RakInvestmentSubscriptionsSuccess": [{
			"eventName": "onInvestmentSubscriptionsDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKCCStandingInstInit": [{
			"eventName": "onRAKCCStandingInstInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKCCDetailsSIFetchClick",
			"action": "RAKCCDetailsSIFetchService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"RAK_SI_CC_INDEX": "rakServiceReq.RakCCStandingInstModel.selectedCreditCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstInit"
			}
		}, {
			"eventName": "onRAKCCStandingInstConfirmClick",
			"action": "RAKCCStandingInstConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCStandingInstModel.selectedCreditCard",
				"rakServiceReq.RakCCStandingInstModel.selectedOprAcc",
				"rakServiceReq.RakCCStandingInstModel.perOfCurrentStatementBal",
				"rakServiceReq.RakCCStandingInstModel.flatAmount",
				"rakServiceReq.RakCCStandingInstModel.selectedDateOfMonth"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"RAK_SI_CC_INDEX": "rakServiceReq.RakCCStandingInstModel.selectedCreditCard",
				"RAK_SI_OPR_INDEX": "rakServiceReq.RakCCStandingInstModel.selectedOprAcc",
				"RAK_SI_MNTHLY_PMT_PER": "rakServiceReq.RakCCStandingInstModel.selectedMonthlyPmtPercentage",
				"RAK_SI_PER_CURR_STMT_BAL": "rakServiceReq.RakCCStandingInstModel.perOfCurrentStatementBal.toString()",
				"RAK_SI_FLAT_AMT": "rakServiceReq.RakCCStandingInstModel.flatAmount.toString()",
				"RAK_SI_IS_DOM_OR_PMTDUE": "rakServiceReq.RakCCStandingInstModel.isDOMorPmtDueDtSend",
				"RAK_SI_DOM": "rakServiceReq.RakCCStandingInstModel.selectedDateOfMonth"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstInit"
			}
		}, {
			"eventName": "onRAKCCStandingInstAmendSIOkClick",
			"action": "RakAmendStandingInstInitFromSIService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakAmendStandingInst"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKCCStandingInstConfirm": [{
			"eventName": "onRAKCCStandingInstConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKCCStandingInstFinalSubmitClick",
			"action": "RAKCCStandingInstSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCStandingInstModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakCCStandingInstModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakCCStandingInstModel.txnPwd.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCStandingInstConfirm"
			}
		},{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RAKCCStandingInstConfirm"
				},
				"errorPage": {
					"pageName": "RAKCCStandingInstConfirm"
				}
		}],
		"RAKCCStandingInstSuccess": [{
			"eventName": "onRAKCCStandingInstSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakApplyCCInit": [{
			"eventName": "onRakApplyCCBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakApplyCCConfirmClick",
			"action": "RakApplyCCConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakApplyCCModel.MobileNo",
				"rakServiceReq.RakApplyCCModel.EmailId",
				"rakServiceReq.RakApplyCCModel.CustomerName"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"RAK_APPLYCC_MOBNO": "rakServiceReq.RakApplyCCModel.MobileNo.toString()",
				"RAK_APPLYCC_EMAILID": "rakServiceReq.RakApplyCCModel.EmailId",
				"RAK_APPLYCC_CUSTOMERNAME": "rakServiceReq.RakApplyCCModel.CustomerName",
				"RAK_APPLYCC_REMARKS": "rakServiceReq.RakApplyCCModel.Remarks",
				"menuId": "rakServiceReq.RakApplyCCModel.RequestId",
				"RequestId": "rakServiceReq.RakApplyCCModel.RequestId",
				"RAK_APPLYCC_SERVICEID": "rakServiceReq.RakApplyCCModel.ServiceId"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCCConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCCInit"
			}
		}],
		"RakApplyCCConfirm": [{
			"eventName": "onRakApplyCCConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCCInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakApplyCCConfirmFinalSubmitClick",
			"action": "RakApplyCCConfirmSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakApplyCCModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakApplyCCModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"menuId": "rakServiceReq.RakApplyCCModel.RequestId",
				"RequestId": "rakServiceReq.RakApplyCCModel.RequestId",
				"Mode": "rakServiceReq.RakApplyCCModel.txnPwd.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCCSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyCCConfirm"
			}
		}],
		"RakApplyCCSuccess": [{
			"eventName": "onRakApplyCCSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakCreditCardBalanceTransferInit": [{
			"eventName": "onRAKCreditCardBalanceTransferDetails",
			"action": "RakCreditCardBalanceTransferDetails",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCreditCardBalanceTransfer.selectedCard"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"accIndex": "rakServiceReq.RakCreditCardBalanceTransfer.selectedCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferInit"
			}
		}, {
			"eventName": "onRAKCreditCardBalanceTransferConfirmClick",
			"action": "RakCreditCardBalanceTransferConfirm",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCreditCardBalanceTransfer.selectedCard",
				"rakServiceReq.RakCreditCardBalanceTransfer.balanceTransferAmt",
				"rakServiceReq.RakCreditCardBalanceTransfer.bnkType",
				"rakServiceReq.RakCreditCardBalanceTransfer.bankName",
				"rakServiceReq.RakCreditCardBalanceTransfer.otherBnkCC",
				"rakServiceReq.RakCreditCardBalanceTransfer.deliveryChannel",
				"rakServiceReq.RakCreditCardBalanceTransfer.managerChq",
				"rakServiceReq.RakCreditCardBalanceTransfer.branch",
				"rakServiceReq.RakCreditCardBalanceTransfer.balanceTransfer"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.RakCreditCardBalanceTransfer.selectedCard",
				"BNK_NAME": "rakServiceReq.RakCreditCardBalanceTransfer.bankNamesList[rakServiceReq.RakCreditCardBalanceTransfer.bankName].code",
				"BAL_AMOUNT": "rakServiceReq.RakCreditCardBalanceTransfer.balanceTransferAmt.toString()",
				"BNK_CC": "rakServiceReq.RakCreditCardBalanceTransfer.otherBnkCC.toString()",
				"MANAGER_CHEQUE": "rakServiceReq.RakCreditCardBalanceTransfer.managerChq",
				"BRANCH": "rakServiceReq.RakCreditCardBalanceTransfer.confirmedBranch",
				"BAL_OPT": "rakServiceReq.RakCreditCardBalanceTransfer.balanceTransferList[rakServiceReq.RakCreditCardBalanceTransfer.balanceTransfer].code",
				"DEL_CHANNEL": "rakServiceReq.RakCreditCardBalanceTransfer.confirmDelChannel",
				"BNK_TYPE": "rakServiceReq.RakCreditCardBalanceTransfer.bnkTypeList[rakServiceReq.RakCreditCardBalanceTransfer.bnkType].code",
				"REMARKS": "rakServiceReq.RakCreditCardBalanceTransfer.remarks"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferInit"
			}
		}, {
			"eventName": "onRAKBalanceTransferBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakCreditCardBalanceTransferConfirm": [{
			"eventName": "onRAKCreditCardBalanceTransferSubmitClick",
			"action": "RakCreditCardBalanceTransferSuccess",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCreditCardBalanceTransfer.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakCreditCardBalanceTransfer.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CARDNO": "rakServiceReq.RakCreditCardBalanceTransfer.selectedCard",
				"BNK_NAME": "rakServiceReq.RakCreditCardBalanceTransfer.bankNamesList[rakServiceReq.RakCreditCardBalanceTransfer.bankName].code",
				"BAL_AMOUNT": "rakServiceReq.RakCreditCardBalanceTransfer.balanceTransferAmt.toString()",
				"BNK_CC": "rakServiceReq.RakCreditCardBalanceTransfer.otherBnkCC.toString()",
				"MANAGER_CHEQUE": "rakServiceReq.RakCreditCardBalanceTransfer.managerChq",
				"BRANCH": "rakServiceReq.RakCreditCardBalanceTransfer.confirmedBranch",
				"BAL_OPT": "rakServiceReq.RakCreditCardBalanceTransfer.balanceTransferList[rakServiceReq.RakCreditCardBalanceTransfer.balanceTransfer].code",
				"DEL_CHANNEL": "rakServiceReq.RakCreditCardBalanceTransfer.confirmDelChannel",
				"BNK_TYPE": "rakServiceReq.RakCreditCardBalanceTransfer.bnkTypeList[rakServiceReq.RakCreditCardBalanceTransfer.bnkType].code",
				"REMARKS": "rakServiceReq.RakCreditCardBalanceTransfer.remarks",
				"Mode": "rakServiceReq.RakCreditCardBalanceTransfer.txnPwd"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferConfirm"
			}
		}, {
			"eventName": "onRAKBalanceTransferBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardBalanceTransferInit"
			}
		},{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakCreditCardBalanceTransferConfirm"
				},
				"errorPage": {
					"pageName": "RakCreditCardBalanceTransferConfirm"
				}
		}],

		"RakCreditCardBalanceTransferSuccess": [{
			"eventName": "onRAKBalanceTransferBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"Rak_CCTxnDispute_Init": [{
			"eventName": "onRAKCCTxnDetails",
			"action": "RakCADFetchTxnListService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCTxnDisputeSR.selectedCard", "rakServiceReq.RakCCTxnDisputeSR.toDate", "rakServiceReq.RakCCTxnDisputeSR.fromDate"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.RakCCTxnDisputeSR.selectedCard",

				"TXN_FROM_DATE_year": "rakServiceReq.RakCCTxnDisputeSR.fromDate_year",
				"TXN_FROM_DATE_month": "rakServiceReq.RakCCTxnDisputeSR.fromDate_month",
				"TXN_FROM_DATE_day": "rakServiceReq.RakCCTxnDisputeSR.fromDate_day",
				"TXN_TO_DATE_year": "rakServiceReq.RakCCTxnDisputeSR.toDate_year",
				"TXN_TO_DATE_month": "rakServiceReq.RakCCTxnDisputeSR.toDate_month",
				"TXN_TO_DATE_day": "rakServiceReq.RakCCTxnDisputeSR.toDate_day"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_Init"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_Init"
			}
		}, {
			"eventName": "onRAKCCTxnContinue",
			"action": "RakCADPreviewConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCTxnDisputeSR.selectedCard", "rakServiceReq.RakCCTxnDisputeSR.txnSel"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.RakCCTxnDisputeSR.selectedCard",
				"TXN_INDEX": "rakServiceReq.RakCCTxnDisputeSR.txnSel"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_PreviewConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_Init"
			}
		}, {
			"eventName": "onRAKBalanceTransferBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"Rak_CCTxnDispute_PreviewConfirm": [{
			"eventName": "onRAKCCTxnSubmit",
			"action": "RakCADSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCTxnDisputeSR.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakCCTxnDisputeSR.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakCCTxnDisputeSR.txnPwd",
				"CREDIT_ACCOUNT": "rakServiceReq.RakCCTxnDisputeSR.selectedCard",
				"TXN_INDEX": "rakServiceReq.RakCCTxnDisputeSR.txnSel"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_Success"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_PreviewConfirm"
			}
		}, {
			"eventName": "onRAKBalanceTransferBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_Init"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak_CCTxnDispute_Init"
			}
		},{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "Rak_CCTxnDispute_PreviewConfirm"
				},
				"errorPage": {
					"pageName": "Rak_CCTxnDispute_PreviewConfirm"
				}
		}],
		"Rak_CCTxnDispute_Success": [{
			"eventName": "onRAKBalanceTransferBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakCCChequeRequestInit": [{
			"eventName": "onRakCCChequeReqConfirmClick",
			"action": "RakCCChequeRequestConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCChequeRequestSR.selectedCard",
				"rakServiceReq.RakCCChequeRequestSR.amount",
				"rakServiceReq.RakCCChequeRequestSR.selectedPop",
				"rakServiceReq.RakCCChequeRequestSR.benName",
				"rakServiceReq.RakCCChequeRequestSR.selectedBranch",
				"rakServiceReq.RakCCChequeRequestSR.emirateSeletected",
				"rakServiceReq.RakCCChequeRequestSR.delivChannel",
				"rakServiceReq.RakCCChequeRequestSR.others",
				"rakServiceReq.RakCCChequeRequestSR.iban"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"AMOUNT": "rakServiceReq.RakCCChequeRequestSR.amount.toString()",
				"CARDNO": "rakServiceReq.RakCCChequeRequestSR.selectedCard",
				"POP": "rakServiceReq.RakCCChequeRequestSR.popList[rakServiceReq.RakCCChequeRequestSR.selectedPop].code",
				"BEN_NAME": "rakServiceReq.RakCCChequeRequestSR.benName",
				"DELCHAN": "rakServiceReq.RakCCChequeRequestSR.delivChannel",
				"BRANCH": "rakServiceReq.RakCCChequeRequestSR.confirmedBranch",
				"EMIRATE_ID": "rakServiceReq.RakCCChequeRequestSR.emirateSeletected",
				"Mode": "rakServiceReq.RakCCChequeRequestSR.txnPwd",
				"OTHERS": "rakServiceReq.RakCCChequeRequestSR.others",
                "IBAN_FIELD": "rakServiceReq.RakCCChequeRequestSR.iban"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			}
		}, 
		{
			"eventName": "onRakCCLimitFetch",
			"action": "RakCCChequeLimiFetchService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCChequeRequestSR.selectedCard"
				
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"accIndex": "rakServiceReq.RakCCChequeRequestSR.selectedCard"
				
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			}
		},
		
		{
			"eventName": "onRAKCCRequestDetails",
			"action": "RakCCChequeRequestDetailService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCChequeRequestSR.selectedCard",
				"rakServiceReq.RakCCChequeRequestSR.selectedPop"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"accIndex": "rakServiceReq.RakCCChequeRequestSR.selectedCard",
				"POP": "rakServiceReq.RakCCChequeRequestSR.popList[rakServiceReq.RakCCChequeRequestSR.selectedPop].code"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			}
		}, {
			"eventName": "onRAKCCChequeReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakCCChequeRequestConfirm": [{
			"eventName": "onRAKCCChequeRequestSubmit",
			"action": "RakCCChequeRequestSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCChequeRequestSR.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakCCChequeRequestSR.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"AMOUNT": "rakServiceReq.RakCCChequeRequestSR.amount.toString()",
				"CARDNO": "rakServiceReq.RakCCChequeRequestSR.selectedCard",
				"POP": "rakServiceReq.RakCCChequeRequestSR.popList[rakServiceReq.RakCCChequeRequestSR.selectedPop].code",
				"BEN_NAME": "rakServiceReq.RakCCChequeRequestSR.benName",
				"DELCHAN": "rakServiceReq.RakCCChequeRequestSR.delivChannel",
				"BRANCH": "rakServiceReq.RakCCChequeRequestSR.confirmedBranch",
				"EMIRATE_ID": "rakServiceReq.RakCCChequeRequestSR.emirateSeletected",
				"Mode": "rakServiceReq.RakCCChequeRequestSR.txnPwd",
				"OTHERS": "rakServiceReq.RakCCChequeRequestSR.others",
                "IBAN_FIELD": "rakServiceReq.RakCCChequeRequestSR.iban"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestConfirm"
			}
		}, {
			"eventName": "onRAKCCChequeReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCChequeRequestInit"
			}
		},{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakCCChequeRequestConfirm"
			},
			"errorPage": {
				"pageName": "RakCCChequeRequestConfirm"
			}
		}],
		"RakCCChequeRequestSuccess": [{
				"eventName": "onRAKCCChequeReqBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}

		],

		"RakCCConvertionEmiPre": [{
				"eventName": "onSelectForTransactionDate",
				"action": "RakCCConvertionEmiInitService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.CCConvertionEmi.creditIndex",
					"rakServiceReq.CCConvertionEmi.tranStartDate",
					"rakServiceReq.CCConvertionEmi.tranEndDate"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"CREDIT_CARD_NO_INDEX": "rakServiceReq.CCConvertionEmi.creditIndex",
					"TXN_FROM_DATE_day": "rakServiceReq.CCConvertionEmi.tranStartDay",
					"TXN_FROM_DATE_month": "rakServiceReq.CCConvertionEmi.tranStartMonth",
					"TXN_FROM_DATE_year": "rakServiceReq.CCConvertionEmi.tranStartYear",
					"TXN_TO_DATE_day": "rakServiceReq.CCConvertionEmi.tranEndDay",
					"TXN_TO_DATE_month": "rakServiceReq.CCConvertionEmi.tranEndMonth",
					"TXN_TO_DATE_year": "rakServiceReq.CCConvertionEmi.tranEndYear"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCConvertionEmiPre"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCConvertionEmiPre"
				}
			},
			
			{
			"eventName": "onSelectForConvertionEmiDetails",
			"action": "RakCCConvertionEmiConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.CCConvertionEmi.selectedData"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TXN_DESC": "rakServiceReq.CCConvertionEmi.tranDesc",
				"TXN_AMT_ORG": "rakServiceReq.CCConvertionEmi.txnAmountOriginal",
				"TXN_AMT_AED_BILL": "rakServiceReq.CCConvertionEmi.txnAmountAEDBill",
				"MERCHANT_CODE": "rakServiceReq.CCConvertionEmi.merchantCode",
				"CHARGE_TYPE_CODE": "rakServiceReq.CCConvertionEmi.chargeTypeCode",
				"TENOR_CODE": "rakServiceReq.CCConvertionEmi.tenorCode",
					"TRAN_DATE": "rakServiceReq.CCConvertionEmi.tranDate",
				"MERCHANT_OTHERS": "rakServiceReq.CCConvertionEmi.merchantOthersText"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiPre"
			}
		}, 

			{
				"eventName": "onSelectForConvertionEmiFilter",
				"action": "RakCCConvertionEmiDateValidationService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.CCConvertionEmi.selectedData"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"TRAN_DATE": "rakServiceReq.CCConvertionEmi.tranDate",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCConvertionEmiDetails"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakCCConvertionEmiPre"
				}
			},

			{
				"eventName": "onCCConvertionEmiPreCloseClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}
		],



		"RakCCConvertionEmiDetails": [{
			"eventName": "onSelectForConvertionEmiDetails",
			"action": "RakCCConvertionEmiConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.CCConvertionEmi.selectedData"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TXN_DESC": "rakServiceReq.CCConvertionEmi.tranDesc",
				"TXN_AMT_ORG": "rakServiceReq.CCConvertionEmi.txnAmountOriginal",
				"TXN_AMT_AED_BILL": "rakServiceReq.CCConvertionEmi.txnAmountAEDBill",
				"MERCHANT_CODE": "rakServiceReq.CCConvertionEmi.merchantCode",
				"CHARGE_TYPE_CODE": "rakServiceReq.CCConvertionEmi.chargeTypeCode",
				"TENOR_CODE": "rakServiceReq.CCConvertionEmi.tenorCode",
					"TRAN_DATE": "rakServiceReq.CCConvertionEmi.tranDate",
				"MERCHANT_OTHERS": "rakServiceReq.CCConvertionEmi.merchantOthersText"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiDetails"
			}
		}, 
		{
			"eventName": "onSelectForConvertionEmiDetailsUpload",
			"action": "RakCCConvertionEmiConfirmServiceUpload",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.CCConvertionEmi.merchantCode",
				"rakServiceReq.CCConvertionEmi.chargeTypeCode",
				"rakServiceReq.CCConvertionEmi.tenorCode",
				"rakServiceReq.CCConvertionEmi.merchantOthers"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TXN_DESC": "rakServiceReq.CCConvertionEmi.tranDesc",
				"TXN_AMT_ORG": "rakServiceReq.CCConvertionEmi.txnAmountOriginal",
				"data":"rakMyProfile.userProfilePicTemp",
				"TXN_AMT_AED_BILL": "rakServiceReq.CCConvertionEmi.txnAmountAEDBill",
				"MERCHANT_CODE": "rakServiceReq.CCConvertionEmi.merchantCode",
				"CHARGE_TYPE_CODE": "rakServiceReq.CCConvertionEmi.chargeTypeCode",
				"TENOR_CODE": "rakServiceReq.CCConvertionEmi.tenorCode",
				"MERCHANT_OTHERS": "rakServiceReq.CCConvertionEmi.merchantOthersText"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiDetails"
			}
		}, 
		
		 {
                    "eventName": "uploadProfilePic",
                    "action": "RAKConvertEMIUploadService",
                    "actionType": "serviceNoNavigation",
                    "parameters": {
  					    "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam",
                        "data":"myProfile.userProfilePicTemp"
                       },
                    "successPage": {
                        "pageName": "RakCCConvertionEmiDetails"
                    },
                    "errorPage": {
                        "pageName": "RakCCConvertionEmiDetails"
                    }
                    },
		
		{
			"eventName": "onCCConvertionEmiDetailsBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiPre"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakCCConvertionEmiConfirm": [{
			"eventName": "onCCConvertionEmiConfirmClick",
			"action": "RakCCConvertionEmiSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.CCConvertionEmi.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.CCConvertionEmi.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.CCConvertionEmi.transactionPassword",
				"TXN_DESC": "rakServiceReq.CCConvertionEmi.tranDesc",
				"TXN_AMT_ORG": "rakServiceReq.CCConvertionEmi.txnAmountOriginal",
				"TXN_AMT_AED_BILL": "rakServiceReq.CCConvertionEmi.txnAmountAEDBill",
				"MERCHANT_CODE": "rakServiceReq.CCConvertionEmi.merchantCode",
				"CHARGE_TYPE_CODE": "rakServiceReq.CCConvertionEmi.chargeTypeCode",
				"TENOR_CODE": "rakServiceReq.CCConvertionEmi.tenorCode",
				"MERCHANT_OTHERS": "rakServiceReq.CCConvertionEmi.merchantOthersText"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiConfirm"
			}
		}, {
			"eventName": "onCCConvertionEmiConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCConvertionEmiPre"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakCCConvertionEmiConfirm"
			},
			"errorPage": {
				"pageName": "RakCCConvertionEmiConfirm"
			}
		}],
		"RakCCConvertionEmiSuccess": [{
			"eventName": "onCCConvertionEmiDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakRemittanceSummaryPre": [{
			"eventName": "onRakSendMoneyRemitInitClick",
			"action": "RakRemittanceSummaryInitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.remitSummary.transferMode"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"xyz_day": "rakServiceReq.remitSummary.toDay",
				"xyz_month": "rakServiceReq.remitSummary.toMonth",
				"xyz_year": "rakServiceReq.remitSummary.toYear",
				"TFR_MODE": "rakServiceReq.remitSummary.transferMode"
			},

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakRemittanceSummaryInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRemittanceSummaryPreCloseClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],


		"RakRemittanceSummaryInit": [{
				"eventName": "onSelectForCancel",
				"action": "RakRemittanceSummaryCancelService",
				"actionType": "service",
				"validation": "false",
				"validationParams": [
					"rakServiceReq.remitSummary.transferMode"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakRemittanceSummaryCancel"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRemittanceSummaryInitCloseClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}
		],

		"RakRemittanceSummaryCancel": [{
				"eventName": "onCancelConfirm",
				"action": "RakRemittanceSummaryCancelSuccessService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.remitSummary.transactionPassword"
				],
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.remitSummary.transactionPassword"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"Mode": "rakServiceReq.remitSummary.transactionPassword",
					"REMARKS": "rakServiceReq.remitSummary.remarks",
					"REF_NO_ARRAY": "rakServiceReq.remitSummary.refNumSend"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakRemittanceSummaryCancelSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			},

			{
				"eventName": "onRemittanceSummaryCancelBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakRemittanceSummaryInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}
		],

		"RakRemittanceSummaryCancelSuccess": [{
			"eventName": "onSuccessClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",

			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakIslamicDepositOpenNewTermSRSuccess": [{
			"eventName": "onSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}],
		"RakCCDCPinReissueInitPage": [{
			"eventName": "onRAKCCDCPinReissueInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakCCDCPinReissueFetchOTPClick",
			"action": "RakCCDCPinReissueFetchOTPService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKCCDCPinReissueModel.selectedCCDCCard"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SELECTED_CARD_INDEX": "rakServiceReq.RAKCCDCPinReissueModel.selectedCCDCCard",
				"CREDIT_ACCOUNT": "rakServiceReq.RAKCCDCPinReissueModel.selectedCCDCCard",
				"HIFRequestID": "rakServiceReq.RAKCCDCPinReissueModel.HIFReqIdFetchOTP",
				"eventExecuted": "rakServiceReq.RAKCCDCPinReissueModel.EventIdFetchOTP",
				"RequestId": "rakServiceReq.RAKCCDCPinReissueModel.ReqId",
				"menuId": "rakServiceReq.RAKCCDCPinReissueModel.ReqId"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueInitPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueInitPage"
			}
		}, {
			"eventName": "onRAKCCDCPinReissueContinueClick",
			"action": "RAKCCDCPinReissueContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKCCDCPinReissueModel.selectedCCDCCard",
				"rakServiceReq.RAKCCDCPinReissueModel.enteredOTP",
				"rakServiceReq.RAKCCDCPinReissueModel.enteredCVV",
				"rakServiceReq.RAKCCDCPinReissueModel.dateOfBirth"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SELECTED_CARD_INDEX": "rakServiceReq.RAKCCDCPinReissueModel.selectedCCDCCard",
				"OTP_RECEIVED": "rakServiceReq.RAKCCDCPinReissueModel.enteredOTP",
				"CARD_CVV": "rakServiceReq.RAKCCDCPinReissueModel.enteredCVV.toString()",
				"DATE_OF_BIRTH": "rakServiceReq.RAKCCDCPinReissueModel.dateOfBirth.toString()",
				"DATE_OF_BIRTH_year": "rakServiceReq.RAKCCDCPinReissueModel.dob_year.toString()",
				"DATE_OF_BIRTH_month": "rakServiceReq.RAKCCDCPinReissueModel.dob_month.toString()",
				"DATE_OF_BIRTH_day": "rakServiceReq.RAKCCDCPinReissueModel.dob_day.toString()",
				"RequestId": "rakServiceReq.RAKCCDCPinReissueModel.ReqId",
				"menuId": "rakServiceReq.RAKCCDCPinReissueModel.ReqId"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueConfirmPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueInitPage"
			}
		}],
		"RakCCDCPinReissueConfirmPage": [{
			"eventName": "onRAKCCDCPinReissueConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueInitPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueConfirmPage"
			}
		}, {
			"eventName": "onRakCCPinReissueFinalSubmitClick",
			"action": "RakCCPinReissueFinalSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKCCDCPinReissueModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKCCDCPinReissueModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKCCDCPinReissueModel.txnPwd"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueSuccessPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueConfirmPage"
			}
		}, {
			"eventName": "onRakDCPinReissueFinalSubmitClick",
			"action": "RakDCPinReissueFinalSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKCCDCPinReissueModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RAKCCDCPinReissueModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RAKCCDCPinReissueModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueSuccessPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCCDCPinReissueConfirmPage"
			}
		},{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakCCDCPinReissueConfirmPage"
				},
				"errorPage": {
					"pageName": "RakCCDCPinReissueConfirmPage"
				}
			}],
		"RakCCDCPinReissueSuccessPage": [{
			"eventName": "onRAKCCDCPinReissueSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvOpenAccountSRInit": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenAccSR.invAmtNum",
				"rakServiceReq.RakInvOpenAccSR.selectedAcc",
				"rakServiceReq.RakInvOpenAccSR.acceptTermsCheck",
				"rakServiceReq.RakInvOpenAccSR.invAmtCurr"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvOpenDetails",
			"action": "RakOpenInvAccountSRDetails",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenAccSR.selectedAcc",
				"rakServiceReq.RakInvOpenAccSR.invAmtCurr",
				"rakServiceReq.RakInvOpenAccSR.invAmtNum"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"INV_AMT": "rakServiceReq.RakInvOpenAccSR.invAmt",
				"REF_ACC": "rakServiceReq.RakInvOpenAccSR.selectedAcc",
				"INV_AMT_CURR": "rakServiceReq.RakInvOpenAccSR.invAmtCurr"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRInit"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvOpenAccountSRMCQ": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenAccSR.mcq1",
				"rakServiceReq.RakInvOpenAccSR.mcq2",
				"rakServiceReq.RakInvOpenAccSR.mcq3"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ2"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvOpenAccountSRMCQ2": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenAccSR.mcq5",
				"rakServiceReq.RakInvOpenAccSR.mcq6",
				"rakServiceReq.RakInvOpenAccSR.mcq7"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ3"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvOpenAccountSRMCQ3": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakInvOpenAccSR.mcq8"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ4"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ2"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvOpenAccountSRMCQ4": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakInvOpenAccSR.mcq9"
			],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRKYC"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ3"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakInvOpenAccountSRKYC": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "RakOpenInvAccountSRConfirm",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenAccSR.kyc1",
				"rakServiceReq.RakInvOpenAccSR.kyc2",
				"rakServiceReq.RakInvOpenAccSR.kyc3",
				"rakServiceReq.RakInvOpenAccSR.kyc4",
				"rakServiceReq.RakInvOpenAccSR.kyc5"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",				
				"INV_AMT": "rakServiceReq.RakInvOpenAccSR.invAmt",				
				"REF_ACC": "rakServiceReq.RakInvOpenAccSR.selectedAcc",
				"INV_AMT_CURR": "rakServiceReq.RakInvOpenAccSR.invAmtCurr",
				"MCQ1": "rakServiceReq.RakInvOpenAccSR.mcq1",
				"MCQ2": "rakServiceReq.RakInvOpenAccSR.mcq2",
				"MCQ3": "rakServiceReq.RakInvOpenAccSR.mcq3",
				"MCQ5": "rakServiceReq.RakInvOpenAccSR.mcq5",
				"MCQ6": "rakServiceReq.RakInvOpenAccSR.mcq6",
				"MCQ7": "rakServiceReq.RakInvOpenAccSR.mcq7",
				"MCQ8": "rakServiceReq.RakInvOpenAccSR.mcq8",
				"MCQ9": "rakServiceReq.RakInvOpenAccSR.mcq9",
				"KYC1": "rakServiceReq.RakInvOpenAccSR.kyc1",
				"KYC2": "rakServiceReq.RakInvOpenAccSR.kyc2",
				"KYC3": "rakServiceReq.RakInvOpenAccSR.kyc3",
				"KYC4": "rakServiceReq.RakInvOpenAccSR.kyc4",
				"KYC5": "rakServiceReq.RakInvOpenAccSR.kyc5",
				"TERM": "rakServiceReq.RakInvOpenAccSR.acceptTermsCheck"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRKYC"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ3"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRMCQ3"
			}
		}],
		"RakInvOpenAccountSRConfirm": [{
			"eventName": "onRAKInvOpenContClick",
			"action": "RakOpenInvAccountSRSuccess",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakInvOpenAccSR.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakInvOpenAccSR.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"INV_AMT": "rakServiceReq.RakInvOpenAccSR.invAmt",
				"Mode": "rakServiceReq.RakInvOpenAccSR.txnPwd.toString()",
				"REF_ACC": "rakServiceReq.RakInvOpenAccSR.selectedAcc",
				"INV_AMT_CURR": "rakServiceReq.RakInvOpenAccSR.invAmtCurr",
				"MCQ1": "rakServiceReq.RakInvOpenAccSR.mcq1",
				"MCQ2": "rakServiceReq.RakInvOpenAccSR.mcq2",
				"MCQ3": "rakServiceReq.RakInvOpenAccSR.mcq3",
				"MCQ5": "rakServiceReq.RakInvOpenAccSR.mcq5",
				"MCQ6": "rakServiceReq.RakInvOpenAccSR.mcq6",
				"MCQ7": "rakServiceReq.RakInvOpenAccSR.mcq7",
				"MCQ8": "rakServiceReq.RakInvOpenAccSR.mcq8",
				"MCQ9": "rakServiceReq.RakInvOpenAccSR.mcq9",
				"KYC1": "rakServiceReq.RakInvOpenAccSR.kyc1",
				"KYC2": "rakServiceReq.RakInvOpenAccSR.kyc2",
				"KYC3": "rakServiceReq.RakInvOpenAccSR.kyc3",
				"KYC4": "rakServiceReq.RakInvOpenAccSR.kyc4",
				"KYC5": "rakServiceReq.RakInvOpenAccSR.kyc5",
				"TERM": "rakServiceReq.RakInvOpenAccSR.acceptTermsCheck"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRConfirm"
			}
		}, {
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvOpenAccountSRKYC"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakInvOpenAccountSRConfirm"
				},
				"errorPage": {
					"pageName": "RakInvOpenAccountSRConfirm"
				}
			}],
		"RakInvOpenAccountSRSuccess": [{
			"eventName": "onRAKInvOpenBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKCCCashBkRedemInit": [{
			"eventName": "onRakCCCashBkRedemInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakCCCashBkRedemCCDetailsFetch",
			"action": "RakCCCashBkRedemCCDetailsFetchService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCCashBkRedemModel.selectedCreditCard"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.RakCCCashBkRedemModel.selectedCreditCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemInit"
			}
		}, {
			"eventName": "onRakCCCashBkRedemContinueClick",
			"action": "RakCCCashBkRedemConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCCashBkRedemModel.selectedCreditCard",
				"rakServiceReq.RakCCCashBkRedemModel.userEnteredRedeemAmount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT": "rakServiceReq.RakCCCashBkRedemModel.selectedCreditCard",
				"CARD_TYPE": "rakServiceReq.RakCCCashBkRedemModel.cardType",
				"CASH_BACK_AVAILABLE": "rakServiceReq.RakCCCashBkRedemModel.cashBackAvailableAmt",
				"REDEEM_AMOUNT": "rakServiceReq.RakCCCashBkRedemModel.userEnteredRedeemAmount.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemInit"
			}
		}],
		"RAKCCCashBkRedemConfirm": [{
			"eventName": "onRAKCCCashBkRedemConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemConfirm"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RAKCCCashBkRedemConfirm"
			},
			"errorPage": {
				"pageName": "RAKCCCashBkRedemConfirm"
			}
		}, {
			"eventName": "onRAKCCCashBkRedemSubmitToHOSTClick",
			"action": "RAKCCCashBkRedemSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCCashBkRedemModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakCCCashBkRedemModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakCCCashBkRedemModel.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCCashBkRedemConfirm"
			}
		}],
		"RAKCCCashBkRedemSuccess": [{
			"eventName": "onRAKCCCashBkRedemSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakStopChequeRequestInit": [{
				"eventName": "onSelectForTransactionDateinCheque",
				"action": "RakStopChequeRequestChqBkSummService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
					"rakServiceReq.stopChequeReq.operativeIndex",
					"rakServiceReq.stopChequeReq.tranStartDate",
					"rakServiceReq.stopChequeReq.tranEndDate"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"ACCOUNT_ID_SENT_INDEX": "rakServiceReq.stopChequeReq.operativeIndex",
					"TXN_FROM_DATE_day": "rakServiceReq.stopChequeReq.tranStartDay",
					"TXN_FROM_DATE_month": "rakServiceReq.stopChequeReq.tranStartMonth",
					"TXN_FROM_DATE_year": "rakServiceReq.stopChequeReq.tranStartYear",
					"TXN_TO_DATE_day": "rakServiceReq.stopChequeReq.tranEndDay",
					"TXN_TO_DATE_month": "rakServiceReq.stopChequeReq.tranEndMonth",
					"TXN_TO_DATE_year": "rakServiceReq.stopChequeReq.tranEndYear"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakStopChequeRequestInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakStopChequeRequestInit"
				}
			},

			{
				"eventName": "onSelectedChqBookClick",
				"action": "RakStopChequeRequestChqStatusService",
				"actionType": "service",

				"validation": "false",

				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"acc1": "rakServiceReq.stopChequeReq.selChqBkSent"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakStopChequeRequestChqStatus"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakStopChequeRequestInit"
				}
			},

			{
				"eventName": "onstopChequeReqInitBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}
		],
		"RakStopChequeRequestChqStatus": [{
			"eventName": "onSelectForConfirmChqStatus",
			"action": "RakStopChequeRequestConfirmService",
			"actionType": "service",
			"validation": "false",

			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CHECK_NUMBER_LIST": "rakServiceReq.stopChequeReq.chqNumsSend",
				"FIRST_CHEQUE": "rakServiceReq.stopChequeReq.firstChequeSent",
				"LAST_CHEQUE": "rakServiceReq.stopChequeReq.lastChequeSent",
				"NO_OF_LEAVES": "rakServiceReq.stopChequeReq.noOfLeaves",
				"FIRST_CHEQUE_BOOK_NUM": "rakServiceReq.stopChequeReq.firstChequeOfChqBook"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakStopChequeRequestConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakStopChequeRequestChqStatus"
			}
		}, {
			"eventName": "onstopChequeReqStatusBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakStopChequeRequestInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakStopChequeRequestConfirm": [{
			"eventName": "onstopChequeReqConfirmClick",
			"action": "RakStopChequeRequestSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.stopChequeReq.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.stopChequeReq.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.stopChequeReq.transactionPassword",

				"CHECK_NUMBER_LIST": "rakServiceReq.stopChequeReq.chqNumsSend",
				"FIRST_CHEQUE": "rakServiceReq.stopChequeReq.firstChequeSent",
				"LAST_CHEQUE": "rakServiceReq.stopChequeReq.lastChequeSent",
				"NO_OF_LEAVES": "rakServiceReq.stopChequeReq.noOfLeaves",
				"FIRST_CHEQUE_BOOK_NUM": "rakServiceReq.stopChequeReq.firstChequeOfChqBook"


			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakStopChequeRequestSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakStopChequeRequestConfirm"
			}
		}, {
			"eventName": "onstopChequeReqConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakStopChequeRequestChqStatus"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},
		{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakStopChequeRequestConfirm"
			},
			"errorPage": {
				"pageName": "RakStopChequeRequestConfirm"
			}
		}],
		"RakStopChequeRequestSuccess": [{
			"eventName": "onstopChequeReqDoneClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKCCPinSetSRInit": [{
			"eventName": "onRAKCCPinSetContClick",
			"action": "RakCCPinSetConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakCCPinSetSR.selectedAcc",
				"rakServiceReq.RakCCPinSetSR.numPin",
				"rakServiceReq.RakCCPinSetSR.numConfirmPin"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CC_NO": "rakServiceReq.RakCCPinSetSR.selectedAcc",
				"PIN": "rakServiceReq.RakCCPinSetSR.pin",
				"CONFIRMPIN": "rakServiceReq.RakCCPinSetSR.confirmedPin"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCPinSetSRConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKCCPinSetBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKCCPinSetSRConfirm": [{
			"eventName": "onRAKCCPinSetContClick",
			"action": "RakCCPinSetSuccessService",
			"actionType": "service",
			"validation": "true",
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakCCPinSetSR.txnPwd"			
			],
			"validationParams": ["rakServiceReq.RakCCPinSetSR.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakCCPinSetSR.txnPwd",
				"CC_NO": "rakServiceReq.RakCCPinSetSR.selectedAcc",
				"PIN": "rakServiceReq.RakCCPinSetSR.pin",
				"CONFIRMPIN": "rakServiceReq.RakCCPinSetSR.confirmedPin"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCPinSetSRSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCPinSetSRConfirm"
			}
		}, {
			"eventName": "onRAKCCPinSetBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKCCPinSetSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},
		{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKCCPinSetSRConfirm"
			},
			"errorPage": {
				"pageName": "RAKCCPinSetSRConfirm"
			}
		}],
		"RAKCCPinSetSRSuccess": [{
			"eventName": "onRAKCCPinSetBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakTransactionLimitChangeInit": [{
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakTxnLimitChangeContinueClick",
			"action": "RakTransactionLimitChangeConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.transactionLimitChangeRq.sameCurrencyTransferLimit"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TERMS_FLAG": "rakServiceReq.acceptTermscondition",
				"SAME_CURTRF_LIMIT": "rakServiceReq.transactionLimitChangeRq.sameCurrencyTransferLimit.toString()",
				"CROSS_CURTRF_LIMIT": "rakServiceReq.transactionLimitChangeRq.crossCurrencyTransferLimit.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTransactionLimitChangePreview"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTransactionLimitChangeInit"
			}
		}],
		"RakTransactionLimitChangePreview": [{
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTransactionLimitChangeInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTransactionLimitChangePreview"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "RakTransactionLimitChangePreview"
			},
			"errorPage": {
				"pageName": "RakTransactionLimitChangePreview"
			}
		}, {
			"eventName": "onRakTransactionLimitSubmitClick",
			"action": "RakTransactionLimitChangeSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.transactionLimitChangeRq.firstAuthModeValue",
				"rakServiceReq.transactionLimitChangeRq.secAuthModeValue"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.transactionLimitChangeRq.firstAuthModeValue",
				"rakServiceReq.transactionLimitChangeRq.secAuthModeValue"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.transactionLimitChangeRq.firstAuthModeValue",
				"SecMode": "rakServiceReq.transactionLimitChangeRq.secAuthModeValue"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTransactionLimitChangeSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakTransactionLimitChangePreview"
			}
		}],
		"RakTransactionLimitChangeSuccess": [{
			"eventName": "onRakServiceHomeClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RAKKYCRenInit": [{
			"eventName": "onRakKYCRenInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakKYCRenConfirmClick",
			"action": "RakKYCRenConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakKYCRenModel.totMonthlyCrCash",
				"rakServiceReq.RakKYCRenModel.totMonthlyCrNonCash",
				"rakServiceReq.RakKYCRenModel.maxAmtExpctdCash",
				"rakServiceReq.RakKYCRenModel.maxAmtExpctdNonCash"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"TMCC_CASH": "rakServiceReq.RakKYCRenModel.totMonthlyCrCash.toString()",
				"TMCC_NON_CASH": "rakServiceReq.RakKYCRenModel.totMonthlyCrNonCash.toString()",
				"MAX_AMT_CASH": "rakServiceReq.RakKYCRenModel.maxAmtExpctdCash.toString()",
				"MAX_AMT_NON_CASH": "rakServiceReq.RakKYCRenModel.maxAmtExpctdNonCash.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKKYCRenConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKKYCRenInit"
			}
		}],
		"RAKKYCRenConfirm": [{
			"eventName": "onRakKYCRenConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKKYCRenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKKYCRenConfirm"
			}
		}, {
			"eventName": "onRakKYCRenConfirmFinalSubmitClick",
			"action": "RakKYCRenSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakKYCRenModel.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakKYCRenModel.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakKYCRenModel.txnPwd.toString()"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKKYCRenSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKKYCRenConfirm"
			}
		}],
		"RAKKYCRenSuccess": [{
			"eventName": "onRAKKYCRenSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakInvestmentRedemptionSRInit": [{
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakGetInvestmentDetailsClick",
			"action": "RakInvestmentRedemptionSRRetriveDetailsService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.investmentRedemptionRq.investmentId"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"ACCOUNT_IDX": "rakServiceReq.investmentRedemptionRq.investmentId",
				"ACCOUNT_TYPE": "rakServiceReq.investmentRedemptionRq.invAccountType",
				"MAIN_ACCOUNT_TYPE": "rakServiceReq.investmentRedemptionRq.invMainAcctType"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRInit"
			}
		}, {
			"eventName": "onRakInvestmentRedemptionContinueClick",
			"action": "RakInvestmentRedemptionSRConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.investmentRedemptionRq.investmentId",
				"rakServiceReq.investmentRedemptionRq.nameOfInvestment",
				"rakServiceReq.investmentRedemptionRq.oprAcctId",
				"rakServiceReq.investmentRedemptionRq.partNominalAmount",
				"rakServiceReq.investmentRedemptionRq.partialUnits"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"INV_ID": "rakServiceReq.investmentRedemptionRq.investmentId",
				"INV_NAME": "rakServiceReq.investmentRedemptionRq.investmentProductTypeCode",
				"INV_AMT_CURR": "rakServiceReq.investmentRedemptionRq.allNominalCurrency",
				"INV_AMT": "rakServiceReq.investmentRedemptionRq.amount",
				"INV_ALLNOMAMT": "rakServiceReq.investmentRedemptionRq.allNominalAmount",
				"INV_PARTNOMAMT": "rakServiceReq.investmentRedemptionRq.partNominalAmount.toString()",
				"INV_NOOFUNITS": "rakServiceReq.investmentRedemptionRq.noOfUnits",
				"INV_ALLUNITS": "rakServiceReq.investmentRedemptionRq.allUnits",
				"INV_PARTUNITS": "rakServiceReq.investmentRedemptionRq.partialUnits.toString()",
				"INV_CRED_ACCOUNT": "rakServiceReq.investmentRedemptionRq.oprAcctId"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRPreview"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRInit"
			}
		}],
		"RakInvestmentRedemptionSRPreview": [{
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRPreview"
			}
		},               {
                     "eventName": "onGenerateOtp",
                     "action": "RakResendOtpService",
                     "actionType": "serviceNoNavigation",
                     "validation": "false",
                     "parameters": {
                           "jsessionid": "fields.finacleUserSessionId",
                           "mbparam": "fields.finacleMbParam",
                           "OTP_MODE":"rakHome.otpModel.otpModeSelected"

                     },
                     "successPage": {
                           "pageName": "RakInvestmentRedemptionSRPreview"
                     },
                     "errorPage": {
                           "pageName": "RakInvestmentRedemptionSRPreview"
                     }
              }, 
{
			"eventName": "onRakInvestmentRedemptionSRSubmitClick",
			"action": "RakInvestmentRedemptionSRSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.investmentRedemptionRq.firstAuthModeValue",
				"rakServiceReq.investmentRedemptionRq.secAuthModeValue"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.investmentRedemptionRq.firstAuthModeValue",
				"rakServiceReq.investmentRedemptionRq.secAuthModeValue"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.investmentRedemptionRq.firstAuthModeValue",
				"SecMode": "rakServiceReq.investmentRedemptionRq.secAuthModeValue"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakInvestmentRedemptionSRPreview"
			}
		}],
		"RakInvestmentRedemptionSRSuccess": [{
			"eventName": "onRakServiceHomeClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],

		"RakDiscAndapplyInit": [{
			"eventName": "onDiscApplySubMenuClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyNowScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}],

		"RakDiscAndapplyNowScreen": [{
			"eventName": "onRAKDiscApplyBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onDiscApplyApplyNowBtnClick",
			"action": "RakDCApplyFetchDetailsService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsCaptureScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onRakDCApplyInitClick",
			"action": "RakDCApplyInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDCApplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onApplyForPrepaidCardClick",
			"action": "RakApplyForPrepaidCardService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakApplyForPrepaidCard"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		},
		{
				"eventName": "onRakIslamicOpenNewTermDepositClick",
				"action": "RakIslamicDepOpenNewTermDepositInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakIslamicDepositOpenNewTermSRInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}
			},
		
		 {
			"eventName": "onRakOpenNewTermDepositClick",
			"action": "RakDepOpenNewTermDepositInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDepositOpenNewTermSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onRAKOprCurrentAcctOpenLinkClick",
			"action": "RAKOprCurrentAcctOpenInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprCurrentAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onRAKOprSavingAcctOpenLinkClick",
			"action": "RAKOprSavingAcctOpenInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprSavingAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onRAKOprFSAcctOpenLinkClick",
			"action": "RAKOprFSAcctOpenInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprFSAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onRAKOprEvantageAcctOpenLinkClick",
			"action": "RAKOprEvantageAcctOpenInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprEvantageAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}, {
			"eventName": "onRAKOprCurrentAcctOpenLinkClick",
			"action": "RAKOprCurrentAcctOpenInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprCurrentAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprCurrentAcctOpenInit"
			}
		}, {
			"eventName": "onRAKOprIslamicAcctOpenLinkClick",
			"action": "RAKOprIslamicAcctOpenInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprIslamicAcctOpenInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKOprIslamicAcctOpenInit"
			}
		},
		{
				"eventName": "onRAKInvOpenGoldAccInitClick",
				"action": "RAKInvOpenGoldAccInitService",
				"actionType": "service",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"

				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RAKInvOpenGoldAccInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDiscAndapplyInit"
				}
			},
			
			{
                    "eventName": "onRakValuationHomeClick",
                    "action": "RakValuationUpgradeHomeAccountsFetchService",
                    "actionType": "service",
                    "validation": "false",
                      "parameters": {
                        "jsessionid": "fields.finacleUserSessionId",
                        "mbparam": "fields.finacleMbParam"
                      
                    },
                    "successPage": {
                     	"subFeature": "rakAccounts",
                        "pageName": "RakValuationLandingPage"
                    },
                    "errorPage": {
                        "subFeature": "rakAccounts",
                        "pageName": "RakValuationLandingPage"
                    }
                }
		
		],

		"RakDiscAndapplyDetailsCaptureScreen": [{
			"eventName": "onRakDiscApplyDetailsBackBtnClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyNowScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsCaptureScreen"
			}
		}, {
			"eventName": "onRakDiscApplyDetailsContinue",
			"action": "RakDiscApplyDetailsContinue",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakDiscApply.name",
				"rakServiceReq.RakDiscApply.mobileNo",
				"rakServiceReq.RakDiscApply.email",
				"rakServiceReq.RakDiscApply.selectedProd"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"name": "rakServiceReq.RakDiscApply.name",
				"mobileNo": "rakServiceReq.RakDiscApply.mobileNo.toString()",
				"email": "rakServiceReq.RakDiscApply.email",
				"selectedProd": "rakServiceReq.RakDiscApply.selectedProd",
				"selectedProdId": "rakServiceReq.RakDiscApply.selectedProdId",
				"selectedProdCatg": "rakServiceReq.RakDiscApply.selectedProdCatg",
				"remarks": "rakServiceReq.RakDiscApply.remarks"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsConfirmScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsCaptureScreen"
			}
		}],

		"RakDiscAndapplyDetailsConfirmScreen": [{
			"eventName": "onRakDiscApplyDetailsSubmit",
			"action": "RakDiscApplyDetailsSubmit",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				"rakServiceReq.RakDiscApply.otp"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakDiscApply.otp"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakDiscApply.otp"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplySuccessScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsConfirmScreen"
			}
		}, {
			"eventName": "onRakDiscApplyDetailsBackBtnClicked",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsCaptureScreen"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyDetailsCaptureScreen"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakDiscAndapplyDetailsConfirmScreen"
			},
			"errorPage": {
				"pageName": "RakDiscAndapplyDetailsConfirmScreen"
			}
		}],

		"RakDiscAndapplySuccessScreen": [{
			"eventName": "onRakDiscApplyDetailsHomeBtnClicked",
			"action": "RakDiscAndapplyInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDiscAndapplyInit"
			}
		}],
		"RakCreditCardSmartCashSRInit": [{
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRakCcSmartCashGetCCdetailsClick",
			"action": "RakCreditCardSmartCashSRGetCCdetailsService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ccSmartCashRq.ccAccountId"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"CREDIT_ACCOUNT_ID": "rakServiceReq.ccSmartCashRq.ccAccountId"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRInit"
			}
		}, {
			"eventName": "onRakCcSmartCashContinueClick",
			"action": "RakCreditCardSmartCashSRConfirmService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ccSmartCashRq.ccAccountId",
				"rakServiceReq.ccSmartCashRq.transferCashTo",
				"rakServiceReq.ccSmartCashRq.oprAcctId",
				"rakServiceReq.ccSmartCashRq.iban",
				"rakServiceReq.ccSmartCashRq.smartCashAmount"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SCCARDNUMBER": "rakServiceReq.ccSmartCashRq.ccAccountId",
				"SCAVLCREDLIMIT": "rakServiceReq.ccSmartCashRq.avlCredLimit",
				"SCCARDEXPDATE": "rakServiceReq.ccSmartCashRq.cardExpDate",
				"SCTRANCASHTO": "rakServiceReq.ccSmartCashRq.transferCashTo",
				"SCACCID": "rakServiceReq.ccSmartCashRq.oprAcctId",
				"SCIBAN": "rakServiceReq.ccSmartCashRq.iban",
				"SCSMARTCASH": "rakServiceReq.ccSmartCashRq.smartCashAmount.toString()",
				"SCCARDCRNNUMBER": "rakServiceReq.ccSmartCashRq.cardCrnNumber"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRPreview"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRInit"
			}
		}],
		"RakCreditCardSmartCashSRPreview": [
		  {
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRPreview"
			}
		 },
		 {
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
                    "OTP_MODE":"rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakCreditCardSmartCashSRPreview"
				},
				"errorPage": {
					"pageName": "RakCreditCardSmartCashSRPreview"
				}
			},
			{
			"eventName": "onRakCcSmartCashSRSubmitClick",
			"action": "RakCreditCardSmartCashSRSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.ccSmartCashRq.firstAuthModeValue",
				"rakServiceReq.ccSmartCashRq.secAuthModeValue"
			],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.ccSmartCashRq.firstAuthModeValue",
				"rakServiceReq.ccSmartCashRq.secAuthModeValue"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.ccSmartCashRq.firstAuthModeValue",
				"SecMode": "rakServiceReq.ccSmartCashRq.secAuthModeValue"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakCreditCardSmartCashSRPreview"
			}
		}],
		"RakCreditCardSmartCashSRSuccess": [{
			"eventName": "onRakServiceHomeClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		 "RAKConnectInit": [
		 {
			"eventName": "onRAKConnectInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		  },
		  {
			"eventName": "onRAKConnectAddNewAlertClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectAddNewAlert"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			}
		  },
		  {
			"eventName": "onRAKConnectEditClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditAlert"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			}
		  },
		  {
			"eventName": "onRAKConnectManageExistingClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			}
		  },
		  {
			"eventName": "onRAKConnectAlertsSubmitClick",
			"action": "RAKConnectAlertsSubmitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FINAL_ALERTID":"rakServiceReq.RAKConnectModel.finalAlertID2Send",
				"FINAL_ALERTID_TYPE":"rakServiceReq.RAKConnectModel.finalAlertID2SendType",
				"FINAL_ALERTID_DESC":"rakServiceReq.RAKConnectModel.finalAlertIDDesc2Send",
				"FINAL_ALERT_CODE":"rakServiceReq.RAKConnectModel.finalAlertCode2Send",
				"FINAL_ACCOUNTID":"rakServiceReq.RAKConnectModel.finalAccountID2Send",
				"FINAL_ALERTFREQ":"rakServiceReq.RAKConnectModel.finalAlertFreq2Send",
				"FINAL_DAY":"rakServiceReq.RAKConnectModel.finalDay2Send",
				"FINAL_MONDAY":"rakServiceReq.RAKConnectModel.finalMonday2Send",
				"FINAL_TUESDAY":"rakServiceReq.RAKConnectModel.finalTuesday2Send",
				"FINAL_WEDNESDAY":"rakServiceReq.RAKConnectModel.finalWednesday2Send",
				"FINAL_THURSDAY":"rakServiceReq.RAKConnectModel.finalThursday2Send",
				"FINAL_FRIDAY":"rakServiceReq.RAKConnectModel.finalFriday2Send",
				"FINAL_SATURDAY":"rakServiceReq.RAKConnectModel.finalSaturday2Send",
				"FINAL_SUNDAY":"rakServiceReq.RAKConnectModel.finalSunday2Send",
				"FINAL_REMARKS":"rakServiceReq.RAKConnectModel.finalRemarks2Send",
				"FINAL_REMOVE":"rakServiceReq.RAKConnectModel.finalRemove2Send",
				"FINAL_DBTS":"rakServiceReq.RAKConnectModel.finalDbts2Send",
				"FINAL_HOSTID":"rakServiceReq.RAKConnectModel.finalHostId2Send",
				"FINAL_DCID":"rakServiceReq.RAKConnectModel.finalDcId2Send",
				"FINAL_LANGID":"rakServiceReq.RAKConnectModel.finalLangId2Send",
				"FINAL_CHANNELINFOSTR":"rakServiceReq.RAKConnectModel.finalChannelInfoString2Send",
				"FINAL_INPUTPARAMSTR":"rakServiceReq.RAKConnectModel.finalInputParamString2Send"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			}
		  },
		  {
			"eventName": "onRAKConnectNewAlertsDelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInitDuplicate"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			}
		  }
		 ],
		 "RAKConnectInitDuplicate": [
		 {
			"eventName": "onRAKConnectInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		  },
		  {
			"eventName": "onRAKConnectAddNewAlertClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectAddNewAlert"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInitDuplicate"
			}
		  },
		  {
			"eventName": "onRAKConnectEditClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditAlert"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInitDuplicate"
			}
		  },
		  {
			"eventName": "onRAKConnectManageExistingClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInitDuplicate"
			}
		  },
		  {
			"eventName": "onRAKConnectAlertsSubmitClick",
			"action": "RAKConnectAlertsSubmitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FINAL_ALERTID":"rakServiceReq.RAKConnectModel.finalAlertID2Send",
				"FINAL_ALERTID_TYPE":"rakServiceReq.RAKConnectModel.finalAlertID2SendType",
				"FINAL_ALERTID_DESC":"rakServiceReq.RAKConnectModel.finalAlertIDDesc2Send",
				"FINAL_ALERT_CODE":"rakServiceReq.RAKConnectModel.finalAlertCode2Send",
				"FINAL_ACCOUNTID":"rakServiceReq.RAKConnectModel.finalAccountID2Send",
				"FINAL_ALERTFREQ":"rakServiceReq.RAKConnectModel.finalAlertFreq2Send",
				"FINAL_DAY":"rakServiceReq.RAKConnectModel.finalDay2Send",
				"FINAL_MONDAY":"rakServiceReq.RAKConnectModel.finalMonday2Send",
				"FINAL_TUESDAY":"rakServiceReq.RAKConnectModel.finalTuesday2Send",
				"FINAL_WEDNESDAY":"rakServiceReq.RAKConnectModel.finalWednesday2Send",
				"FINAL_THURSDAY":"rakServiceReq.RAKConnectModel.finalThursday2Send",
				"FINAL_FRIDAY":"rakServiceReq.RAKConnectModel.finalFriday2Send",
				"FINAL_SATURDAY":"rakServiceReq.RAKConnectModel.finalSaturday2Send",
				"FINAL_SUNDAY":"rakServiceReq.RAKConnectModel.finalSunday2Send",
				"FINAL_REMARKS":"rakServiceReq.RAKConnectModel.finalRemarks2Send",
				"FINAL_REMOVE":"rakServiceReq.RAKConnectModel.finalRemove2Send",
				"FINAL_DBTS":"rakServiceReq.RAKConnectModel.finalDbts2Send",
				"FINAL_HOSTID":"rakServiceReq.RAKConnectModel.finalHostId2Send",
				"FINAL_DCID":"rakServiceReq.RAKConnectModel.finalDcId2Send",
				"FINAL_LANGID":"rakServiceReq.RAKConnectModel.finalLangId2Send",
				"FINAL_CHANNELINFOSTR":"rakServiceReq.RAKConnectModel.finalChannelInfoString2Send",
				"FINAL_INPUTPARAMSTR":"rakServiceReq.RAKConnectModel.finalInputParamString2Send"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInitDuplicate"
			}
		  },
		  {
			"eventName": "onRAKConnectNewAlertsDelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInitDuplicate"
			}
		  }
		 ],
		 "RAKConnectAddNewAlert": [
		 {
			"eventName": "onRAKConnectAddNewAlertBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectAddNewAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectAddNewAlertSaveClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKConnectModel.selectedAlertType",
			"rakServiceReq.RAKConnectModel.selectedAccNum",
			"rakServiceReq.RAKConnectModel.selectedCCNum",
			"rakServiceReq.RAKConnectModel.selectedFreq",
			"rakServiceReq.RAKConnectModel.selectedDom",
			"rakServiceReq.RAKConnectModel.dowArray"],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectAddNewAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectManageExistingClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectAddNewAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectNoAccOrCcPresentForAlertCheck",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			}
		  }
		 ],
		 "RAKConnectEditAlert": [
		 {
			"eventName": "onRAKConnectEditAlertBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectEditAlertSaveClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKConnectModel.selectedFreq",
			"rakServiceReq.RAKConnectModel.selectedDom",
			"rakServiceReq.RAKConnectModel.dowArray"],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectManageExistingClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectEditAlertDelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditAlert"
			}
		  }
		 ],
		 "RAKConnectManageExisting": [
		 {
			"eventName": "onRAKConnectManageExistingBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		  },
		  {
			"eventName": "onRAKConnectSetupNewAlertsClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			}
		  },
		  {
			"eventName": "onRAKConnectAlertsSubmitClick",
			"action": "RAKConnectAlertsSubmitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"FINAL_ALERTID":"rakServiceReq.RAKConnectModel.finalAlertID2Send",
				"FINAL_ALERTID_TYPE":"rakServiceReq.RAKConnectModel.finalAlertID2SendType",
				"FINAL_ALERTID_DESC":"rakServiceReq.RAKConnectModel.finalAlertIDDesc2Send",
				"FINAL_ALERT_CODE":"rakServiceReq.RAKConnectModel.finalAlertCode2Send",
				"FINAL_ACCOUNTID":"rakServiceReq.RAKConnectModel.finalAccountID2Send",
				"FINAL_ALERTFREQ":"rakServiceReq.RAKConnectModel.finalAlertFreq2Send",
				"FINAL_DAY":"rakServiceReq.RAKConnectModel.finalDay2Send",
				"FINAL_MONDAY":"rakServiceReq.RAKConnectModel.finalMonday2Send",
				"FINAL_TUESDAY":"rakServiceReq.RAKConnectModel.finalTuesday2Send",
				"FINAL_WEDNESDAY":"rakServiceReq.RAKConnectModel.finalWednesday2Send",
				"FINAL_THURSDAY":"rakServiceReq.RAKConnectModel.finalThursday2Send",
				"FINAL_FRIDAY":"rakServiceReq.RAKConnectModel.finalFriday2Send",
				"FINAL_SATURDAY":"rakServiceReq.RAKConnectModel.finalSaturday2Send",
				"FINAL_SUNDAY":"rakServiceReq.RAKConnectModel.finalSunday2Send",
				"FINAL_REMARKS":"rakServiceReq.RAKConnectModel.finalRemarks2Send",
				"FINAL_REMOVE":"rakServiceReq.RAKConnectModel.finalRemove2Send",
				"FINAL_DBTS":"rakServiceReq.RAKConnectModel.finalDbts2Send",
				"FINAL_HOSTID":"rakServiceReq.RAKConnectModel.finalHostId2Send",
				"FINAL_DCID":"rakServiceReq.RAKConnectModel.finalDcId2Send",
				"FINAL_LANGID":"rakServiceReq.RAKConnectModel.finalLangId2Send",
				"FINAL_CHANNELINFOSTR":"rakServiceReq.RAKConnectModel.finalChannelInfoString2Send",
				"FINAL_INPUTPARAMSTR":"rakServiceReq.RAKConnectModel.finalInputParamString2Send"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			}
		  },
		  {
			"eventName": "onRAKConnectCustomAlertEditClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditCustomAlert"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			}
		  }
		 ],
		 "RAKConnectEditCustomAlert": [
		 {
			"eventName": "onRAKConnectEditCustomAlertBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditCustomAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectEditCustomAlertModifyClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "true",
			"validationParams": ["rakServiceReq.RAKConnectModel.selectedSubAlertFreqDesc",
			"rakServiceReq.RAKConnectModel.selectedSubDay",
			"rakServiceReq.RAKConnectModel.dowArrayCustom"],
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditCustomAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectEditCustomAlertDelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectManageExisting"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditCustomAlert"
			}
		  },
		  {
			"eventName": "onRAKConnectSetupNewAlertsClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKConnectEditCustomAlert"
			}
		  }
		 ],
		 "RAKConnectSuccess": [
		 {
			"eventName": "onRAKConnectSuccessHomeClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		  }
		 ],
		 
		 "RakTLUploadInit": [
		 
		  {
				"eventName": "onDismissClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				}
			},
		 
		  {
				"eventName": "onSettingsBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
						"subFeature": "rakMyProfile",
					"pageName": "RakViewPersonalProfile"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				}
			},
		 {
				"eventName": "onBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, {
				"eventName": "onTLUploadContinueClick",
				"action": "RakTLUploadContinueClickService",
				"actionType": "service",
				"validation": "false",
			
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadPreview"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				}
		}],
		 "RakTLUploadPreview": [{
				"eventName": "onBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadInit"
				}
			}, 
			
			{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakTLUploadPreview"
			},
			"errorPage": {
				"pageName": "RakTLUploadPreview"
			}
		},
			{	
				"eventName": "onTLUploadConfirmClick",
				"action": "RakTLUploadConfirmClickService",
				"actionType": "service",
					"validation": "true",
				"validationParams": ["rakServiceReq.TLUpload.transactionPassword"
										],
			
				"encryptionEnabled": true,
				"sensitiveFields": ["rakServiceReq.TLUpload.transactionPassword"],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"data":"rakMyProfile.userProfilePicTemp",
					"Mode": "rakServiceReq.TLUpload.transactionPassword"
				
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadSuccess"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakTLUploadPreview"
				}
		}],
		 "RakTLUploadSuccess": [{
				"eventName": "onDoneClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}],

		"RakTFLimitDetails": [{
			"eventName": "onRakTFLimitDetailsBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		
		"Rak2FADeRegInit_PreLogin": [
		{
			"eventName": "onRak2FADeRegInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegInit"
			}
		},
		{
			"eventName": "onRak2FADeRegContinueClick",
			"action": "Rak2FADeRegContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.Rak2FADeRegModel.selectedReason"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"STDRG_USERNAME": "rakServiceReq.Rak2FADeRegModel.userName",
				"STDRG_MOBNO": "rakServiceReq.Rak2FADeRegModel.mobNo",
				"STDRG_REASON": "rakServiceReq.Rak2FADeRegModel.selectedReason"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegInit"
			}
		}
		],

		"Rak2FADeRegInit": [
		{
			"eventName": "onRak2FADeRegInitBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegInit"
			}
		},
		{
			"eventName": "onRak2FADeRegContinueClick",
			"action": "Rak2FADeRegContinueService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.Rak2FADeRegModel.selectedReason"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"STDRG_USERNAME": "rakServiceReq.Rak2FADeRegModel.userName",
				"STDRG_MOBNO": "rakServiceReq.Rak2FADeRegModel.mobNo",
				"STDRG_REASON": "rakServiceReq.Rak2FADeRegModel.selectedReason"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegInit"
			}
		}
		],
		"Rak2FADeRegConfirm": [
		{
			"eventName": "onRak2FADeRegConfirmBackClick_PreLogin",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegInit_PreLogin"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegConfirm"
			}
		},
		{
			"eventName": "onRak2FADeRegConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegConfirm"
			}
		},
		{
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"OTP_MODE":"rakHome.otpModel.otpModeSelected"
			},
			"successPage": {
				"pageName": "Rak2FADeRegConfirm"
			},
			"errorPage": {
				"pageName": "Rak2FADeRegConfirm"
			}
		},
		{
			"eventName": "onRak2FADeRegSuccessClick",
			"action": "Rak2FADeRegSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakHome.AuthPageData.firstAuthModeValue"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakHome.AuthPageData.firstAuthModeValue"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakHome.AuthPageData.firstAuthModeValue"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "Rak2FADeRegConfirm"
			}
		}
		],
		"Rak2FADeRegSuccess": [
		{
         "eventName": "onDeRegisterRakTknClick",
         "action": "navigation",
         "actionType": "navigation",
         "validation": "false",
         "successPage": {
         	"subFeature": "RetailUserLogin",
		 	"pageName": "RetailUserLoginPage"
         },
         "errorPage": {
            "subFeature": "RetailUserLogin",
		 	"pageName": "RetailUserLoginPage"
         }
        },
		{
            "eventName": "onRetailClick",
            "action": "navigation",
            "actionType": "navigation",
            "validation": "false",
            "validationParams": [
               
            ],
            "successPage": {   
            	"subFeature": "RetailUserLogin",                     
                "pageName": "RetailUserLoginPage"
            },
            "errorPage": {
                "pageName": "RakRetailUserLoginPage"
            }
        },
		{
			"eventName": "onRak2FADeRegSuccessOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},
		{
			"eventName": "onRak2FADeRegSuccessOkClick_preLogin",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "RetailUserLogin",
				"pageName": "RakRetailUserLoginPage"
			},
			"errorPage": {
				"subFeature": "RetailUserLogin",
				"pageName": "RakRetailUserLoginPage"
			}
		}
		],
		
		
		"RAKBankRefLetterInit": [{
			"eventName": "onRAKOprAcctBalConfReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onRAKOprAcctBalConfReqConfirmClick",
			"action": "RAKBankRefLetterConfService",
			"actionType": "service",
			"validation": "true",
			"validationParams": [
				
				"rakServiceReq.rakBankRefLetter.addressdTo",
				"rakServiceReq.rakBankRefLetter.address",
				"rakServiceReq.rakBankRefLetter.selectedAcctNo",
				"rakServiceReq.rakBankRefLetter.selectedbranch",
				
								
				"rakServiceReq.rakBankRefLetter.emirateSeletected",
				"rakServiceReq.rakBankRefLetter.selectedForAcc"
			],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"debt_Acct": "rakServiceReq.rakBankRefLetter.selectedAcctNo",
			    "selectedBranch": "rakServiceReq.rakBankRefLetter.selectedbranch",
				"EMIRATE_ID": "rakServiceReq.rakBankRefLetter.emirateSeletected",				
				"langSelected": "rakServiceReq.rakBankRefLetter.selectedLang",
				"addressTo": "rakServiceReq.rakBankRefLetter.addressdTo",
				"address": "rakServiceReq.rakBankRefLetter.address",				
				"delMode": "rakServiceReq.rakBankRefLetter.selectedDelModeToServer",
				"notes": "rakServiceReq.rakBankRefLetter.notes",
				"selAcc":"rakServiceReq.rakBankRefLetter.selectedForAcc",
				"reqdBank":"rakServiceReq.rakBankRefLetter.reqdDetailsBankVal",
				"reqdIBAN":"rakServiceReq.rakBankRefLetter.reqdDetailsIBANVal",
				"reqdSwift":"rakServiceReq.rakBankRefLetter.reqdDetailsSwiftVal",
				"reqdCurr":"rakServiceReq.rakBankRefLetter.reqdDetailsCurrencyVal",
				"TERMS_FLAG":"rakServiceReq.acceptTermscondition"				
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKBankRefLetterConf"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKBankRefLetterInit"
			}
		}],
		"RAKBankRefLetterConf": [{
			"eventName": "onRAKOprAcctBalConfReqBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKBankRefLetterInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RAKBankRefLetterConf"
			},
			"errorPage": {
				"pageName": "RAKBankRefLetterConf"
			}
		}, {
			"eventName": "onRAKOprAcctBalConfReqSubmitClick",
			"action": "RAKBankRefLetterSuccessService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.rakBankRefLetter.txnPwd"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.rakBankRefLetter.txnPwd"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.rakBankRefLetter.txnPwd"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKBankRefLetterSuccess"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RAKBankRefLetterConf"
			}
		}],
		"RAKBankRefLetterSuccess": [{
			"eventName": "onRAKOprAcctBalConfReqOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
				
		"RakBusinessEliteSubscribeInst": [{
			"eventName": "onConfirmClick",
			"action": "RakBusinessEliteSubscribeConfirmService",
			"actionType": "service",			
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"			
						
			},							
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeInst"
			}
		},
		{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeContent"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeInst"
			}
		}
		],
		"RakBusinessEliteSubscribeConfirm": [{
			"eventName": "onRAKEliteConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeInst"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeInst"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"pageName": "RakBusinessEliteSubscribeConfirm"
			},
			"errorPage": {
				"pageName": "RakBusinessEliteSubscribeConfirm"
			}
		}, {
			"eventName": "onSuccessClick",
			"action": "RakBusinessEliteSubscribeSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakBusinessEliteSubscribe.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakBusinessEliteSubscribe.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakBusinessEliteSubscribe.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeConfirm"
			}
		},
		{
			"eventName": "onCancelClick",
			"action": "RAKBusinessEliteSubscribeInitService",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"				
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteSubscribeInst"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakBusinessEliteUnSubscribeConfirm": [{
			"eventName": "onRAKEliteConfirmBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}, {
			"eventName": "onGenerateOtp",
			"action": "RakResendOtpService",
			"actionType": "serviceNoNavigation",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
					"OTP_MODE":"rakHome.otpModel.otpModeSelected"

			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteUnSubscribeConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteUnSubscribeConfirm"
			}
		}, {
			"eventName": "onSuccessClick",
			"action": "RakBusinessEliteUnSubscribeSubmitService",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.RakBusinessEliteSubscribe.transactionPassword"],
			"encryptionEnabled": true,
			"sensitiveFields": ["rakServiceReq.RakBusinessEliteSubscribe.transactionPassword"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"Mode": "rakServiceReq.RakBusinessEliteSubscribe.transactionPassword"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteUnSubscribeSuccessful"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakBusinessEliteUnSubscribeConfirm"
			}
		},
		{
			"eventName": "onCancelClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakBusinessEliteSubscribeSuccessful": [{
			"eventName": "onSubScribeOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
		"RakSageRegister": [{
			"eventName": "onRegisterForSageClick",
			                    "action": "RakSageRegisterService",
			                    "actionType": "service",
			                    "validation": "false",
			                    "parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam"
				},
			                    
			                "successPage": {  
			                          "subFeature": "rakServiceReq",                 
			                        "pageName": "RakSageRegister"
			                    },
			                    "errorPage": {
			                        "subFeature": "rakServiceReq",
			                        "pageName": "RakSageRegister"
			                    }
                }  , 
                
                {
			"eventName": "onBackClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakSageRegister"
			}
		}],
		"RakBusinessEliteUnSubscribeSuccessful": [{
			"eventName": "onUnSubscribeOkClick",
			"action": "navigation",
			"actionType": "navigation",
			"validation": "false",
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		}],
			     "RakATMCashDepositeLimitChangeInit":[
			    {
				"eventName": "onBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				}
			}, 
			{
				"eventName": "onRakATMLimitChangeContinueClick",
				"action": "RakATMDepositeLimitChangeConfirmService",
				"actionType": "service",
				"validation": "true",
				"validationParams": [
				"rakServiceReq.ATMCashDepositeLimitChangeReq.selectedfromAccountNumber",
				"rakServiceReq.ATMCashDepositeLimitChangeReq.sameCurrencyTransferLimit"
				],
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"TERMS_FLAG": "rakServiceReq.ATMCashDepositeLimitChangeReq.acceptTermscondition",
					"SAME_CURTRF_LIMIT": "rakServiceReq.ATMCashDepositeLimitChangeReq.sameCurrencyTransferLimit.toString()",
					"ATM_FROM_ACC": "rakServiceReq.ATMCashDepositeLimitChangeReq.selectedfromAccountNumber",
					"REMARKS": "rakServiceReq.ATMCashDepositeLimitChangeReq.remarks"
				},
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakATMCashDepositeLimitChangePreview"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakATMCashDepositeLimitChangeInit"
				}
			}
		     ],
		     "RakATMCashDepositeLimitChangePreview": [{
					"eventName": "onBackClick",
					"action": "navigation",
					"actionType": "navigation",
					"validation": "false",
					"successPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakATMCashDepositeLimitChangeInit"
					},
					"errorPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakATMCashDepositeLimitChangePreview"
					}
				}, {
					"eventName": "onGenerateOtp",
					"action": "RakResendOtpService",
					"actionType": "serviceNoNavigation",
					"validation": "false",
					"parameters": {
						"jsessionid": "fields.finacleUserSessionId",
						"mbparam": "fields.finacleMbParam",
						"OTP_MODE":"rakHome.otpModel.otpModeSelected"
					},
					"successPage": {
						"pageName": "RakATMCashDepositeLimitChangePreview"
					},
					"errorPage": {
						"pageName": "RakATMCashDepositeLimitChangePreview"
					}
				}, {
					"eventName": "onATMCashDepositeLimitSubmitClick",
					"action": "RakATMCashDepositeLimitChangeSubmitService",
					"actionType": "service",
					"validation": "true",
					"validationParams": ["rakServiceReq.ATMCashDepositeLimitChangeReq.firstAuthModeValue",
						"rakServiceReq.ATMCashDepositeLimitChangeReq.secAuthModeValue"
					],
					"encryptionEnabled": true,
					"sensitiveFields": ["rakServiceReq.ATMCashDepositeLimitChangeReq.firstAuthModeValue",
						"rakServiceReq.ATMCashDepositeLimitChangeReq.secAuthModeValue"
					],
					"parameters": {
						"jsessionid": "fields.finacleUserSessionId",
						"mbparam": "fields.finacleMbParam",
						"Mode": "rakServiceReq.ATMCashDepositeLimitChangeReq.firstAuthModeValue",
						"SecMode": "rakServiceReq.ATMCashDepositeLimitChangeReq.secAuthModeValue"
					},
					"successPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakATMCashDepositeLimitChangeSuccess"
					},
					"errorPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakATMCashDepositeLimitChangePreview"
					}
				}],
				"RakATMCashDepositeLimitChangeSuccess": [{
					"eventName": "onRakServiceHomeClick",
					"action": "navigation",
					"actionType": "navigation",
					"validation": "false",
					"successPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakServicesLandingPage"
					},
					"errorPage": {
						"subFeature": "rakServiceReq",
						"pageName": "RakServicesLandingPage"
					}
				}],
		"RakDigitalAccessCardInit": [{
			"eventName": "onRakDACBlockClick",
			"action": "RakDigitalAccessCardBlockInit",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},
		{
				"eventName": "onDigitalAccessCardHomeBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDigitalAccessCardInit"
				}
			},
		{
			"eventName": "onRakDACPinIssuanceClick",
			"action": "RakDigitalAccessCardPinIssuanceInit",
			"actionType": "service",
			"validation": "false",
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakServicesLandingPage"
			}
		},
		{
			"eventName": "onRAKDigitalAccessCardBlockConfirmClick",
			"action": "RakDigitalAccessCardBlockConfirm",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.rakDigitalAccessCardBlock.selectedBlockCard",
			"rakServiceReq.rakDigitalAccessCardBlock.reason",
			"rakServiceReq.rakDigitalAccessCardBlock.selectedDACRequest",
			"rakServiceReq.rakDigitalAccessCardBlock.other"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"dacRequest": "rakServiceReq.rakDigitalAccessCardBlock.selectedDACRequest",
				"dacCardNo": "rakServiceReq.rakDigitalAccessCardBlock.selectedBlockCard",
				"reason": "rakServiceReq.rakDigitalAccessCardBlock.reason",
				"other": "rakServiceReq.rakDigitalAccessCardBlock.other"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			}
		},
		{
			"eventName": "onRAKDigitalAccessCardIssuanceConfirmClick",
			"action": "RakDigitalAccessCardIssuanceConfirm",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.rakDigitalAccessCardBlock.selectedUser",
			"rakServiceReq.rakDigitalAccessCardBlock.selectedDACRequest",
			"rakServiceReq.rakDigitalAccessCardBlock.embossingName"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"dacRequest": "rakServiceReq.rakDigitalAccessCardBlock.selectedDACRequest",
				"dacUser": "rakServiceReq.rakDigitalAccessCardBlock.selectedUser",
				"EMB_NAME": "rakServiceReq.rakDigitalAccessCardBlock.embossingName"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			}
		},
		{
			"eventName": "onRakDACPinReissueFetchOTPClick",
			"action": "RakDigitalAccessCardPinOTP",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.rakDigitalAccessCardBlock.selectedPinIssuanceCard"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SELECTED_CARD_INDEX": "rakServiceReq.rakDigitalAccessCardBlock.selectedPinIssuanceCard"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			}
		},
		{
			"eventName": "onRAKDigitalAccessCardPinIssuanceConfirmClick",
			"action": "RakDigitalAccessCardPinIssuanceConfirm",
			"actionType": "service",
			"validation": "true",
			"validationParams": ["rakServiceReq.rakDigitalAccessCardBlock.selectedPinIssuanceCard",
			"rakServiceReq.rakDigitalAccessCardBlock.enteredOTP",
			"rakServiceReq.rakDigitalAccessCardBlock.enteredCVV",
			"rakServiceReq.rakDigitalAccessCardBlock.dateOfBirth"],
			"parameters": {
				"jsessionid": "fields.finacleUserSessionId",
				"mbparam": "fields.finacleMbParam",
				"SELECTED_CARD_INDEX": "rakServiceReq.rakDigitalAccessCardBlock.selectedPinIssuanceCard",
				"OTP_RECEIVED": "rakServiceReq.rakDigitalAccessCardBlock.enteredOTP",
				"CARD_CVV": "rakServiceReq.rakDigitalAccessCardBlock.enteredCVV",
				"dacRequest": "rakServiceReq.rakDigitalAccessCardBlock.selectedDACRequest",
				"DATE_OF_BIRTH": "rakServiceReq.rakDigitalAccessCardBlock.dateOfBirth",
				"DATE_OF_BIRTH_day": "rakServiceReq.rakDigitalAccessCardBlock.dob_day",
				"DATE_OF_BIRTH_month": "rakServiceReq.rakDigitalAccessCardBlock.dob_month",
				"DATE_OF_BIRTH_year": "rakServiceReq.rakDigitalAccessCardBlock.dob_year"
			},
			"successPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardConfirm"
			},
			"errorPage": {
				"subFeature": "rakServiceReq",
				"pageName": "RakDigitalAccessCardInit"
			}
		}],
		"RakDigitalAccessCardConfirm": [
			{
				"eventName": "onGenerateOtp",
				"action": "RakResendOtpService",
				"actionType": "serviceNoNavigation",
				"validation": "false",
				"parameters": {
					"jsessionid": "fields.finacleUserSessionId",
					"mbparam": "fields.finacleMbParam",
					"OTP_MODE": "rakHome.otpModel.otpModeSelected"
				},
				"successPage": {
					"pageName": "RakDigitalAccessCardConfirm"
				},
				"errorPage": {
					"pageName": "RakDigitalAccessCardConfirm"
				}
			},
			{
				"eventName": "onDACBlockConfirmBackClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDigitalAccessCardInit"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDigitalAccessCardConfirm"
				}
			},
			{
               	   "eventName": "onDACReqConfirmClick",
		           "action": "RakDACReqConfirmService",
		           "actionType": "service",
		           "validation": "true",
				   "validationParams": ["rakHome.AuthPageData.firstAuthModeValue"],
			       "encryptionEnabled": true,
			       "sensitiveFields": ["rakHome.AuthPageData.firstAuthModeValue"],
		           "parameters": {
		           "jsessionid": "fields.finacleUserSessionId",
		           "mbparam": "fields.finacleMbParam",
		           "Mode": "rakHome.AuthPageData.firstAuthModeValue"
		           },
		           "successPage": {
		     		"subFeature": "rakServiceReq",
				   "pageName": "RakDigitalAccessCardSuccess"
		           },
		           "errorPage": {
		           "subFeature": "rakServiceReq",
				   "pageName": "RakDigitalAccessCardConfirm"
		           }
		       }
		],
		"RakDigitalAccessCardSuccess": [
			{
				"eventName": "onDigitalAccessCardSuccessOkClick",
				"action": "navigation",
				"actionType": "navigation",
				"validation": "false",
				"successPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakServicesLandingPage"
				},
				"errorPage": {
					"subFeature": "rakServiceReq",
					"pageName": "RakDigitalAccessCardSuccess"
				}
			}
		]
		
	}],
	"subFeatureName": "rakServiceReq",
	"startPage": "RakServicesLandingPage"
}